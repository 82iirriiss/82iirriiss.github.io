[{"permalink":"//","layout":"default","title":"jekyll-rtd-theme","content":"# jekyll-rtd-theme\n\n![CI](https://github.com/rundocs/jekyll-rtd-theme/workflows/CI/badge.svg?branch=develop)\n![jsDelivr](https://data.jsdelivr.com/v1/package/gh/rundocs/jekyll-rtd-theme/badge)\n\nJust another documentation theme compatible with GitHub Pages\n\n## What it does?\n\nThis theme is inspired by [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) and refactored with:\n\n- [@primer/css](https://github.com/primer/css)\n- [github-pages](https://github.com/github/pages-gem) ([dependency versions](https://pages.github.com/versions/))\n\n## Quick start\n\n```yml\nremote_theme: rundocs/jekyll-rtd-theme\n```\n\nYou can [generate](https://github.com/rundocs/starter-slim/generate) with the same files and folders from [rundocs/starter-slim](https://github.com/rundocs/starter-slim/)\n\n## Usage\n\nDocumentation that can guide how to create with Github pages, please refer to [rundocs.io](https://rundocs.io) for details\n\n## Features\n\n- Shortcodes (Toasts card, mermaid)\n- Pages Plugins (emoji, gist, avatar, mentions)\n- Auto generate sidebar\n- [Attribute List Definitions](https://kramdown.gettalong.org/syntax.html#attribute-list-definitions) (Primer/css utilities, Font Awesome 4)\n- Service worker (caches)\n- SEO (404, robots.txt, sitemap.xml)\n- Canonical Link (Open Graph, Twitter Card, Schema data)\n\n## Options\n\n| name | default value | description |\n| ------------- | -------------------- | ----------------- |\n| `title` | repo name | |\n| `description` | repo description | |\n| `url` | user domain or cname | |\n| `baseurl` | repo name | |\n| `lang` | `en` | |\n| `direction` | `auto` | `ltr` or `rtl` |\n| `highlighter` | `rouge` | Cannot be changed |\n\n```yml\n# folders sort\nreadme_index:\n with_frontmatter: true\n\nmeta:\n key1: value1\n key2: value2\n .\n .\n .\n\ngoogle:\n gtag:\n adsense:\n\nmathjax: # this will prased to json, default: {}\n\nmermaid:\n custom: # mermaid link\n initialize: # this will prased to json, default: {}\n\nscss: # also _includes/extra/styles.scss\nscript: # also _includes/extra/script.js\n\ntranslate:\n # shortcodes\n danger:\n note:\n tip:\n warning:\n # 404\n not_found:\n # copyright\n revision:\n # search\n searching:\n search:\n search_docs:\n search_results:\n search_results_found: # the \"#\" in this translate will replaced with results size!\n search_results_not_found:\n\nplugins:\n - jemoji\n - jekyll-avatar\n - jekyll-mentions\n```\n\n## The license\n\nThe theme is available as open source under the terms of the MIT License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"sort":null,"permalink":"/python/tip/","layout":"default","title":"python 코딩 Tip!","content":"<h1 id=\"python-코딩-tip\">python 코딩 Tip!</h1>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/tip/README.md</code></p>\n","dir":"/python/tip/","name":"README.md","path":"python/tip/README.md","url":"/python/tip/"},{"sort":1,"layout":"default","title":"새로운 애플리케이션 만들기","content":"<h1 id=\"1-새로운-애플리케이션-만들기\">1. 새로운 애플리케이션 만들기</h1>\n<blockquote>\n <p>‘books’ 어플리케이션을 추가할 것이다.</p>\n</blockquote>\n\n<ul>\n <li>순서\n <ul>\n <li>어플리케이션 설계하기</li>\n <li>프로젝트 뼈대 만들기</li>\n <li>애플리케이션 - Model 코딩하기</li>\n <li>애플리케이션 - URLconf 코딩하기</li>\n <li>애플리케이션 - View 코딩하기</li>\n <li>애플리케이션 - Template 코딩하기</li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"1-애플리케이션-설계\">1. 애플리케이션 설계</h2>\n\n<h3 id=\"1-ui-설계\">(1) UI 설계</h3>\n\n<table>\n <thead>\n <tr>\n <th>index.html</th>\n <th>book_list.html</th>\n <th>book_detail.html</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>. Book<br />. Author<br />. Publisher</td>\n <td>. Python Web Programming<br />. Design Pattern<br />. Effective Java</td>\n <td>. Author:S.H.Kim<br />. Publisher:HanBit<br />. Publication date:March 1, 2015</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"2-model-설계\">(2) Model 설계</h3>\n\n<h4 id=\"2-1-book\">(2)-1. Book</h4>\n\n<table>\n <thead>\n <tr>\n <th>컬럼명</th>\n <th>타입</th>\n <th>제약조건</th>\n <th>설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>id</td>\n <td>integer</td>\n <td>NotNull, Pk, AutoIncrement</td>\n <td>Pk</td>\n </tr>\n <tr>\n <td>title</td>\n <td>varchar(100)</td>\n <td>NotNull</td>\n <td>책제목</td>\n </tr>\n <tr>\n <td>authors</td>\n <td>integer</td>\n <td>NotNull, MTM(Author.id), index</td>\n <td>Many-To-Many</td>\n </tr>\n <tr>\n <td>publisher</td>\n <td>integer</td>\n <td>NotNull, FK(publisher.id), index</td>\n <td>Fk</td>\n </tr>\n <tr>\n <td>publication_date</td>\n <td>date</td>\n <td>NotNull</td>\n <td>책 출판일</td>\n </tr>\n </tbody>\n</table>\n\n<h4 id=\"2-2-author\">(2)-2. Author</h4>\n\n<table>\n <thead>\n <tr>\n <th>컬럼명</th>\n <th>타입</th>\n <th>제약조건</th>\n <th>설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>id</td>\n <td>integer</td>\n <td>NotNull, Pk, AutoIncrement</td>\n <td>Pk</td>\n </tr>\n <tr>\n <td>salutation</td>\n <td>varchar(100)</td>\n <td>NotNull</td>\n <td>저자 인사말</td>\n </tr>\n <tr>\n <td>name</td>\n <td>varchar(50)</td>\n <td>NotNull</td>\n <td>저자 성명</td>\n </tr>\n <tr>\n <td>email</td>\n <td>varchar(50)</td>\n <td>NotNull</td>\n <td>저자 이메일</td>\n </tr>\n </tbody>\n</table>\n\n<h4 id=\"2-3-publisher\">(2)-3. Publisher</h4>\n\n<table>\n <thead>\n <tr>\n <th>컬럼명</th>\n <th>타입</th>\n <th>제약조건</th>\n <th>설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>id</td>\n <td>integer</td>\n <td>NotNull, Pk, AutoIncrement</td>\n <td>Pk</td>\n </tr>\n <tr>\n <td>name</td>\n <td>varchar(50)</td>\n <td>NotNull</td>\n <td>출판사 이름</td>\n </tr>\n <tr>\n <td>address</td>\n <td>varchar(200)</td>\n <td>NotNull</td>\n <td>출판사 주소</td>\n </tr>\n <tr>\n <td>website</td>\n <td>url</td>\n <td>NotNull</td>\n <td>출판사 웹사이트</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"3-뷰-흐름-설계\">(3) 뷰 흐름 설계</h3>\n\n<table>\n <thead>\n <tr>\n <th>URL</th>\n <th>View</th>\n <th>Template</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>/books/</td>\n <td>BooksModelView.as_view()</td>\n <td>index.html</td>\n </tr>\n <tr>\n <td>/books/book/</td>\n <td>BookList.as_view()</td>\n <td>book_list.html</td>\n </tr>\n <tr>\n <td>/books/author/</td>\n <td>AuthorList.as_view()</td>\n <td>author_list.html</td>\n </tr>\n <tr>\n <td>/books/publisher/</td>\n <td>PublisherList.as_view()</td>\n <td>publisher_list.html</td>\n </tr>\n <tr>\n <td>/books/book/3/</td>\n <td>BookDetail.as_view()</td>\n <td>book_detail.html</td>\n </tr>\n <tr>\n <td>/books/author/3/</td>\n <td>AuthorDetail.as_view()</td>\n <td>author_detail.html</td>\n </tr>\n <tr>\n <td>/books/publisher/3/</td>\n <td>PublisherDetail.as_view()</td>\n <td>publisher_detail.html</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"2-애플리케이션---뼈대-만들기\">2. 애플리케이션 - 뼈대 만들기</h2>\n\n<ol>\n <li>\n\n <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">ch3&gt;</span>python manage.py startapp books   \n</code></pre>  </div> </div>\n </li>\n <li>\n <p>settings.py 파일의 INSTALLED_APPS 항목에 books 어플리케이션 설정 클래스 등록</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\"># settings.py\n</span>\n <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n <span class=\"s\">'django.contrib.admin'</span><span class=\"p\">,</span>\n <span class=\"s\">'django.contrib.auth'</span><span class=\"p\">,</span>\n <span class=\"s\">'django.contrib.contenttypes'</span><span class=\"p\">,</span>\n <span class=\"s\">'django.contrib.sessions'</span><span class=\"p\">,</span>\n <span class=\"s\">'django.contrib.messages'</span><span class=\"p\">,</span>\n <span class=\"s\">'django.contrib.staticfiles'</span><span class=\"p\">,</span>\n <span class=\"s\">'polls.apps.PollsConfig'</span><span class=\"p\">,</span>\n <span class=\"s\">'books.apps.BooksConfig'</span><span class=\"p\">,</span>\n <span class=\"p\">]</span>\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"3-애플리케이션---model-코딩하기\">3. 애플리케이션 - Model 코딩하기</h2>\n\n<ul>\n <li>순서</li>\n</ul>\n\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">ch3/books&gt;</span><span class=\"w\"> </span>vim models.py    // 테이블 정의\n<span class=\"gp\">ch3/books&gt;</span><span class=\"w\"> </span>vim admins.py    // 테이블을 admin 사이트에 등록함\n<span class=\"gp\">ch3&gt;</span><span class=\"w\"> </span>python manage.py makemigrations    //db의 변경사항을 추출함\n<span class=\"gp\">ch3&gt;</span><span class=\"w\"> </span>python manage.py migrate       //db의 변경사항을 반영함\n<span class=\"gp\">ch3&gt;</span><span class=\"w\"> </span>python manage.py runserver     //반영여부를 웹브라우저에서 확인함\n</code></pre>  </div></div>\n\n<ol>\n <li>\n <p>models.py 파일에 테이블 정의</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\"># books/models.py\n</span>\n <span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n <span class=\"c1\"># Create your models here.\n</span> <span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n <span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n     <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n     <span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"s\">'Author'</span><span class=\"p\">)</span>\n     <span class=\"n\">publisher</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s\">'Publisher'</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n     <span class=\"n\">publication_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">()</span>\n\n     <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n         <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">title</span>\n\n <span class=\"k\">class</span> <span class=\"nc\">Author</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n     <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n     <span class=\"n\">salutation</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n     <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">EmailField</span><span class=\"p\">()</span>\n\n     <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n         <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">name</span>\n\n <span class=\"k\">class</span> <span class=\"nc\">Publisher</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n     <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n     <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n     <span class=\"n\">website</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">URLField</span><span class=\"p\">()</span>\n\n     <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n         <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">name</span>\n</code></pre>  </div> </div>\n\n <ul>\n <li>참고 : <a href=\"https://docs.djangoproject.com/en/3.1/ref/models/fields/\">https://docs.djangoproject.com/en/3.1/ref/models/fields/</a></li>\n <li>테이블 관계를 나타내는 필드\n <ul>\n <li>N:1 - ForeignKey(on_delete 옵션 필수)</li>\n <li>N:N - ManyToManyField</li>\n <li>1:N - OneToOneField</li>\n </ul>\n </li>\n </ul>\n </li>\n <li>\n <p>admins.py 파일에 등록 : admin 사이트에 나오도록 함</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\"># books/admins.py\n</span>\n <span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n <span class=\"c1\"># Register your models here.\n</span> <span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n <span class=\"kn\">from</span> <span class=\"nn\">books.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span><span class=\"p\">,</span> <span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">Publisher</span>\n\n <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Book</span><span class=\"p\">)</span>\n <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">)</span>\n <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Publisher</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>작업 반영하기</p>\n\n <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\"> ch3&gt;</span>python manage.py makemigrations\n<span class=\"gp\"> ch3&gt;</span>python manage.py migrate\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>작업 확인하기</p>\n <ul>\n <li>console에 <code class=\"language-plaintext highlighter-rouge\">python manage.py runserver</code> 로 테스트서버를 가동 시킨 후, 웹사이트에 ‘http://localhost:8000/admin’ 으로 접속하여 등록한 테이블이 보이는지 확인한다.</li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"4-애플리케이션---urlconf-코딩\">4. 애플리케이션 - URLconf 코딩</h2>\n\n<h3 id=\"1-mysiteurlspy-파일에-books-어플리케이션-index-url을-등록\">(1) mysite/urls.py 파일에 books 어플리케이션 index url을 등록</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">HomeView</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">'home'</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'admin/'</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'polls/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s\">'polls.urls'</span><span class=\"p\">)),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'books/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s\">'books.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h3 id=\"2-booksurlspy-파일에-books-어플리케이션-url을-등록\">(2) books/urls.py 파일에 books 어플리케이션 url을 등록</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n\n<span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"s\">'books'</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># /books/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">BooksModelView</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'index'</span><span class=\"p\">),</span>\n    <span class=\"c1\"># /books/book/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'book/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">BookList</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'book_list'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : ListView \n</span>    <span class=\"c1\"># /books/author/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'author/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">AuthorList</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'author_list'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : ListView\n</span>    <span class=\"c1\"># /books/publichser/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'publisher/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">PublisherList</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'publisher_list'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : ListView\n</span>    <span class=\"c1\"># /books/book/99\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'book/&lt;int:pk&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">BookDetail</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'book_detail'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : DetailView\n</span>    <span class=\"c1\"># /books/author/99\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'author/&lt;int:pk&gt;'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">AuthorDetail</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'author_detail'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : DetailView\n</span>    <span class=\"c1\"># /books/publisher/99\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'publisher/&lt;int:pk&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">PublisherDetail</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'publisher_detail'</span><span class=\"p\">),</span> <span class=\"c1\"># 뷰 클래스 : DetailView\n</span><span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h2 id=\"5-애플리케이션---클래스형-뷰-코딩하기\">5. 애플리케이션 - 클래스형 뷰 코딩하기</h2>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">ListView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">DetailView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">books.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span><span class=\"p\">,</span> <span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">Publisher</span>\n\n<span class=\"c1\"># Create your views here.\n</span>\n<span class=\"c1\"># 템플릿 뷰만 모델링하여 사용하는 경우 TemplateView 사용\n</span><span class=\"k\">class</span> <span class=\"nc\">BooksModelView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"c1\"># template_name 오버라이드 필수\n</span>    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'books/index.html'</span>\n\n    <span class=\"c1\"># 템플릿 파일에 넘겨줘야 할 데이터가 있는경우 get_context_data 오버라이드\n</span>    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># get_context_data를 오버라이드 할때는 반드시 첫줄에 super() 메소드를 호출해야 한다.\n</span>        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s\">'model_list'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'Book'</span><span class=\"p\">,</span> <span class=\"s\">'Author'</span><span class=\"p\">,</span> <span class=\"s\">'Publisher'</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BookList</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"c1\"># model 테이블에 들어있는 모든 레코드를 가져와 구성하는 경우에는 테이블명만 지정해 주면 된다.\n</span>    <span class=\"c1\"># object_list 속성 자동구성\n</span>    <span class=\"c1\"># 템플릿 파일 모델명_list.html 자동구성\n</span>    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorList</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Author</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PublisherList</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Publisher</span>\n\n<span class=\"c1\"># pk로 조회해서 특정 객체를 가져오는 경우에는 테이블명만 명시 해주면 된다.\n# 컨텍스트 변수로 object 를 자동으로 사용함\n# 템플릿 파일을 모델명_detail.html 로 자동으로 사용함\n</span><span class=\"k\">class</span> <span class=\"nc\">BookDetail</span><span class=\"p\">(</span><span class=\"n\">DetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorDetail</span><span class=\"p\">(</span><span class=\"n\">DetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Author</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PublisherDetail</span><span class=\"p\">(</span><span class=\"n\">DetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Publisher</span>\n</code></pre>  </div></div>\n<ul>\n <li>ListView, DetailView, TemplateView의 설명은 주석을 참고</li>\n</ul>\n\n<h2 id=\"6-애플리케이션---template-코딩\">6. 애플리케이션 - Template 코딩</h2>\n\n<h3 id=\"1-urlviewtemplate-맵핑관계\">(1) URL/VIEW/TEMPLATE 맵핑관계</h3>\n\n<table>\n <tbody>\n <tr>\n <td>URL 패턴</td>\n <td>VIEW</td>\n <td>TEMPLATE 파일명</td>\n </tr>\n <tr>\n <td>/books/</td>\n <td>BooksModelView</td>\n <td>index.html</td>\n </tr>\n <tr>\n <td>/books/book</td>\n <td>BookList</td>\n <td>book_list.html</td>\n </tr>\n <tr>\n <td>/books/author/</td>\n <td>AuthorList</td>\n <td>author_list.html</td>\n </tr>\n <tr>\n <td>/books/publisher/</td>\n <td>PublisherList</td>\n <td>publisher_list.html</td>\n </tr>\n <tr>\n <td>/books/book/3/</td>\n <td>BookDetail</td>\n <td>book_detail.html</td>\n </tr>\n <tr>\n <td>/books/auathor/3/</td>\n <td>AuthorDetail</td>\n <td>author_detail.html</td>\n </tr>\n <tr>\n <td>/books/publisher/3/</td>\n <td>PublisherDetail</td>\n <td>publisher_detail.html</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"2-layout-만들기--3단계-권장\">(2) Layout 만들기 : 3단계 권장</h3>\n\n<pre><code class=\"language-mermaid\">graph LR\na(base.html)--&gt;|extends|b(base_books.html)--&gt;|extends|c(book_list.html&lt;br&gt;book_detail.html)\n</code></pre>  \n\n<ul>\n <li>ch3/templates/base.html\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  &lt;!DOCTYPE html&gt;\n  &lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n      {% load static %}\n      &lt;link rel=\"stylesheet\" href=\"{% static 'admin/css/base.css' %}\" /&gt;\n      &lt;meta charset=\"UTF-8\"&gt;\n      &lt;title&gt;{% block title %}My Amazing Site{% endblock %}&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;div id=\"sidebar\"&gt;\n          {% block sidebar %}\n          &lt;ul&gt;\n              &lt;li&gt;&lt;a href=\"/\"&gt;Project_Home&lt;/a&gt; &lt;/li&gt;\n              &lt;li&gt;&lt;a href=\"/admin/\"&gt;Admin&lt;/a&gt; &lt;/li&gt;\n          &lt;/ul&gt;\n          {% endblock %}\n          &lt;br&gt;\n      &lt;/div&gt;\n\n      &lt;div id=\"content\"&gt;\n          {% block content %}{% endblock %}\n      &lt;/div&gt;\n  &lt;/body&gt;\n  &lt;/html&gt;\n    \n</code></pre>  </div> </div>\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">load static</code> 으로 static 이라는 사용자 정의 태그 로딩 후, <code class=\"language-plaintext highlighter-rouge\">static</code> 사용자 정의 태그를 통해 admin/css/base.css 스타일 파일을 찾게 함</li>\n </ul>\n </li>\n <li>ch3/templates/base_books.html\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  {% extends 'base.html' %}\n\n  &lt;title&gt;{% block title %}Books Application Site{% endblock title %}&lt;/title&gt;\n  {% block sidebar %}\n      {{ block.super }}\n      &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"/books/\"&gt;Books_Home&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n  {% endblock sidebar %}\n    \n</code></pre>  </div> </div>\n <ul>\n <li>sidebar 블록을 이어쓰려면, 를 필수로 해 주어야 함</li>\n </ul>\n </li>\n <li>ch3/books/templates/books/book_detail.html (나머지 author_detail.html, publisher_detail.html 도 유사함)\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  {% extends 'base_books.html' %}\n\n  {% block content %}\n      &lt;h1&gt;{{ object.title }}&lt;/h1&gt;\n      &lt;br&gt;\n      &lt;li&gt;Authors:\n          {% for author in object.authors.all %}\n              {{ author }}\n          {% if not forloop.last %},\n          {% else %}\n          {% endif %}\n          {% endfor %}\n      &lt;/li&gt;\n      &lt;li&gt;Publisher: {{ object.publisher }}&lt;/li&gt;\n      &lt;li&gt;Publication Date: {{ object.publication_date }}&lt;/li&gt;\n  {% endblock content %}\n    \n</code></pre>  </div> </div>\n <ul>\n <li>DetailView 에서는 모델의 조회 결과를 object 파라미터로 넘겨 주므로 object 파라미터를 사용함</li>\n </ul>\n </li>\n <li>ch3/books/templates/books/book_list.html(나머지 author_list.html, publisher_list.html 도 유사함)\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  {% extends \"base_books.html\" %}\n  {% block title %} Book List {% endblock title %}\n  {% block content %}\n  &lt;h2&gt;Book List&lt;/h2&gt;\n      &lt;ul&gt;\n          {% for book in object_list %}\n          &lt;li&gt;&lt;a href=\"{% url 'books:book_detail' book.id %}\" &gt;{{ book.title }}&lt;/a&gt;&lt;/li&gt;\n          {% endfor %}\n      &lt;/ul&gt;\n  {% endblock content %}\n    \n</code></pre>  </div> </div>\n <ul>\n <li>ListView 에서는 모델의 조회 결과를 object 파라미터로 넘겨 주므로 object 파라미터를 사용함</li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"7-home-페이지-작성\">7. home 페이지 작성</h2>\n<ul>\n <li>(http://localhost:8000) 접속 시 보여지는 첫 페이지</li>\n</ul>\n\n<ol>\n <li>mysite/urls.py ‘urlpatterns’에 경로 추가\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\"> path('', views.HomeView.as_view(), name='home'),</code></li>\n </ul>\n </li>\n <li>\n <p>mysite/views.py 에 하기 코딩 추가</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n <span class=\"kn\">from</span> <span class=\"nn\">django.apps</span> <span class=\"kn\">import</span> <span class=\"n\">apps</span>\n\n <span class=\"k\">class</span> <span class=\"nc\">HomeView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n     <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'home.html'</span>\n\n     <span class=\"c1\"># 템플릿에 데이터를 전달하려면 get_context_data를 오버라이딩 해야 함\n</span>     <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n         <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n         <span class=\"c1\"># context['app_list'] = ['polls','books']\n</span>         <span class=\"n\">dictVerbose</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n         <span class=\"c1\"># 각 애플리케이션의 apps.py 에 선언된 속성들의 값을 순회\n</span>         <span class=\"k\">for</span> <span class=\"n\">app</span> <span class=\"ow\">in</span> <span class=\"n\">apps</span><span class=\"p\">.</span><span class=\"n\">get_app_configs</span><span class=\"p\">():</span>\n             <span class=\"c1\"># 그 중, site-packages 에 있는 app 속성은 외브 라이브러리 이므로, 제외하는 코딩\n</span>             <span class=\"k\">if</span> <span class=\"s\">'site-packages'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n                 <span class=\"n\">dictVerbose</span><span class=\"p\">[</span><span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"p\">.</span><span class=\"n\">name</span>\n\n         <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s\">'verbose_dict'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dictVerbose</span>\n         <span class=\"k\">return</span> <span class=\"n\">context</span>\n\n</code></pre>  </div> </div>\n <ul>\n <li>주석 참조</li>\n </ul>\n </li>\n <li>\n <p>home.html 작성</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n {% extends 'base.html' %}\n\n {% block content %}\n     &lt;h2&gt;YMkim Django Application&lt;/h2&gt;\n     &lt;ul&gt;\n         {% for key, value in verbose_dict.items %}\n             {% with key|add:\":\"|add:\"index\" as urlvar %}\n                 &lt;li&gt;&lt;a href=\"{% url urlvar %}\"&gt;{{ value }}&lt;/a&gt;&lt;/li&gt;\n             {% endwith %}\n         {% endfor %}\n     &lt;/ul&gt;\n {% endblock content %}\n    \n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"8-polls-애플리케이션---클래스-형-뷰로-전환\">8. Polls 애플리케이션 - 클래스 형 뷰로 전환</h2>\n<ul>\n <li>github에 올려 둔 소스를 참고하세요.\n <ul>\n <li>github 주소 : <a href=\"https://github.com/82iirriiss/python_basic_project\">https://github.com/82iirriiss/python_basic_project</a></li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"9-로그-추가하기\">9. 로그 추가하기</h2>\n\n<ol>\n <li>\n <p>로그 디렉토리 생성\n<code class=\"language-plaintext highlighter-rouge\">ch3&gt;mkdir logs</code></p>\n </li>\n <li>\n <p>settings.py 파일에 로그 설정하기</p>\n <ul>\n <li>각 컴포넌트 (formatters, handlers, loggers, filters)는 모두 ‘s’로 끝나니 철자 주의할 것</li>\n </ul>\n </li>\n</ol>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s',\n            'datefmt': '%d/%b/%Y %H:%M:%S'\n        },\n    },\n    'handlers': {\n            'file': {\n                'level': 'DEBUG',\n                'class': 'logging.FileHandler',\n                'filename': os.path.join(BASE_DIR, 'logs', 'mysite.log'),\n                'formatter': 'verbose'\n            }\n    },\n    'loggers': {\n        'polls': {\n            'handlers': ['file'],\n            'level': 'DEBUG'\n        }\n    }\n}\n</code></pre>  </div></div>\n\n","dir":"/python/extendExampleProject/","name":"addNewApplication.md","path":"python/extendExampleProject/addNewApplication.md","url":"/python/extendExampleProject/addNewApplication.html"},{"sort":1,"layout":"default","title":"프로젝트 패키지 구성, 네이밍, 설계","content":"<h1 id=\"프로젝트-패키지-구성-네이밍-설계\">프로젝트 패키지 구성, 네이밍, 설계</h1>\n\n<blockquote>\n <p>3티어 방식 : Presentation &lt;-&gt; Business &lt;-&gt; Persistence 로 구성 <br />\nPresentation 계층 : 화면에 보여주는 기술 사용, MVC(Servlet/Controller), JSP <br />\nBusiness 계층 : 순수 비지니스 로직, 네이밍은 <code class=\"language-plaintext highlighter-rouge\">xxxService</code> 클래스와 <code class=\"language-plaintext highlighter-rouge\">xxxServiceImpl</code> 인터페이스로 구성, 메서드 이름은 주로 고객에 사용하는 용어 사용. <br />\nPersistence 계층 : 데이터베이스 처리, 개발자가 사용하는 용어 사용. <code class=\"language-plaintext highlighter-rouge\">Mapper</code> 인터페이스와 <code class=\"language-plaintext highlighter-rouge\">XML</code> 설정파일로 구성함.</p>\n</blockquote>\n\n<h2 id=\"1-naming-conversion--명명규칙-\">1. Naming Conversion ( 명명규칙 )</h2>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">xxxController</code> : Controller 클래스</li>\n <li><code class=\"language-plaintext highlighter-rouge\">xxxService, xxxServiceImpl</code> : 비지니스 영역의 인터페이스는 <code class=\"language-plaintext highlighter-rouge\">xxxService</code>, 구현은 <code class=\"language-plaintext highlighter-rouge\">xxxServiceImpl</code> 사용</li>\n <li><code class=\"language-plaintext highlighter-rouge\">xxxVO</code> : 불변성이 강한 데이터베이스의 테이블의 속성을 옮겨놓은 성격이 강함. read-Only의 목적이 강함.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">xxxDTO</code> : 주로 데이터 수집의 용도가 강함. 웹 화면에서 쓰는 속성의 경우.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">xxxMapper</code> : Service 인터페이스와 mybatis xml (sql 관리) 파일을 연결하는 인터페이스 파일.</li>\n</ol>\n\n<h2 id=\"2-패키지-구성-및-패키지-네이밍\">2. 패키지 구성 및 패키지 네이밍</h2>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.config</code> : WebConfig.java, RootConfig.java, ServletConfig.java 등 설정 클래스들이 모인 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.controller</code> : xxxController.java 파일이 모인 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.service</code> : xxxService 인터페이스가 모인 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.service.impl</code> : xxxServiceImpl 구현 클래스가 모인 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.domain</code> : xxxVO, xxxDTO 파일들이 모인 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.persistence</code> : MyBatis Mapper 인터페이스 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.exception</code> : 웹 관련 예외 처리 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.aop</code> : 스프링 aop 관련 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.security</code> : 스프링 시큐리티 관련 패키지</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.util</code> : 각종 유틸리티 클래스 관련 패키지</li>\n</ol>\n\n<h2 id=\"3-설계-과정\">3. 설계 과정</h2>\n\n<ol>\n <li>고객의 요구사항 인식\n <ul>\n <li>고객이 게시판에 글을 등록한다.</li>\n </ul>\n </li>\n <li>고객 요구사항 분석 설계 : 어느정도까지 설계가 가능한지 범위를 정해야 함</li>\n <li>능숙한 팀원이 많다면 세세한 작업부터, 능숙한 팀원이 많지 않다면 눈에 보이는 결과를 만들어 내는 형태로 진행</li>\n <li>요구사항에 따른 화면 설계\n <ul>\n <li>어떤 내용들을 입력할 것인가? -&gt; 테이블이나 클래스의 멤버 변수가 추출됨</li>\n <li>스토리 보드 작성시, Mock-up 툴 이용 : PowerPoint, Balsamiq studio, Pencil Mockup 등 SW 이용</li>\n <li>화면의 흐름에 따라 url 설계</li>\n </ul>\n </li>\n</ol>\n","dir":"/spring5/3_webDev/","name":"1_architect.md","path":"spring5/3_webDev/1_architect.md","url":"/spring5/3_webDev/1_architect.html"},{"sort":1,"layout":"default","title":"시작하기","content":"# 시작하기\n\n### 스네이크와 캐멀케이스\n1. LoginStat 과 같은 캐멀케이스는 클래스 정의 할 때 사용\n2. login_stat 과 같은 스네이크는, 함수와 변수의 식별자로 사용\n3. loginStat 과 같은 첫문자가 소문자인 캐멀케이스는 사용하지 않음\n\n### 주석\n1. 앞에 '#'를 붙여준다.\n\n### 명령문의 줄이 너무 길어 질 때\n1. \\ 를 사용하여 줄바꿈해서 코드를 입력한다\n```python\nif a == 1 \\\n or a == 3 \\\n or a == 5 \\\n or a == 7 \\\n or a == 9 :\n print(\"홀수\")\n```\n\n### 문자열 앞의 특수문자\n- b` : 바이너리 데이터를 의미\n","dir":"/python-grammar/","name":"gettingStart.md","path":"python-grammar/gettingStart.md","url":"/python-grammar/gettingStart.html"},{"sort":1,"layout":"default","title":"어노테이션","content":"<h1 id=\"어노테이션\">어노테이션</h1>\n\n<h2 id=\"autowired\">@Autowired</h2>\n<ul>\n <li>자신에게 해당 타입의 빈을 주입해주라는 표시(주입: 해당 타입의 빈 인스턴스를 생성해 달라는 의미)</li>\n</ul>\n\n<h2 id=\"allargsconstructor\">@AllArgsConstructor</h2>\n<ul>\n <li>Lombok 애노테이션</li>\n <li>모든 인스턴스 변수를 파라미터로 받는 생성자를 자동 생성 (ex. Restaurant(Chef))</li>\n</ul>\n\n<h2 id=\"requiredargsconstructor\">@RequiredArgsConstructor</h2>\n<ul>\n <li>@NonNull 이나 final이 붙은 인스턴스 변수에 대한 생성자 생성</li>\n</ul>\n\n<h2 id=\"configuration\">@Configuration</h2>\n<ul>\n <li>자바 설정파일에 선언</li>\n <li>ex: RootConfig.java</li>\n</ul>\n\n<h2 id=\"componentscan\">@ComponentScan</h2>\n<ul>\n <li>의존성 주입을 위해 bean을 검색하기 위해 설정하는 RootConfig.java 에 선언</li>\n <li>ApplicationContext가 @ComponentScan 을 통해 지정된 패키지를 스캔하면서 @Component 가 붙은 클래스들의 인스턴스를 생성함.</li>\n <li>@ComponentScan(basePackages={“org.test.sample”} )</li>\n</ul>\n\n<h2 id=\"component\">@Component</h2>\n<ul>\n <li>해당 클래스가 스프링에서 객체로 만들어 관리하는 대상임을 명시, @ComponentScan을 통해 @Component가 있는 객체들을 조사함.</li>\n</ul>\n\n<h2 id=\"data\">@Data</h2>\n<ul>\n <li>@ToString, @EqualsAndHashCode, @Getter/@Setter, @RequiredArgsConstructor를 모두 생성해주는 Lombok 어노테이션</li>\n</ul>\n","dir":"/spring5/9_QNA/","name":"1_annotation.md","path":"spring5/9_QNA/1_annotation.md","url":"/spring5/9_QNA/1_annotation.html"},{"sort":1,"layout":"default","title":"아파치 웹 서버와 연동","content":"<h1 id=\"아파치-웹-서버와-연동\">아파치 웹 서버와 연동</h1>\n<blockquote>\n <p>아파치 웹서버 프로그램 : httpd <br />\n아파치 웹서버와 장고 연동 프로그램 : mod_wsgi</p>\n</blockquote>\n\n<h2 id=\"1-리눅스-환경-설정\">1. 리눅스 환경 설정</h2>\n<p>. CentOs 7~\n. Python3.6 (Centos 7~8이 Python3.6까지 지원하고 있음)</p>\n\n<h3 id=\"1-리눅스-기본-설정\">(1) 리눅스 기본 설정</h3>\n<ol>\n <li>리눅스에서 배포할 사용자로 로그인 ( 나의 경우, centos 사용자로 로그인)</li>\n <li>dnf (centos 패키지 관리프로그램) 업데이트 : <code class=\"language-plaintext highlighter-rouge\">sudo dnf update</code></li>\n <li>python 설치\n<code class=\"language-plaintext highlighter-rouge\">$ sudo dnf install python3.*</code></li>\n <li>http, http-devel 설치 (작성 당시 2.4)\n<code class=\"language-plaintext highlighter-rouge\">$ sudo dnf install http http-devel</code></li>\n <li>git 설치\n<code class=\"language-plaintext highlighter-rouge\">$ sudo dnf install git</code></li>\n</ol>\n\n<h3 id=\"2-python-가상환경-설정-및-장고-설치\">(2) python 가상환경 설정 및 장고 설치</h3>\n<ol>\n <li>파이썬 가상환경을 만들 디렉토리 생성\n<code class=\"language-plaintext highlighter-rouge\">/home/centos&gt; mkdir VENV</code></li>\n <li>가상환경 디렉토리로 이동 후, 가상환경 설치\n <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">/home/centos&gt;</span><span class=\"w\"> </span><span class=\"nb\">cd </span>VENV\n<span class=\"gp\">/home/contos&gt;</span><span class=\"w\"> </span>virtualenv <span class=\"nt\">--python</span> python3.6 v3PyBook \n</code></pre>  </div> </div>\n <ul>\n <li>‘python3.6’버전을 설치하며, 설치할 장소는 ‘v3PyBook’ 으로 지정</li>\n </ul>\n </li>\n <li>가상환경 실행\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/home/centos&gt; source VENV/v3PyBook/bin/activate\n(v3PyBook)/home/centos&gt;\n</code></pre>  </div> </div>\n </li>\n <li>가상환경에서 Django 설치 (관리자 권한에서 설치)\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(v3PyBook)/home/centos&gt; su\npassword: [root 사용자 비밀번호 입력]\n(v3PyBook)/home/centos&gt; pip install Django==2.0\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"2-프로젝트-설정-변경\">2. 프로젝트 설정 변경</h2>\n\n<h3 id=\"1-프로젝트-다운로드\">(1) 프로젝트 다운로드</h3>\n<ol>\n <li>프로젝트를 다운받을 디렉토리를 생성 후, 해당 디렉토리로 이동\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/home/centos&gt; mkdir pyBook\n/home/centos&gt; cd pyBook\n</code></pre>  </div> </div>\n </li>\n <li><strong>github</strong>에서 프로젝트를 다운로드 받는다. (교재의 소스를 다운받았다.)\n<code class=\"language-plaintext highlighter-rouge\">/home/centos/pyBook&gt;git clone 'https://github.com/millni/Django-hanbit.git'</code></li>\n <li>프로젝트의 이름을 ‘ch8(임의의 이름)’으로 변경한다.\n<code class=\"language-plaintext highlighter-rouge\">/home/centos/pyBook&gt;mv python-project ch8</code></li>\n</ol>\n\n<h3 id=\"2-프로젝트-settingspy-파일-변경\">(2) 프로젝트 settings.py 파일 변경</h3>\n<p>. ch8/mysite/settings.py 파일</p>\n\n<ol>\n <li>DEBUG 모드 변경 : 운영모드로 전환\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># DEBUG = True\n</span><span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n</code></pre>  </div> </div>\n </li>\n <li>ALLOWED_HOST 변경 : 아파치 서버의 ip (현재는 아파치와 프로젝트가 같은 PC 이므로 꼭 변경이 필요하지 않음)\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># ALLOWED_HOST = ['localhost','127.0.0.1']\n</span><span class=\"n\">ALLOWED_HOST</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'192.168.111.100'</span><span class=\"p\">,</span><span class=\"s\">'localhost'</span><span class=\"p\">,</span><span class=\"s\">'127.0.0.1'</span><span class=\"p\">]</span>\n</code></pre>  </div> </div>\n </li>\n <li>STATIC_ROOT 경로 추가\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">STATIC_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'www_dir'</span><span class=\"p\">,</span> <span class=\"s\">'static'</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h3 id=\"3-static-파일-모으기\">(3) STATIC 파일 모으기</h3>\n<p>. (가상환경에서 실행)</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(v3PyBook)/home/centos/pyBook/ch8&gt; python manage.py collectstatic \n</code></pre>  </div></div>\n\n<h3 id=\"4-secret_key-변경--하드코딩---파일\">(4) SECRET_KEY 변경 : 하드코딩 -&gt; 파일</h3>\n\n<ol>\n <li>settings.py 변경\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># SECRET_KEY = 어쩌구저쩌구~~\n</span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'www_dir'</span><span class=\"p\">,</span> <span class=\"s\">'secret_key.txt'</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">().</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n</code></pre>  </div> </div>\n </li>\n <li>secret_key.txt 파일 생성 후 키 입력\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/home/centos/pyBook/ch8/www_dir&gt; vim secret_key.txt\n어쩌구저쩌구~~~\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h3 id=\"5-dbsqlite3-파일-위치-변경-및-migrate\">(5) db.sqlite3 파일 위치 변경 및 migrate</h3>\n<ol>\n <li>settings.py 파일에서 DB 파일의 위치를 수정한다\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n <span class=\"p\">.</span> <span class=\"p\">.</span> <span class=\"p\">.</span>\n <span class=\"s\">'NAME'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'db'</span><span class=\"p\">,</span> <span class=\"s\">'db.sqlite3'</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>ch8 아래 db 디렉토리를 생성 후 db.sqlite3을 옮긴다\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/home/centos/pyBook/ch8&gt; mkdir db\n/home/centos/pyBook/ch8&gt; mv db.sqlite3 db/db.sqlite3\n/hoem/centos/pyBook/ch8&gt; python manage.py migrate\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h3 id=\"6-db-폴더와-log-폴더-권한-변경\">(6) db 폴더와 log 폴더 권한 변경</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/home/centos/pyBook/ch8&gt; sudo chmod 777 db\n/home/centos/pyBook/ch8&gt; sudo chmod 666 db/db.sqlite3\n\n/home/centos/pyBook/ch8&gt; sudo chmod 777 log\n/home/centos/pyBook/ch8&gt; sudo chmod 666 log/mysite.log\n</code></pre>  </div></div>\n\n<h2 id=\"mod_wsgi-확장모듈\">mod_wsgi 확장모듈</h2>\n<blockquote>\n <p>내장모드 : 파이썬에 mod_wsgi 모듈을 내장하여 WSGI 프로그램을 실행하는 방식. 소스 반영 시, 해당 아파칭에 배치중인 모든 어플리케이션 재가동 해야 함 <br />\n데몬모드 : WSGI 전용 프로세스에서 WSGI 어플리케이션을 관리함. 상대적으로 적은 메모리 차지하고 각 어플리케이션 간 영향을 최소화 함. 데몬모드를 권장함</p>\n</blockquote>\n\n<h3 id=\"1-mod_wsgi-설치\">(1) mod_wsgi 설치</h3>\n<p>. mod_wsgi 프로그램 컴파일 파이썬 버전과 장고 어플리케이션 실행하는 파이썬 버젼이 같아야 함</p>\n<ol>\n <li>\n <p>가상환경 내에서 mod_wsgi 설치</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> /home/centos/VENV/v3PyBook&gt; source bin/activate\n (v3PyBook)/home/centos/VENV/v3PyBook&gt;sudo pip install mod_wsgi\n\n //만약 sudo 가 안 먹히면, su 를 입력하여 관리자 모드에서 pip 명령어 실행\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>설치 확인</p>\n\n <p>. mod_wsgi-express 명령으로 아파치 기본페이지 동작 확인</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (v3PyBook) $  mod_wsgi-express start-server\n</code></pre>  </div> </div>\n <ul>\n <li>웹브라우저에서 ‘http://localhost:8000’ 입력 시, 화면에서 아파치 메인화면이 보여짐</li>\n </ul>\n\n <p>. mod_wsgi-express 로 내 프로젝트 동작 확인 (꼭 ch8에서 확인할 것)</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (v3pyBook)/home/centos/pyBook/ch8&gt; mod_wsgi-express start-server mysite/wsgi.py\n</code></pre>  </div> </div>\n <ul>\n <li>웹브라우저에서 ‘http://localhost:8000’ 입력 시, 화면에서 프로젝트 메인화면이 보여짐</li>\n </ul>\n\n <p>. python 테스트 서버로 프로젝트 동작 확인</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (v3pyBook)/home/centos/pyBook/ch8&gt; python manage.py runserver\n</code></pre>  </div> </div>\n <ul>\n <li>웹브라우저에서 ‘http://localhost:8000’ 입력 시, 화면에서 프로젝트 메인화면이 보여짐</li>\n </ul>\n </li>\n</ol>\n\n<h3 id=\"2-mod_wsgi-아파치-모듈로-등록하기\">(2) mod_wsgi 아파치 모듈로 등록하기</h3>\n<blockquote>\n <p>mod_wsgi를 아파치의 확장모듈로 설치 하기 <br />\n아파치 설정 수정하기</p>\n</blockquote>\n\n<ol>\n <li>mod_wsgi를 아파치 확장모듈로 설치\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (v3PyBook)/home/centos/VENV/v3PyBook &gt; sudo /home/centos/VENV/v3PyBook/bin/mod_wsgi-express install-module\n\n LoadModule wsgi_module \"/usr/lib64/httpd/modules/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so\"\n WSGIPythonHome \"/home/centos/VENV/v3PyBook\"\n</code></pre>  </div> </div>\n </li>\n <li>mod_wsgi 를 아파치 확장모듈로 등록하기\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (v3PyBook) $ cd /etc/httpd/conf.modules.d/\n (v3PyBook) $ sudo vi 10-wsgi.conf\n\n LoadModule wsgi_module \"/usr/lib64/httpd/modules/mod_wsgi-py36.cpython-36m-x86_64-linux-gnu.so\"\n</code></pre>  </div> </div>\n <ul>\n <li>1의 설치 결과로 나온 LoadModule wsgi …(생략)…linux-gnu.so” 를 *.conf 파일에 작성하면 된다.</li>\n <li>이름은 임의로 해도 되지만, 확장자는 꼭 *.conf 로 지정한다.</li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"mod_wsgi를-내장모드로-웹서버-실행\">mod_wsgi를 내장모드로 웹서버 실행</h2>\n<h3 id=\"1-아파치-설정\">(1) 아파치 설정</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd /etc/httpd/conf.d/\n$ sudo vim django.conf\n\nWSGIScriptAlias /   /home/centos/pyBook/ch8/mysite/wsgi.py //1\nWSGIPythonHome /home/centos/VENV/v3PyBook //2\nWSGIPythonPath /home/centos/pyBook/ch8 //3\n\n&lt;Directory /home/centos/pyBook/ch8/mysite&gt; // 프로젝트 디렉토리\n&lt;Files wsgi.py&gt;\nRequire all granted // 접근허가\n&lt;/Files&gt;\n&lt;/Directory&gt;\n\nAlias /static/ /home/centos/pyBook/ch8/www_dir/static/\n&lt;Directory /home/centos/pyBook/ch8/www_dir/static&gt; // 정적파일 디렉토리\nRequire all granted  //접근 허가\n&lt;/Directory&gt;\n</code></pre>  </div></div>\n<ul>\n <li>\n <ol>\n <li>/etc/httpd/conf/httpd.conf 에 직접 추가 해도 되고, /ect/httpd/conf.d/ 폴더 하위에 *.conf 로 추가해도 된다\n (httpd.conf 에서 conf.d 디렉토리 하위의 *.conf를 모두 불러들이기 때문)</li>\n </ol>\n </li>\n <li>\n <ol>\n <li>WSGIPythonHome 으로 파이썬 가상공간의 홈 경롤르 잡아준다 (잘못 쓸 경우, ‘client denied …’ 에러나 Permission 에러가 발생함 )</li>\n </ol>\n </li>\n <li>\n <ol>\n <li>WSGIPythonPath 로 프로젝트 base 디렉토리를 잡아준다.</li>\n </ol>\n </li>\n</ul>\n\n<h3 id=\"2-작업-확인하기-아파치-웹서버로-프로젝트-실행\">(2) 작업 확인하기 (아파치 웹서버로 프로젝트 실행)</h3>\n<ul>\n <li>만약, SELinux 가 적용되어 있을 시, 작동이 안할 수도 있으므로 SELinux 설정 변경\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo getenforce\nEnforcing\n$ sudo setenforce permissive\n$ sudo getenforce\nPermissive\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>로그인 중에만 일시 적용되며, 완전히 변경하고 싶으면 /etc/selinux/config 파일에서 변경 해야 함</p>\n </li>\n <li>\n <p>아파치를 가동한다\n<code class=\"language-plaintext highlighter-rouge\">$ sudo apachectl start</code></p>\n </li>\n <li>웹 브라우저에서 http://localhost 를 실행 시, 내 프로젝트 메인화면이 실행된다.</li>\n</ul>\n\n<h2 id=\"mod_wsgi를-데몬모드로-웹서버-실행\">mod_wsgi를 데몬모드로 웹서버 실행</h2>\n\n<h3 id=\"1-아파치-설정-1\">(1) 아파치 설정</h3>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd /etc/httpd/conf.d/\n$ sudo vim django.conf\n\nWSGIScriptAlias /   /home/centos/pyBook/ch8/mysite/wsgi.py //1\nWSGIDaemonProcess mygroup python-home=/home/centos/VENV/v3PyBook python-path=/home/centos/VENV/pyBook/ch8 //2\nWSGIProcessGroup mygroup //3\n\n&lt;Directory /home/centos/pyBook/ch8/mysite&gt; // 프로젝트 디렉토리\n&lt;Files wsgi.py&gt;\nRequire all granted // 접근허가\n&lt;/Files&gt;\n&lt;/Directory&gt;\n\nAlias /static/ /home/centos/pyBook/ch8/www_dir/static/\n&lt;Directory /home/centos/pyBook/ch8/www_dir/static&gt; // 정적파일 디렉토리\nRequire all granted  //접근 허가\n&lt;/Directory&gt;\n</code></pre>  </div></div>\n<ul>\n <li>\n <ol>\n <li>아파치 웹서비스의 루트(/)와 wsgi.py 파일의 위치를 맵핑. / 로 시작하는 모든 요청은 wsgi.py 파일의 WSGI application에서 처리한다는 의미</li>\n </ol>\n </li>\n <li>\n <ol>\n <li>장고를 실행하기 위한 데몬 프로세스 정의</li>\n </ol>\n </li>\n <li>\n <ol>\n <li>장고 프로세스에서 실행되는 프로세스 그룹 지정 같은 프로세스 그룹에 할당된 애플리케이션은 같은 데몬 프로세스에서 실행됨</li>\n </ol>\n </li>\n</ul>\n\n<h3 id=\"2-작업-확인하기-아파치-웹서버로-프로젝트-실행-1\">(2) 작업 확인하기 (아파치 웹서버로 프로젝트 실행)</h3>\n<ul>\n <li>\n <p>아파치를 가동한다 <br />\n<code class=\"language-plaintext highlighter-rouge\">$ sudo apachectl start</code></p>\n </li>\n <li>\n <p>웹 브라우저에서 http://localhost 를 실행 시, 내 프로젝트 메인화면이 실행된다.</p>\n </li>\n</ul>\n","dir":"/python/ApacheWebServerDeploy/","name":"apacheWebServerDeploy.md","path":"python/ApacheWebServerDeploy/apacheWebServerDeploy.md","url":"/python/ApacheWebServerDeploy/apacheWebServerDeploy.html"},{"sort":1,"layout":"default","title":"Admin 사이트 꾸미기","content":"# Admin 사이트 꾸미기\n\n## 1. 필드 순서 변경하기\n - polls/admin.py\n ![admin site 필드 순서 변경](/assets/images/admin_site_feild_order_change.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields 라는 속성이름은, 이미 정해져 있는 속성이름 이므로, 변경하면 안됨\n fields = ['pub_date','question_text']\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. ModelAdmin 을 상속받아 새로운 QuestionAdmin 클래스 정의\n2. QuestionAdmin 클래스에 fields 속성 추가하여, 보여주고자 하는 순서대로 컬럼이름을 나열\n3. QuestionAdmin 클래스를 admin.site.register(Question) 의 두번째 인자로 추가\n\n## 2. 각 필드 분리해서 보여주기\n - polls/admin.py\n ![admin site 필드 분리해서 보여주기](/assets/images/admin_site_seperate_column.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n # fieldsets 라는 속성이름은, 이미 정해져 있는 속성이름 이므로, 변경하면 안됨\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date']})]\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. fieldssets 속성에 있는 각 튜플의 첫번째 인자가 해당 필드의 '제목' 이 됨\n\n## 3. 필드 접기\n- polls/admin.py\n ![admin site 필드 접기](/assets/images/admin_site_field_collapse.png)\n\n ```python\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. fieldsets 속성의 튜플에서 필드접기 하고 싶은 필드 속성 뒤에 `classes':['collapse']` 를 추가해 준다.\n\n## 4. Question 테이블에 외래키를 가지고 있는 Choice 테이블을 한 화면에서 여러 개 입력하기\n- polls/admin.py\n ![Choice 테이블을 한 화면에서 여러 개 입력](/assets/images/admin_site_fk_add_in_once.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass ChoiceInline(admin.StackedInline):\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n inlines = [ChoiceInline]\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. admin.StackedOnline 클래스를 상속받는 Choice 클래스를 선언하고, model 속성과 extra 속성을 작성한다.\n2. QuestionAdmin 클래스에 inlines 속성으로 ChoiceInline 클래스를 지정한다.\n\n## 5. 테이블 형식으로 보여주기\n- polls/admin.py\n ![Choice 테이블을 한 화면에서 여러 개 입력](/assets/images/admin_site_table_format.png)\n\n ```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\n# 상속받는 클래스만 변경\nclass ChoiceInline(admin.TabularInline):\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n inlines = [ChoiceInline]\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n ```\n\n 1. ChoiceInline 클래스에서 상속받는 클래스만 admin.TabularInline 으로 변경하면 됨\n\n## 6. 레코드 리스트 컬럼 지정하기\n\n- polls/admin.py\n- 기본설정은 models.py에서 정의한 __str__() 메소드의 리턴값을 사용\n- [변경전]\n![기본 리스트 컬럼](/assets/images/admin_site_Question_list.png)\n- [변경후]\n![기본 리스트 컬럼](/assets/images/admin_site_question_list_after.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass ChoiceInline(admin.TabularInline):\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n inlines = [ChoiceInline]\n list_display = ('question_text','pub_date')\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. QuestionAdmin 클래스에 'list_display' 속성을 보여주고자 하는 컬럼 이름으로 작성한다. (컬럼이름과 다르면 에러 발생.)\n\n## 7. list_fileter 필터\n- polls/admin.py\n![리스트 필터](/assets/images/admin_site_list_filter.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass ChoiceInline(admin.TabularInline):\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n inlines = [ChoiceInline]\n list_display = ('question_text','pub_date')\n list_filter = ['pub_date']\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. list_filter 속성에 데이터를 필터링 하고자 하는 컬럼이름을 지정한다.\n2. 'pub_date' 컬럼에 필터를 적용하면, 지정된 기간안에 있는 데이터들만 볼 수 있다.\n\n## 8. search_filter\n> 데이터를 검색 할 수 있는 검색 필드가 생기게 된다.\n\n.polls/admin.py\n![서치 필터](/assets/images/admin_site_search_filter.png)\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass ChoiceInline(admin.TabularInline):\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text']\n fieldsets = [('Question Statement', {'fields':['question_text']}),\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),]\n inlines = [ChoiceInline]\n list_display = ('question_text','pub_date')\n list_filter = ['pub_date']\n search_fields = ['question_text']\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n1. search_filter 속성에 검색하고자 하는 컬럼을 지정해 준다.\n\n## 9. admin.py 변경 내역 정리\n\n```python\nfrom django.contrib import admin\nfrom polls.models import Question, Choice\n# Register your models here.\n\nclass ChoiceInline(admin.TabularInline): # Question, Choice 한 화면에서 보기\n model = Choice\n extra = 2\n\nclass QuestionAdmin(admin.ModelAdmin):\n # fields = ['pub_date','question_text'] # 필드 순서 변경\n fieldsets = [('Question Statement', {'fields':['question_text']}), # 필드 분리하여 보여주기\n ('Date Information', {'fields':['pub_date'],'classes':['collapse']}),] # 필드 펼치기 기능 추가\n inlines = [ChoiceInline] # Choice 모델 클래스 같이 보기 \n list_display = ('question_text','pub_date') # 레코드 리스트 컬럼 지정하기\n list_filter = ['pub_date'] # 리스트 필터 지정하기\n search_fields = ['question_text'] # 레코드 검색 필드 추가하기\n\nadmin.site.register(Question, QuestionAdmin)\nadmin.site.register(Choice)\n```\n\n## 10. Admin site 템플릿 수정하기\n> Admin 사이트를 개발자 취향에 맞게 수정 할 수 있음\n\n1. django의 설치 위치를 확인 한다. \n `$>python -c 'import django; print(django.__path__)`\n\n2. 프로젝트 레벨에 /templates/admin 폴더를 생성한다.\n ```\n ~ch3>mkdir templates\n ~ch3>mkdir templates/admin\n ```\n\n3. django 설치 디렉토리 하위의 base_site.html 파일을 방금 생성한 templates/admin 하위로 복사 한다.\n ```\n ~ch3>cp [django설치경로, (1) 에서의 아웃풋]/contrib/admin/templates/admin/base_site.html ./templates/admin/base_site.html\n ```\n\n4. settings.py 파일에 추가한 templates 경로를 작성한다.\n . ch3/mysite/settings.py\n ```\n ..(생략)\n TEMPLATES = [\n 'DIRS'=[os.path.join(BASE_DIR, 'templates')],\n ]\n ...(생략)\n ```\n\n5. base_site.html 파일을 수정한다.\n\n ```python\n {% raw %}\n # 아래 1줄 수정해 보자\n <h1 id='site-name'><a href=\"{%url 'admin:index' %}\">KYM Polls Administration</a></h1>\n {% endraw %}\n ```\n6. 수정된 화면 확인하기\n - http://http://127.0.0.1:8000/admin/\n ![admin site page](/assets/images/admin_site_base_site_html.png)","dir":"/python/DjangoCoreFunction/","name":"decorateAdminSite.md","path":"python/DjangoCoreFunction/decorateAdminSite.md","url":"/python/DjangoCoreFunction/decorateAdminSite.html"},{"sort":1,"layout":"default","title":"장고 프로그램 설치","content":"# 장고 프로그램 설치\n\n> <font color='red'>python, pip 설치되어 있어야 함 (python 설치 시, pip 자동 설치)</font> \n\n## 1. 윈도우/리눅스/macOs 공통 설치\n```\n>pip install Django\n```\n\n- 리눅스의 경우, sudo pip install Django (sudo를 이용하여 관리자 권한 득)\n\n## 2. Django 제거\n\n```\n>cd (생략, python 설치된 폴더)/site-packages/\n>rm -rf django\n>rm -rf Django*\n```\n\n- 장고가 설치된 디렉토리가 알고 싶다면??\n\n```\n>python -c 'import django; print(django.__path__)'\n```\n\n## 3. Django 버전확인\n```\n> python -m django --version\n```\n","dir":"/python/DjangoWebFramework/","name":"jangoInstall.md","path":"python/DjangoWebFramework/jangoInstall.md","url":"/python/DjangoWebFramework/jangoInstall.html"},{"sort":1,"layout":"default","title":"설치","content":"<h1 id=\"설치\">설치</h1>\n\n<h2 id=\"1-intellij-버전과-다운로드\">1. Intellij 버전과 다운로드</h2>\n\n<ul>\n <li>다운로드: <a href=\"https://www.jetbrains.com/idea/\">https://www.jetbrains.com/idea/</a></li>\n <li>community 버전 무료 : 프레임워크, 데이터베이스등의 툴이 없음</li>\n</ul>\n\n<h2 id=\"2-openjdk-설치\">2. openjdk 설치</h2>\n<ul>\n <li>다운로드 및 설치 : <a href=\"https://adoptopenjdk.net/\">https://adoptopenjdk.net/</a></li>\n <li>jdk 버전 확인</li>\n <li>삭제가 필요하면? : /Library/java/JavaVirtualMachines 의 *.jdk를 삭제한다 <code class=\"language-plaintext highlighter-rouge\">sudo rm -rf *.jdk</code></li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>➜  ~ java -version\njava version \"1.8.0_281\"\nJava(TM) SE Runtime Environment (build 1.8.0_281-b09)\nJava HotSpot(TM) 64-Bit Server VM (build 25.281-b09, mixed mode)\n</code></pre>  </div></div>\n\n<h2 id=\"3-gradle-설치\">3. Gradle 설치</h2>\n\n<ul>\n <li>Maven과 같은 빌드도구</li>\n <li>다운로드 : <a href=\"https://gradle.org/install/\">https://gradle.org/install/</a> - ‘Binary-only’ 다운로드</li>\n <li>로컬에 압축 풀기</li>\n <li>.zshrc 에 path 추가하기</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>vim .zshrc\n <span class=\"nv\">GRADLE_HOME</span><span class=\"o\">=</span>/Users/kim-yunmi/gradle-6.8.1\n <span class=\"nb\">export </span><span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/bin:<span class=\"o\">{</span>GRADLE_HOME<span class=\"o\">}</span>/bin:<span class=\"nv\">$PATH</span>\n<span class=\"c\"># esc, :wq 로 저장</span>\n<span class=\"c\"># 쉘 적용</span>\n<span class=\"nv\">$ </span><span class=\"nb\">source</span> .zshrc\n</code></pre>  </div></div>\n\n<ul>\n <li>버전체크</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gradle <span class=\"nt\">--v</span>\n</code></pre>  </div></div>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>------------------------------------------------------------\nGradle 6.8.1\n------------------------------------------------------------\n\nBuild time:   2021-01-22 13:20:08 UTC\nRevision:     31f14a87d93945024ab7a78de84102a3400fa5b2\n\nKotlin:       1.4.20\nGroovy:       2.5.12\nAnt:          Apache Ant(TM) version 1.10.9 compiled on September 27 2020\nJVM:          11.0.10 (AdoptOpenJDK 11.0.10+9)\nOS:           Mac OS X 10.16 x86_64\n</code></pre>  </div></div>\n","dir":"/spring5/8_intellij_gradle/","name":"1_install.md","path":"spring5/8_intellij_gradle/1_install.md","url":"/spring5/8_intellij_gradle/1_install.html"},{"sort":1,"layout":"default","title":"장고의 wsgi.py 파일","content":"# 장고의 wsgi.py 파일\n\n1. 웹서버와 애플리케이션을 연결하는데 필요한 파일\n2. wsgi.py 에는 웹서버가 애플리케이션을 호출하는데 사용하는 application 객체가 정의되어 있는데, 이름이 반드시 application 이어야 함\n - wsgi.py : `application = get_wsgi_application()`\n3. application 객체의 위치를 지정해 주어야 한다.\n - 웹서버 (Apache, NginX등) : httpd.conf나 uwsgi.ini 설정 파일등에 위치를 명시\n - 장고 개발서버 (runserver) : settings.py 파일에 WSGI_APPLICATION 변수로 지정\n - settings.py : `WSGI_APPLICATION = 'mysite.wsgi.application'`\n4. 웹서버가 application 객체를 호출 하기 위해, 애플리케이션에 대한 설정 정보 로딩. 설정 정보를 wsgi.py 파일에 지정\n - wsgi.py : `os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\"`\n\n# 장고의 WSGI 인터페이스\n\n1. mysite/wsgi.py : `application=get_wsgi_application()` 의 get_wsgi_application()은 Django site-packages/core/wsgi.py 에 선언된 함수로, WSGI 규격을 작성해 둔 WSGIHandler() 를 반환한다.\n2. 웹서버에서 장고 애플리케이션을 실행하기 위해서는, application 이 정의된 wsgi.py의 위치를 알아야 하므로, 웹서버/WAS서버 설정파일에는 wsgi.py 파일의 경로가 정의되어야 한다.\n","dir":"/python/DjangoWebServerConfig/","name":"wsgi_py_file.md","path":"python/DjangoWebServerConfig/wsgi_py_file.md","url":"/python/DjangoWebServerConfig/wsgi_py_file.html"},{"sort":1,"layout":"default","title":"가상환경 사용하기","content":"# 가상환경 사용하기\n\n## 1. 가상환경 구성해 주는 툴\n- virtualenv 툴 : python 설치 시, 기본으로 제공되는 가상환경 구성 툴\n- venv 모듈 : python3 설치 시, 제공되는 모듈\n\n## 2. 가상환경 사용하는 이유\n- 프로젝트에 따라 별도의 개발 환경을 설치함으로써 다른 파이썬 프로그램에 영향을 주지 않도록 하기 위함\n- 파이썬의 기본 라이브러리는 /usr/local/lib/python3.6/ 에 위치함\n- 별도로 가상환경에서 추가로 설치하는 외부 패키지는 가상환경의 경로 내에 위치함\n\n## 3. 가상환경 만들기\n```bash\n# 파이썬 버전 확인\n$ python --version\n$ python2 --version\n$ python3 --version\n\n# venv 모듈 있는지 확인하기 (-m 옵션은, 파이썬 모듈을 직접 실행하는 옵션)\n$ python -m venv\n$ python2 -m venv\n$ python3 -m venv\n\n# 가상환경을 모아둘 디렉터리 VENV 설치하기\n$ cd /home/centos/\n$ mkdir VENV\n$ cd VENV/\n\n# 가상환경 vDjBook 만들기\n$ python3 -m venv vDjBook\n\n# 가상환경안으로 진입\n$ source /home/centos/VENV/vDjBook/bin/activate\n# 가상환경 안에 있다는 것을 프롬프트에 표시\n(vDjBook) $\n# 가상환경에서 사용하는 파이썬의 실행 위치 확인\n(vDjBook) $ which python3\n\n# 가상환경에 설치된 외부 패키지를 또 다른 가상환경에 똑같이 설치하기\n(vDjBook) $ pip3 freeze > requirements.txt\n(otherVenv) $ pip install -r requirements.txt\n\n# 가상환경에서 빠져나오는 명령어\n(vDjBook) $ deactivate\n\n```\n\n## 4. 가상환경에 장고 패키지 설치하기\n```bash\n# 가상환경 실행\n$ source /home/centos/VENV/vDjBook/bin/activate\n\n# 가상환경에서 장고 패키지 설치\n(vDjBook) $ pip3 install Django\n\n# 파이썬 외부 패키지에 장고가 설치되었는지 확인\n(vDjBook) $ ls -al /home/centos/VENV/vDjBook/lib/python3.6/site-packages/\n```\n\n## 5. 가상환경에 그 외의 패키지 설치하기\n```bash\n# 가상환경 실행\n$ source /home/centos/VENV/vDjBook/bin/activate\n\n# 태그 달기 기능에 필요한 패키지\n(vDjBook) $ pip3 install django-taggit\n(vDjBook) $ pip3 install django-taggit-templatetags2\n\n# 폼 장식하는 패키지\n(vDjBook) $ pip3 install django-widget-tweaks\n\n# 이미지 처리에 필요한 패키지\n(vDjBook) $ pip3 install Pillow\n\n# 파이썬의 다국어 지원 기능에 따라, 지역에 맞는 로컬시간과 일광절양시간을 적용한 시간 적용하기 위한 패키지\n(vDjBook) $ pip3 install pytz\n```\n\n## 6. 패키지 설치 툴 업그레이드 하기\n```bash\n(vDjBook) $ pip3 install -U pip setuptools wheel\n```\n\n## 7. InsecurePlatformWarning 해결하기 \n```bash\n# 패키지 설치중 InsecurePlatformWarning 경고 발생 시, HTTPS 처리하는 openSSL 관련 패키지를 설치 해야 함\n(vDjBook) $ pip3 install pyopenssl ndg-httpsclient pyasn1\n```\n\n## 8. 가상환경에 설치된 패키지 확인하기\n```bash\n(vDjBook) $ pip3 list\n(vDjBook) $ pip3 freeze\n(vDjBook) $ ls -al /home/centos/VENV/vDjBook/lib/python3.6/site-packages/\n```","dir":"/python/JangoDevelopmentBasic/","name":"jangoBasic.md","path":"python/JangoDevelopmentBasic/jangoBasic.md","url":"/python/JangoDevelopmentBasic/jangoBasic.html"},{"sort":1,"layout":"default","title":"NGINX 웹 서버와 연동","content":"# NGINX 웹 서버와 연동\n- 2004년 러시아에서 만든 무료 오픈소스 웹서버\n- 아파치보다 동시처리 능력을 높이고 메모리를 적게 사용\n- NGINX와 장고 사이에서 WAS 역할을 하는 uWSGI 모듈과 gunicorn이 있으나, 대부분 uWSGI를 사용\n\n## 1. 장고 설정 변경하기\n\n### (1) 리눅스 기본 설정\n1. 리눅스에서 배포할 사용자로 로그인 ( 나의 경우, centos 사용자로 로그인)\n2. dnf (centos 패키지 관리프로그램) 업데이트 : `sudo dnf update`\n3. python 설치\n`$ sudo dnf install python3.*`\n4. http, http-devel 설치 (작성 당시 2.4)\n`$ sudo dnf install http http-devel`\n5. git 설치\n`$ sudo dnf install git`\n\n### (2) python 가상환경 설정 및 장고 설치\n1. 파이썬 가상환경을 만들 디렉토리 생성\n`/home/centos> mkdir VENV`\n2. 가상환경 디렉토리로 이동 후, 가상환경 설치 \n```console \n/home/centos> cd VENV\n/home/contos> virtualenv --python python3.6 v3PyBook \n```\n- 'python3.6'버전을 설치하며, 설치할 장소는 'v3PyBook' 으로 지정 \n\n3. 가상환경 실행 \n```\n/home/centos> source VENV/v3PyBook/bin/activate\n(v3PyBook)/home/centos>\n```\n\n4. 가상환경에서 Django 설치 (관리자 권한에서 설치)\n```\n(v3PyBook)/home/centos> su\npassword: [root 사용자 비밀번호 입력]\n(v3PyBook)/home/centos> pip install Django==2.0\n```\n\n## 2. 프로젝트 설정 변경\n\n### (1) 프로젝트 다운로드\n1. 프로젝트를 다운받을 디렉토리를 생성 후, 해당 디렉토리로 이동\n```\n/home/centos> mkdir pyBook\n/home/centos> cd pyBook\n```\n2. **github**에서 프로젝트를 다운로드 받는다. (교재의 소스를 다운받았다.)\n`/home/centos/pyBook>git clone 'https://github.com/millni/Django-hanbit.git'`\n3. 프로젝트의 이름을 'ch8(임의의 이름)'으로 변경한다.\n`/home/centos/pyBook>mv python-project ch8` \n\n### (2) 프로젝트 settings.py 파일 변경\n. ch8/mysite/settings.py 파일\n\n1. DEBUG 모드 변경 : 운영모드로 전환\n```python\n# DEBUG = True\nDEBUG = False\n```\n\n2. ALLOWED_HOST 변경 : 아파치 서버의 ip (현재는 아파치와 프로젝트가 같은 PC 이므로 꼭 변경이 필요하지 않음)\n```python\n# ALLOWED_HOST = ['localhost','127.0.0.1']\nALLOWED_HOST = ['192.168.111.100','localhost','127.0.0.1']\n```\n\n3. STATIC_ROOT 경로 추가\n```python\nSTATIC_ROOT = os.path.join(BASE_DIR, 'www_dir', 'static')\n```\n\n### (3) STATIC 파일 모으기\n. (가상환경에서 실행)\n```\n(v3PyBook)/home/centos/pyBook/ch8> python manage.py collectstatic \n```\n\n### (4) SECRET_KEY 변경 : 하드코딩 -> 파일\n\n1. settings.py 변경\n```python\n# SECRET_KEY = 어쩌구저쩌구~~\nwith open(os.path.join(BASE_DIR, 'www_dir', 'secret_key.txt')) as f:\n SECRET_KEY = f.read().strip()\n```\n\n2. secret_key.txt 파일 생성 후 키 입력\n```\n/home/centos/pyBook/ch8/www_dir> vim secret_key.txt\n어쩌구저쩌구~~~\n```\n\n### (5) db.sqlite3 파일 위치 변경 및 migrate\n1. settings.py 파일에서 DB 파일의 위치를 수정한다\n```python\nDATABASES = {\n . . .\n 'NAME': os.path.join(BASE_DIR, 'db', 'db.sqlite3'),\n}\n```\n\n2. ch8 아래 db 디렉토리를 생성 후 db.sqlite3을 옮긴다\n```\n/home/centos/pyBook/ch8> mkdir db\n/home/centos/pyBook/ch8> mv db.sqlite3 db/db.sqlite3\n/hoem/centos/pyBook/ch8> python manage.py migrate\n```\n\n### (6) db 폴더와 log 폴더 권한 변경\n```\n/home/centos/pyBook/ch8> sudo chmod 777 db\n/home/centos/pyBook/ch8> sudo chmod 666 db/db.sqlite3\n\n/home/centos/pyBook/ch8> sudo chmod 777 log\n/home/centos/pyBook/ch8> sudo chmod 666 log/mysite.log\n```\n\n## 3. NGINX 설치\n> https://docs.nginx.com 사이트 참조. NGINX Plus > Admin Guide > Installing NGINX and NGINX Plus 로 이동하여 상세 정보 확인 \n\n. NGINX 설치 시 선택 항목\n\n|선택항목 | 선택 | 가능한 다른 선택들 |\n|---------|------|--------------------|\n|솔루션명 |NGINX Open Source |NGINX Plus(유료) |\n|버전 |Stable |Mainline(시험용 기능 포함) |\n|컴파일여부 |Prebuilt |Compiling from Source |\n|서버 OS | CentOs or RHEL |Debian, Ubuntu, SUSE |\n|저장소 |NGINX 저장소 신규 생성 |OS 제공 기본 저장소 사용 |\n\n1. 저장소 생성\n ```\n $ sudo vi /etc/yum.repos.d/nginx.repo\n\n [nginx]\n name=nginx repo\n baseurl=http://nginx.org/packages/centos/8/$basearch/\n gpgcheck=0\n enabled=1\n ```\n\n2. 저장소 업데이트\n ```\n $ sudo yum update\n ```\n\n3. 설치완료 후 nginx 가동\n ```\n $ sudo nginx\n ```\n\n4. nginx 정상 가동 확인\n ```\n $ curl -I 127.0.0.1\n\n HTTP/1.1 200 OK\n Server: nginx/1.14.0 \n ```\n - 200 OK가 나오면, 정상가동됨\n\n### <font color='red'> ✤ nginx 명령 </font>\n. nginx 가동 : `$ sudo nginx` \n. nginx 정지 : `$ sudo nginx -s stop` \n. nginx 재가동 : `$ sudo nginx -s reload` \n. nginx 설정 파일 테스트 : `$ sudo nginx -t` \n. nginx 도움말 : `$ sudo nginx -h` \n\n## 4. NGINX 설정\n> 설정파일 위치 : /etc/nginx/conf.d/ \n\n```conf\n$ sudo vim /etc/nginx/conf.d/ch9_nginx.conf\n\nserver {\n listen 8000;\n server_name 127.0.0.1;\n\n # access_log /var/log/nginx/codejob.co.kr_access.log; // 이미 /etc/nginx/nginx.conf에 지정되어 있음.\n # error_log /var/log/nginx/codejob.co.kr_error.log;\n \n location = /favicon.ico {access_log off; log_not_found off; } \n # /favicon.ico 으로 요청이 들어오면, access_log 기록하지 않고, /favicon.ico 을 찾지 못해도 error_log 에 기록하지 않음\n\n location /static/ {\n root /home/centos/pyBook/ch9/www_dir; // 정적파일의 루트 디렉토리 지정\n # alias /home/centos/pyBook/ch9/www_dir/static/; // alias 디렉티브를 사용 할 수도 있음. path 끝에 '/'로 끝나야 함\n }\n\n location / {\n include /home/centos/pyBook/ch9/www_dir/uwsgi_params; // 위의 URL 외의 URL 처리, uwsgi 에 넘겨줄 파라미터 정의\n uwsgi_pass 127.0.0.1:8001; //nginx 에서 uwsgi 프로그램으로 처리르 위임. 웹서버와 wsgi 가 통신하기 위한 ip:port 설정\n # uwsgi_pass unix:///home/centos/pyBook/ch9/www_dir/ch9.sock; // 위의 작업을 UDS(unix domain socket) 방식을 이용해도 됨. 웹서버와 WAS 가 같은 H/W에 존재 할 때는 UDS 방법의 성능이 훨씬 우세함 \n }\n}\n\n$ cp /etc/uwsgi/nginx/uwsgi_params /home/centos/pyBook/ch9/www_dir/ //uwsgi_params 는 uwsgi 를 설치 시 생성될 것임. 이 파일을 장고 프로젝트의 적절한 위치로 복사\n```\n\n## 5. uWSGI 설치\n> uWSGI 공식문서 : <http://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html> \n> 운영환경을 만들 때는 전역 설치를 하는 것이 일반적이므로, root 또는 sudo 권한으로 설치 \n\n```\n$ sudo yum install python3-devel\n$ sudo pip3 install uwsgi\n```\n- 주의 : python3-devel (파이썬 라이브러리) 먼저 설치 후 uwsgi 설치\n\n### <font color='red'> ✤ uwsgi 명령 </font>\n- 기동 : `$ uwsgi` \n- 정지 : `$ uwsgi --stop pid-file`\n- 재기동: `$ uwsgi --reload pid-file` \n- 도움말: `$ uwsgi --help` \n\n## 6. uWSGI 설정\n> 장고 프로젝트별 하나의 설정파일 필요함 \n> vassals 는, 자식프로세스를 뜻하는 uWSGI 용어 \n\n```ini\n$ sudo mkdir -p /etc/uwsgi/vassals\n$ sudo vi /etc/uwsgi/vassals/ch9_uwsgi.ini\n\n[uwsgi]\nchdir = /home/centos/pyBook/ch9 # 장고의 베이스 디렉토리\nhome = /home/centos/VENV/v3PyBook # 가상환경 사용 시, 가상환경의 루트 디렉토리 (가상환경 사용하지 않으면 생략)\nmodule = mysite.wsgi:application # wsgi.py 파일의 모듈 경로 및 application 변수\nsocket = :8001 # 웹서버와 통신할 소켓의 포트 번호\n# socket = /home/centos/pyBook/ch9/www_dir/ch9.sock # 웹서버가 UDS 사용 시 소켓 파일의 경로. nginx 설정 파일의 소켓파일과 경로가 같음.\n# chmod-socket = 666\nmaster = True # 별도의 마스터 프로세스가 가동되도록 지정\nprocesses = 5 # uwsgi 가동 시 자식 프로세스를 5개 생성\npidfile = /tmp/ch9-master.pid # 마스터 프로세스 ID를 저장할 파일\nvacuum = True # 프로세스 종료 시 소켓파일을 포함하여 환경변수 클리어\nmax-requests = 5000 # 현 프로세스에서 처리할 최대 요청 개수 지정\ndaemonize = /var/log/uwsgi/ch9.log # 백그라운드에서 프로세스가 실행되도록 데몬화하고 데몬에서 사용할 로그 파일을 지정\n\n$ sudo touch /var/log/uwsgi/ch9.log # 설정파일에서 지정한 로그파일 생성\n$ sudo chmod 666 /var/log/uwsgi/ch9.log # uwsgi 프로세스가 쓸 수 있도록 권한을 변경\n```\n\n## 7. 작업 확인하기\n> nginx는 루트권한으로 실행 해야 함 \n> uwsgi는 루트계정 및 일반사용자 계정으로도 실행 할 수 있음 \n\n### (1) uWSGI Emperor 모드\n- 시스템 전역으로 uwsgi 프로그램을 설치 하였으므로, 루트 권한으로 실행 \n- 루트 권한으로 실행시 모동 Emperor 모드로 실행함 \n- <font color='red' > Emperor 모드 : 설정파일 변경시 자동으로 프로세스 재가동 </font> \n\n1. nginx와 uwsgi 프로그램을 실행한다.\n```bash\n$ sudo nginx\n# 이미 실행 중이라면, 아래의 명령 실행\n$ sudo nginx -s reload\n# uwsgi 서버 가동, uid,gid는 uwsgi 프로세스의 주인이 될 사용자와 그룹 아이디를 지정\n# uwsgi 명령에 옵션을 붙여 실행 할 수도 있지만, \n# *.ini 파일에 명령을 기록 후 *.ini 파일을 실행 시킬 수도 있음\n$ sudo uwsgi --emperor /etc/uwsgi/vassals --uid centos --gid centos\n```\n\n2. 웹 브라우저에서 http://localhost:8000/ 을 요청하면, 프로젝트 메인화면이 실행된다. \n\n### (2) uWSGI 일반모드\n> 간단하게 사용하거나 소규모 프로젝트라면, Emperor 모드가 아닌 일반모드로 실행 할 수 있음 \n> 이 경우, 일반 사용자계정으로 설정파일 생성 후, 실행 해도 됨, 그래서 설정파일과 로그 파일을 장고 프로젝트 하위로 변경 \n\n1. uWSGI 설정파일 장고프로젝트 하위에 작성 \n ```bash \n $ cd /home/centos/pyBook/ch9/www_dir\n $ vim ch9_uwsgi.ini\n\n # 하위는 *.ini 파일로, 내용은 daemonize 설정(로그 설정)을 빼고, 루트모드에서 실행 시와 같다.\n [uwsgi]\n chdir = /home/centos/pyBook/ch9 # 장고의 베이스 디렉토리\n home = /home/centos/VENV/v3PyBook # 가상환경 사용 시, 가상환경의 루트 디렉토리 (가상환경 사용하지 않으면 생략)\n module = mysite.wsgi:application # wsgi.py 파일의 모듈 경로 및 application 변수\n socket = :8001 # 웹서버와 통신할 소켓의 포트 번호\n # socket = /home/centos/pyBook/ch9/www_dir/ch9.sock # 웹서버가 UDS 사용 시 소켓 파일의 경로. nginx 설정 파일의 소켓파일과 경로가 같음.\n # chmod-socket = 666\n master = True # 별도의 마스터 프로세스가 가동되도록 지정\n processes = 5 # uwsgi 가동 시 자식 프로세스를 5개 생성\n pidfile = /tmp/ch9-master.pid # 마스터 프로세스 ID를 저장할 파일\n vacuum = True # 프로세스 종료 시 소켓파일을 포함하여 환경변수 클리어\n max-requests = 5000 # 현 프로세스에서 처리할 최대 요청 개수 지정\n daemonize = /home/centos/pyBook/ch9/www_dir/ch9.log # 백그라운드에서 프로세스가 실행되도록 데몬화하고 데몬에서 사용할 로그 파일을 지정\n\n # 로그파일을 생성하고 권한을 변경\n $ touch /home/centos/pyBook/ch9/www_dir/ch9.log\n $ chmod 666 /home/centos/pyBook/ch9/www_dir/ch9.log\n ```\n\n2. nginx 와 uWSGI 프로그램 가동 \n. 일반모드이므로, uwsgi도 일반 사용자로 실행\n\n ```bash\n $ cd /home/centos/pyBook/ch9/\n $ uwsgi --ini www_dir/ch9_uwsgi.ini\n\n # uwsgi 중지 명령\n $ uwsgi --stop /tmp/ch9-master.pid\n ```\n3. 동작 확인\n- 웹브라우저로 http://localhost:8000/을 호출하여, 프로젝트의 메인화면이 실행되는지 확인\n\n### (3) 유닉스 도메인 소켓 사용\n> 웹서버와 WAS가 동일한 H/W 에서 실행될 때는, 네트워크 모듈을 통한 소켓통신이 아니라, 파일 시스템을 사용하여 소켓 통신을 하는 것이 더 성능이 좋다. \n> 파일 시스템을 사용한 소켓 통신중 하나가 **유닉스 도메인 소켓(UDS)** 방식이다. \n> uWSGI 도 UDS 방식을 지원한다. \n\n1. NGINX 설정 파일 수정\n ```conf\n $ sudo vim /etc/nginx/conf.d/ch9_nginx.conf\n\n server {\n (생략)\n location / {\n include /home/centos/pyBook/ch9/www_dir/uwsgi_params;\n # uwsgi_pass 127.0.0.1:8001\n uwsgi_pass unix:///home/centos/pyBook/ch9/www_dir/ch9.sock;\n }\n }\n ```\n - uwsgi_pass 를 ip:포트 방식이 아닌 소켓의 경로를 지정하는 것이 핵심\n\n2. uWSGI 설정 파일 수정 (Emperor 모드 예제)\n ```ini\n $ cd /etc/uwsgi/vassals\n $ sudo vim ch9_uwsgi.ini\n \n [uwsgi]\n socket = /home/centos/pyBook/ch9/www_dir/ch9.sock\n chmod-socket = 666\n (아래내용 동일)\n ```\n\n3. uWSGI 프로그램을 실행 시키기 위한 *.ini 파일 생성 \n> `$ sudo uwsgi --emperor /etc/uwsgi/vassals --uid centos --gid centos` 로 *.ini 파일없이 실행 가능함 \n\n ```ini\n $ cd /etc/uwsgi\n $ sudo vim uwsgi_emperor.ini\n\n [uwsgi]\n emperor = /etc/uwsgi/vassals\n uid = centos\n gid = centos\n master = True\n pidfile = /tmp/emperor.pid\n vacuum = True\n daemonize = /var/log/uwsgi/emperor.log\n ```\n\n4. ninx와 uwsgi 프로그램 실행 \n ```bash\n $ sudo nginx\n $ sudo uwsgi --ini /etc/uwsgi/uwsgi_emperor.ini\n\n # 중지명령\n $ sudo nginx -s stop\n $ sudo uwsgi --stop /tmp/emperor.pid\n ```\n\n5. 동작 확인 \n. 웹브라우저에서 'http://localhost:8000' 을 호출하면 프로젝트 메인화면이 실행됨\n","dir":"/python/NginxWebServerDeploy/","name":"nginxWebServerDeploy.md","path":"python/NginxWebServerDeploy/nginxWebServerDeploy.md","url":"/python/NginxWebServerDeploy/nginxWebServerDeploy.html"},{"sort":1,"permalink":"/python/","layout":"default","title":"Django &amp; Python","content":"<h1 id=\"django--python\">Django &amp; Python</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [python 코딩 Tip!](/python/tip/)\n    - [파이썬 코딩 시, 알아야 할 꿀팁!](/python/tip/tip.html)\n- [웹 표준 라이브러리](/python/webStandardLibrary/)\n    - [웹 클라이언트 라이브러리](/python/webStandardLibrary/webClientLIbrary.html)\n    - [웹 서버 라이브러리](/python/webStandardLibrary/webServerLibrary.html)\n    - [CGI/WSGI 라이브러리](/python/webStandardLibrary/CgiWsgiLibrary.html)\n- [Django 웹 프레임워크](/python/DjangoWebFramework/)\n    - [장고 프로그램 설치](/python/DjangoWebFramework/jangoInstall.html)\n    - [장고의 웹애플리케이션 개발 방식](/python/DjangoWebFramework/jangoDevelopmentPattern.html)\n    - [프로젝트 뼈대 만들기](/python/DjangoWebFramework/applicationArchithect.html)\n    - [애플리케이션 개발하기 - Model 코딩](/python/DjangoWebFramework/applicationDevelopment-Model.html)\n    - [애플리케이션 개발하기 - URLconf, View 및 Templete 코딩](/python/DjangoWebFramework/jangoDevelopment-View_Templete.html)\n- [Django 핵심기능](/python/DjangoCoreFunction/)\n    - [Admin 사이트 꾸미기](/python/DjangoCoreFunction/decorateAdminSite.html)\n    - [장고 파이썬 쉘로 데이터 조작하기](/python/DjangoCoreFunction/dataAlterbyPythonShell.html)\n    - [템플릿 시스템](/python/DjangoCoreFunction/templateSystem.html)\n    - [Django 의 폼 처리 기능](/python/DjangoCoreFunction/DjangoForm.html)\n    - [클래스 형 뷰](/python/DjangoCoreFunction/DjangoViewClass.html)\n    - [로그 남기기](/python/DjangoCoreFunction/DjangoLogging.html)\n- [실습예제 심화](/python/extendExampleProject/)\n    - [새로운 애플리케이션 만들기](/python/extendExampleProject/addNewApplication.html)\n- [Django 웹서버 연동원리](/python/DjangoWebServerConfig/)\n    - [장고의 wsgi.py 파일](/python/DjangoWebServerConfig/wsgi_py_file.html)\n    - [운영 서버 적용 전 장고의 설정 변경 사항](/python/DjangoWebServerConfig/jangoSettingCheckListInProductMode.html)\n- [Cloud (pythonanywhere) 서버에 Django 배포하기](/python/pythonAnyWhereCloudServerDeploy/)\n    - [PythonAnyWhere에 장고소스 배포하기](/python/pythonAnyWhereCloudServerDeploy/pythonanywhereDeploy.html)\n- [Apache 웹서버 연동하기](/python/ApacheWebServerDeploy/)\n    - [아파치 웹 서버와 연동](/python/ApacheWebServerDeploy/apacheWebServerDeploy.html)\n- [NGINX 웹서버와 연동하기](/python/NginxWebServerDeploy/)\n    - [NGINX 웹 서버와 연동](/python/NginxWebServerDeploy/nginxWebServerDeploy.html)\n- [파이썬 가상환경 사용하기](/python/JangoDevelopmentBasic/)\n    - [가상환경 사용하기](/python/JangoDevelopmentBasic/jangoBasic.html)\n- [bookmark 앱 개발](/python/developBookmark/)\n    - [설계](/python/developBookmark/1_design.html)\n    - [개발 뼈대 세우기](/python/developBookmark/2_makeBorn.html)\n    - [모델 개발](/python/developBookmark/3_model.html)\n    - [URLconf 개발](/python/developBookmark/4_URLconf.html)\n    - [뷰 개발](/python/developBookmark/5_view.html)\n    - [템플릿 개발](/python/developBookmark/6_templates.html)\n    - [결과물 확인](/python/developBookmark/7_run.html)\n- [bookmark 앱 개발](/python/developBlog/)\n    - [Blog앱에 태그 달기](/python/developBlog/7_tag.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/python/tip/\">python 코딩 Tip!</a>\n <ul>\n <li><a href=\"/python/tip/tip.html\">파이썬 코딩 시, 알아야 할 꿀팁!</a></li>\n </ul>\n </li>\n <li><a href=\"/python/webStandardLibrary/\">웹 표준 라이브러리</a>\n <ul>\n <li><a href=\"/python/webStandardLibrary/webClientLIbrary.html\">웹 클라이언트 라이브러리</a></li>\n <li><a href=\"/python/webStandardLibrary/webServerLibrary.html\">웹 서버 라이브러리</a></li>\n <li><a href=\"/python/webStandardLibrary/CgiWsgiLibrary.html\">CGI/WSGI 라이브러리</a></li>\n </ul>\n </li>\n <li><a href=\"/python/DjangoWebFramework/\">Django 웹 프레임워크</a>\n <ul>\n <li><a href=\"/python/DjangoWebFramework/jangoInstall.html\">장고 프로그램 설치</a></li>\n <li><a href=\"/python/DjangoWebFramework/jangoDevelopmentPattern.html\">장고의 웹애플리케이션 개발 방식</a></li>\n <li><a href=\"/python/DjangoWebFramework/applicationArchithect.html\">프로젝트 뼈대 만들기</a></li>\n <li><a href=\"/python/DjangoWebFramework/applicationDevelopment-Model.html\">애플리케이션 개발하기 - Model 코딩</a></li>\n <li><a href=\"/python/DjangoWebFramework/jangoDevelopment-View_Templete.html\">애플리케이션 개발하기 - URLconf, View 및 Templete 코딩</a></li>\n </ul>\n </li>\n <li><a href=\"/python/DjangoCoreFunction/\">Django 핵심기능</a>\n <ul>\n <li><a href=\"/python/DjangoCoreFunction/decorateAdminSite.html\">Admin 사이트 꾸미기</a></li>\n <li><a href=\"/python/DjangoCoreFunction/dataAlterbyPythonShell.html\">장고 파이썬 쉘로 데이터 조작하기</a></li>\n <li><a href=\"/python/DjangoCoreFunction/templateSystem.html\">템플릿 시스템</a></li>\n <li><a href=\"/python/DjangoCoreFunction/DjangoForm.html\">Django 의 폼 처리 기능</a></li>\n <li><a href=\"/python/DjangoCoreFunction/DjangoViewClass.html\">클래스 형 뷰</a></li>\n <li><a href=\"/python/DjangoCoreFunction/DjangoLogging.html\">로그 남기기</a></li>\n </ul>\n </li>\n <li><a href=\"/python/extendExampleProject/\">실습예제 심화</a>\n <ul>\n <li><a href=\"/python/extendExampleProject/addNewApplication.html\">새로운 애플리케이션 만들기</a></li>\n </ul>\n </li>\n <li><a href=\"/python/DjangoWebServerConfig/\">Django 웹서버 연동원리</a>\n <ul>\n <li><a href=\"/python/DjangoWebServerConfig/wsgi_py_file.html\">장고의 wsgi.py 파일</a></li>\n <li><a href=\"/python/DjangoWebServerConfig/jangoSettingCheckListInProductMode.html\">운영 서버 적용 전 장고의 설정 변경 사항</a></li>\n </ul>\n </li>\n <li><a href=\"/python/pythonAnyWhereCloudServerDeploy/\">Cloud (pythonanywhere) 서버에 Django 배포하기</a>\n <ul>\n <li><a href=\"/python/pythonAnyWhereCloudServerDeploy/pythonanywhereDeploy.html\">PythonAnyWhere에 장고소스 배포하기</a></li>\n </ul>\n </li>\n <li><a href=\"/python/ApacheWebServerDeploy/\">Apache 웹서버 연동하기</a>\n <ul>\n <li><a href=\"/python/ApacheWebServerDeploy/apacheWebServerDeploy.html\">아파치 웹 서버와 연동</a></li>\n </ul>\n </li>\n <li><a href=\"/python/NginxWebServerDeploy/\">NGINX 웹서버와 연동하기</a>\n <ul>\n <li><a href=\"/python/NginxWebServerDeploy/nginxWebServerDeploy.html\">NGINX 웹 서버와 연동</a></li>\n </ul>\n </li>\n <li><a href=\"/python/JangoDevelopmentBasic/\">파이썬 가상환경 사용하기</a>\n <ul>\n <li><a href=\"/python/JangoDevelopmentBasic/jangoBasic.html\">가상환경 사용하기</a></li>\n </ul>\n </li>\n <li><a href=\"/python/developBookmark/\">bookmark 앱 개발</a>\n <ul>\n <li><a href=\"/python/developBookmark/1_design.html\">설계</a></li>\n <li><a href=\"/python/developBookmark/2_makeBorn.html\">개발 뼈대 세우기</a></li>\n <li><a href=\"/python/developBookmark/3_model.html\">모델 개발</a></li>\n <li><a href=\"/python/developBookmark/4_URLconf.html\">URLconf 개발</a></li>\n <li><a href=\"/python/developBookmark/5_view.html\">뷰 개발</a></li>\n <li><a href=\"/python/developBookmark/6_templates.html\">템플릿 개발</a></li>\n <li><a href=\"/python/developBookmark/7_run.html\">결과물 확인</a></li>\n </ul>\n </li>\n <li><a href=\"/python/developBlog/\">bookmark 앱 개발</a>\n <ul>\n <li><a href=\"/python/developBlog/7_tag.html\">Blog앱에 태그 달기</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/python/","name":"README.md","path":"python/README.md","url":"/python/"},{"sort":1,"layout":"default","title":"설계","content":"<h1 id=\"설계\">설계</h1>\n\n<p><br /></p>\n\n<h2 id=\"1-설계-순서\">1. 설계 순서</h2>\n<h4 id=\"1-화면-ui-설계--화면-캡쳐본이나-디자인\">(1). 화면 UI 설계 : 화면 캡쳐본이나 디자인</h4>\n\n<h4 id=\"2-테이블-설계-양식\">(2). 테이블 설계 양식</h4>\n\n<table>\n <thead>\n <tr>\n <th>필드명</th>\n <th>타입</th>\n <th>제약조건</th>\n <th>설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>id</td>\n <td>integer</td>\n <td>PK, Auto Increment</td>\n <td>기본키</td>\n </tr>\n </tbody>\n</table>\n\n<h4 id=\"3-로직-설계-양식\">(3). 로직 설계 양식</h4>\n\n<table>\n <thead>\n <tr>\n <th>URL</th>\n <th>View(=controller)</th>\n <th>Templates</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>/bookmark/</td>\n <td>BookmarkLV.as_view()</td>\n <td>boomark_list.html</td>\n </tr>\n </tbody>\n</table>\n\n<h4 id=\"4-url-설계-양식\">(4). URL 설계 양식</h4>\n\n<table>\n <thead>\n <tr>\n <th>URL 패턴</th>\n <th>뷰 이름</th>\n <th>템플릿 파일 이름</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>/bookmark/99/</td>\n <td>BookmarkDV(DetailView)</td>\n <td>bookmark_detail.html</td>\n </tr>\n </tbody>\n</table>\n\n<p><br /></p>\n\n<h2 id=\"2-작업코딩-순서\">2. 작업/코딩 순서</h2>\n\n<table>\n <thead>\n <tr>\n <th>작업순서</th>\n <th>관련명령/파일</th>\n <th>필요한 작업 내용</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>뼈대만들기</td>\n <td>startproject<br />settings.py<br />migrate<br />createsuperuser<br />startapp<br />settings.py</td>\n <td>mysite 프로젝트 생성<br />프로젝트 설정 항목 변경<br />User/Group 테이블 생성<br />프로젝트 관리자인 슈퍼유저 생성<br />북마크 앱 생성<br />북마크 앱 등록</td>\n </tr>\n <tr>\n <td>모델코딩</td>\n <td>models.py<br />admin.py<br />makemigrations<br />migrate</td>\n <td>모델(테이블)정의<br />Admin 사이트에 모델 등록<br />모델의 변경사항 추출<br />변경사항을 데이터베이스에 반영</td>\n </tr>\n <tr>\n <td>URLconf코딩</td>\n <td>urls.py</td>\n <td>URL 정의</td>\n </tr>\n <tr>\n <td>뷰 코딩</td>\n <td>views.py</td>\n <td>뷰 로직 구성</td>\n </tr>\n <tr>\n <td>템플릿 코딩하기</td>\n <td>templates 디렉토리</td>\n <td>템플릿 파일 작성</td>\n </tr>\n </tbody>\n</table>\n","dir":"/python/developBookmark/","name":"1_design.md","path":"python/developBookmark/1_design.md","url":"/python/developBookmark/1_design.html"},{"sort":1,"layout":"default","title":"Spring Security 설정","content":"<h1 id=\"spring-security-설정\">Spring Security 설정</h1>\n<ul>\n <li>스프링 시큐리티는, 서브릿의 필터와 인터셉터를 이용하여 처리</li>\n <li>필터 : 스프링과 무관한 서블릿 자원</li>\n <li>인터셉터 : 스프링의 빈으로 관리되는 스프링 컨텍스트에 속함, 스프링 내부 컨트롤러 호출 마다 관여</li>\n</ul>\n\n<h2 id=\"1-pomxml-의존성-추가하기\"><font color=\"blue\">1. pom.xml 의존성 추가하기</font></h2>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core --&gt;</span>\n    <span class=\"nt\">&lt;dependency&gt;</span>\n        <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.security<span class=\"nt\">&lt;/groupId&gt;</span>\n        <span class=\"nt\">&lt;artifactId&gt;</span>spring-security-core<span class=\"nt\">&lt;/artifactId&gt;</span>\n        <span class=\"nt\">&lt;version&gt;</span>5.4.2<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;/dependency&gt;</span>\n    <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web --&gt;</span>\n    <span class=\"nt\">&lt;dependency&gt;</span>\n        <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.security<span class=\"nt\">&lt;/groupId&gt;</span>\n        <span class=\"nt\">&lt;artifactId&gt;</span>spring-security-web<span class=\"nt\">&lt;/artifactId&gt;</span>\n        <span class=\"nt\">&lt;version&gt;</span>5.4.2<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;/dependency&gt;</span>\n    <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config --&gt;</span>\n    <span class=\"nt\">&lt;dependency&gt;</span>\n        <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.security<span class=\"nt\">&lt;/groupId&gt;</span>\n        <span class=\"nt\">&lt;artifactId&gt;</span>spring-security-config<span class=\"nt\">&lt;/artifactId&gt;</span>\n        <span class=\"nt\">&lt;version&gt;</span>5.4.2<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;/dependency&gt;</span>\n    <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-taglibs --&gt;</span>\n    <span class=\"nt\">&lt;dependency&gt;</span>\n        <span class=\"nt\">&lt;groupId&gt;</span>org.springframework.security<span class=\"nt\">&lt;/groupId&gt;</span>\n        <span class=\"nt\">&lt;artifactId&gt;</span>spring-security-taglibs<span class=\"nt\">&lt;/artifactId&gt;</span>\n        <span class=\"nt\">&lt;version&gt;</span>5.4.2<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-security-contextxml-파일-추가\"><font color=\"blue\">2. security-context.xml 파일 추가</font></h2>\n<ul>\n <li>/WEB-INF/spring 하위에 <code class=\"language-plaintext highlighter-rouge\">security-context.xml</code> 추가</li>\n <li>file &gt; new &gt; ‘Spring Bean Configuration File’ 로 생성</li>\n <li>security-context.xml 의 네임스페이스 추가</li>\n <li>네임스페이스에 5버전이 명시되어 있다면 버전부분만 삭제하고 사용할 것. (spring-security-5.0.xsd =&gt; spring-security.xsd)</li>\n <li>스프링 시큐리티를 사용하기 위한 최소한의 설정 추가</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"nt\">&lt;beans</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.springframework.org/schema/beans\"</span>\n\t<span class=\"na\">xmlns:xsi=</span><span class=\"s\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n\t<span class=\"na\">xmlns:security=</span><span class=\"s\">\"http://www.springframework.org/schema/security\"</span>\n\t<span class=\"na\">xsi:schemaLocation=</span><span class=\"s\">\"http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span class=\"nt\">&gt;</span>\n\t<span class=\"nt\">&lt;security:http&gt;</span>\n\t\n\t\t<span class=\"nt\">&lt;security:form-login/&gt;</span>\n\t\n\t<span class=\"nt\">&lt;/security:http&gt;</span>\n\t\n\t<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n\t\n\t<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n\n<span class=\"nt\">&lt;/beans&gt;</span>\n</code></pre>  </div></div>\n<h2 id=\"3-webxml에-security-context-로딩-설정\"><font color=\"blue\">3. web.xml에 security-context 로딩 설정</font></h2>\n<ul>\n <li>시큐리티 필터 빈을 재대로 이용하기 위해 스프링 설정 파일을 로딩하도록 설정</li>\n <li>필터를 이용해서 시큐리티가 스프링 동작에 관여하도록 설정</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 시큐리티 관련 설정파일 추가 --&gt;</span>\n<span class=\"nt\">&lt;context-param&gt;</span>\n\t\t<span class=\"nt\">&lt;param-name&gt;</span>contextConfigLocation<span class=\"nt\">&lt;/param-name&gt;</span>\n\t\t<span class=\"nt\">&lt;param-value&gt;</span>/WEB-INF/spring/root-context.xml\n\t\t/WEB-INF/spring/security-context.xml<span class=\"nt\">&lt;/param-value&gt;</span>\n\t<span class=\"nt\">&lt;/context-param&gt;</span>\n\t\n\t<span class=\"c\">&lt;!-- Creates the Spring Container shared by all Servlets and Filters --&gt;</span>\n\t<span class=\"nt\">&lt;listener&gt;</span>\n\t\t<span class=\"nt\">&lt;listener-class&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"nt\">&lt;/listener-class&gt;</span>\n\t<span class=\"nt\">&lt;/listener&gt;</span>\n<span class=\"c\">&lt;!-- 시큐리티 필터 추가 --&gt;</span>\n\t<span class=\"nt\">&lt;filter&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>springSecurityFilterChain<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-class&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class=\"nt\">&lt;/filter-class&gt;</span>\n\t<span class=\"nt\">&lt;/filter&gt;</span>\n\t\n\t<span class=\"nt\">&lt;filter-mapping&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>springSecurityFilterChain<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;url-pattern&gt;</span>/*<span class=\"nt\">&lt;/url-pattern&gt;</span>\n\t<span class=\"nt\">&lt;/filter-mapping&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-기본설정-상태에서-웹서버-확인\"><font color=\"blue\">4. 기본설정 상태에서 웹서버 확인</font></h2>\n\n<ol>\n <li>SecuritySampleController.java 에 URL 설계\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.stereotype.Controller</span><span class=\"o\">;</span>\n <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.bind.annotation.GetMapping</span><span class=\"o\">;</span>\n <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.bind.annotation.RequestMapping</span><span class=\"o\">;</span>\n\n <span class=\"kn\">import</span> <span class=\"nn\">lombok.extern.log4j.Log4j</span><span class=\"o\">;</span>\n\n <span class=\"nd\">@Controller</span>\n <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n <span class=\"nd\">@Log4j</span>\n <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SecuritySampleController</span> <span class=\"o\">{</span>\n        \n     <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/all\"</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">doAll</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"do all access everybody.\"</span><span class=\"o\">);</span>\n     <span class=\"o\">}</span>\n        \n     <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/member\"</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">doMember</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"logined member.\"</span><span class=\"o\">);</span>\n     <span class=\"o\">}</span>\n        \n     <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/admin\"</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">doAdmin</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"admin only.\"</span><span class=\"o\">);</span>\n     <span class=\"o\">}</span>\n        \n        \n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>view/sample 하위에 URL에 맞는 jsp 작성\n <ul>\n <li>all.jsp, member.jsp, admin.jsp 생성</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n     pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n <span class=\"nt\">&lt;html&gt;</span>\n <span class=\"nt\">&lt;head&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">'Content-Type'</span> <span class=\"na\">content=</span><span class=\"s\">'text/html; charset=UTF-8'</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n <span class=\"nt\">&lt;/head&gt;</span>\n <span class=\"nt\">&lt;body&gt;</span>\n <span class=\"nt\">&lt;h1&gt;</span>/sample/all page<span class=\"nt\">&lt;/h1&gt;</span>\n <span class=\"nt\">&lt;/body&gt;</span>\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>탐캣을 실행 시킨 후, 웹브라우저에서 화면이 잘 뜨는지 확인\n <ul>\n <li>http://localhost:8080/sample/all\n<img src=\"/assets/images/security_basic_test.png\" alt=\"시큐리티 기본설정 테스트\" /></li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"5-인증과-권한부여\"><font color=\"blue\">5. 인증과 권한부여</font></h2>\n<ol>\n <li><strong>Authentication (인증)</strong>\n <ul>\n <li>자신을 증명하는 것, 회원가입 후 로그인 절차 같이 자신이 ID 아무개 임을 PASSWORD로 증명하는 것</li>\n </ul>\n </li>\n <li><strong>Authorisation (권한부여)</strong>\n <ul>\n <li>페이지 별로, 접근이 허용되는 권한이 다른데, 그 권한이 부여된 것.</li>\n </ul>\n </li>\n <li><strong>인증과 권한부여를 담당하는 클래스</strong>\n <ul>\n <li>AuthenticationManager &lt;- ProviderManager &lt;-&gt; AuthenticationProvider &lt;-&gt; UserDetailsService</li>\n </ul>\n </li>\n <li>개발자가 시큐리티 커스터마이징 하는 방법\n <ul>\n <li>새로운 프로토콜, 인증 구현 방식 직접 구현하는 경우 : AuthenticationProvider를 직접 구현하는 방식</li>\n <li>UserDetailsService 구현하는 방식</li>\n </ul>\n </li>\n</ol>\n","dir":"/spring5/7_security/","name":"1_setting.md","path":"spring5/7_security/1_setting.md","url":"/spring5/7_security/1_setting.html"},{"sort":1,"layout":"default","title":"스프링 MVC 기본 설정","content":"<h1 id=\"스프링-mvc-기본-설정\">스프링 MVC 기본 설정</h1>\n\n<ul>\n <li>참고 : <a href=\"https://spring.io/projects\">https://spring.io/projects</a></li>\n <li>스프링 MVC는 스프링의 서브 프로젝트 중 하나.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">스프링 코어</code> 프레임워크에 여러 서브 프로젝트를 결합할 수 있는 형태.</li>\n <li>\n <p>스프링 기능 중, MVC에 대한 설정을 하는 것이 ‘servlet-context.xml’ 또는 ‘ServletConfig.class’.</p>\n </li>\n <li>XML 설정을 이용할 지, JAVA 설정을 이용할지 결정하기</li>\n <li>JAVA 설정을 이용할 경우 pom.xml 에서 아래와 같이 추가하고, servlet-context.xml, root-context.xml, web.xml, spring 폴더는 삭제한다.</li>\n <li>XML 설정을 이용할 경우, 변경사항 없이 시작한다.</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;plugin&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>org.apache.maven.plugins<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>maven-war-plugin<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>3.2.0<span class=\"nt\">&lt;/version&gt;</span>\n    <span class=\"nt\">&lt;configuration&gt;</span>\n        <span class=\"nt\">&lt;failOnMissingWebXml&gt;</span>false<span class=\"nt\">&lt;/failOnMissingWebXml&gt;</span>\n    <span class=\"nt\">&lt;/configuration&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"1-java-설정---rootconfigjava\"><font color=\"blue\">1. JAVA 설정 - RootConfig.java</font></h2>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">src/java/main</code> 폴더 하위에 <code class=\"language-plaintext highlighter-rouge\">org.example.config</code> 패키지 생성</li>\n <li><code class=\"language-plaintext highlighter-rouge\">RootConfig.java</code> 파일 생성 : 이전에 작업한 내용은 주석처리하고 기본 설정만 살려두었다.</li>\n</ol>\n\n<ul>\n <li>RootConfig.java\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\t\n  <span class=\"c1\">// import javax.sql.DataSource;</span>\n  <span class=\"c1\">// import org.apache.ibatis.session.SqlSessionFactory;</span>\n  <span class=\"c1\">// import org.mybatis.spring.SqlSessionFactoryBean;</span>\n  <span class=\"c1\">// import org.mybatis.spring.annotation.MapperScan;</span>\n  <span class=\"c1\">// import org.springframework.context.annotation.Bean;</span>\n  <span class=\"c1\">// import org.springframework.context.annotation.ComponentScan;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.context.annotation.Configuration</span><span class=\"o\">;</span>\n\t\n  <span class=\"kn\">import</span> <span class=\"nn\">com.zaxxer.hikari.HikariConfig</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">com.zaxxer.hikari.HikariDataSource</span><span class=\"o\">;</span>\n\t\n  <span class=\"nd\">@Configuration</span>\n  <span class=\"c1\">// @ComponentScan(basePackages = {\"org.example.sample\"})</span>\n  <span class=\"c1\">// @MapperScan(basePackages = {\"org.example.mapper\"})</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RootConfig</span> <span class=\"o\">{</span>\n\t\n      <span class=\"c1\">// @Bean</span>\n      <span class=\"c1\">// public DataSource dataSource() {</span>\n      <span class=\"c1\">// \tHikariConfig config = new HikariConfig();</span>\n      <span class=\"c1\">// \tconfig.setDriverClassName(\"net.sf.log4jdbc.sql.jdbcapi.DriverSpy\");</span>\n      <span class=\"c1\">// \tconfig.setJdbcUrl(\"jdbc:log4jdbc:mysql://localhost:3306/testDb\");</span>\n      <span class=\"c1\">// \t//config.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");</span>\n      <span class=\"c1\">// \tconfig.setUsername(\"book_ex\");</span>\n      <span class=\"c1\">// \tconfig.setPassword(\"Tpdlfdl3278!\");</span>\n      <span class=\"c1\">// \tconfig.addDataSourceProperty(\"serverTimezone\", \"UTC\");</span>\n      <span class=\"c1\">// \tconfig.addDataSourceProperty(\"cachePrepStmts\", \"true\");</span>\n      <span class=\"c1\">// \tconfig.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");</span>\n      <span class=\"c1\">// \tconfig.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");</span>\n\t\n      <span class=\"c1\">// \tHikariDataSource ds = new HikariDataSource(config);</span>\n      <span class=\"c1\">// \treturn ds;</span>\n      <span class=\"c1\">// }</span>\n\t\t\n      <span class=\"c1\">// @Bean</span>\n      <span class=\"c1\">// public SqlSessionFactory sqlSessionFactory() throws Exception {</span>\n      <span class=\"c1\">// \tSqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();</span>\n      <span class=\"c1\">// \tsqlSessionFactory.setDataSource(dataSource());</span>\n      <span class=\"c1\">// \treturn (SqlSessionFactory) sqlSessionFactory.getObject();</span>\n      <span class=\"c1\">// }</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n <h2 id=\"2-java-설정---servletconfigjava\"><font color=\"blue\">2. JAVA 설정 - ServletConfig.java</font></h2>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">@EnableWebMvc</code> 어노테이션을 붙임으로 MVC를 설정할 수 있다.</li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">@ComponentScan</code> 도 ServletConfig 에서 할 수 있다.</p>\n </li>\n <li>ServletConfig.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.context.annotation.ComponentScan</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.EnableWebMvc</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.ViewResolverRegistry</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.WebMvcConfigurer</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.view.InternalResourceViewResolver</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.view.JstlView</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@EnableWebMvc</span>\n<span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.controller\"</span><span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ServletConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">WebMvcConfigurer</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">configureViewResolvers</span><span class=\"o\">(</span><span class=\"nc\">ViewResolverRegistry</span> <span class=\"n\">registry</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"nc\">InternalResourceViewResolver</span> <span class=\"n\">bean</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">InternalResourceViewResolver</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setViewClass</span><span class=\"o\">(</span><span class=\"nc\">JstlView</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setPrefix</span><span class=\"o\">(</span><span class=\"s\">\"/WEB-INF/views/\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setSuffix</span><span class=\"o\">(</span><span class=\"s\">\".jsp\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"na\">viewResolver</span><span class=\"o\">(</span><span class=\"n\">bean</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addResourceHandlers</span><span class=\"o\">(</span><span class=\"nc\">ResourceHandlerRegistry</span> <span class=\"n\">registry</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"na\">addResourceHandler</span><span class=\"o\">(</span><span class=\"s\">\"/resources/**\"</span><span class=\"o\">).</span><span class=\"na\">addResourceLocations</span><span class=\"o\">(</span><span class=\"s\">\"/resources/\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<h2 id=\"3-java-설정---webconfigjava\"><font color=\"blue\">3. JAVA 설정 - WebConfig.java</font></h2>\n<blockquote>\n <p><code class=\"language-plaintext highlighter-rouge\">AbstractAnnotationConfigDispatcherServletInitializer</code> 상속 <br />\n<code class=\"language-plaintext highlighter-rouge\">web.xml</code> 설정을 대체하는 java 파일 <br />\n<code class=\"language-plaintext highlighter-rouge\">org.example.config</code> 패키지 하위에 생성 <br />\n<code class=\"language-plaintext highlighter-rouge\">getRootConfigClasses()</code> 함수에 <code class=\"language-plaintext highlighter-rouge\">RootConfig.class</code> 파일을 맵핑해준다. <br />\n<code class=\"language-plaintext highlighter-rouge\">getServletConfigClasses()</code> 함수에 <code class=\"language-plaintext highlighter-rouge\">ServletConfig.class</code> 파일을 맵핑해 준다. <br />\n<code class=\"language-plaintext highlighter-rouge\">getServletMappings()</code> 함수에 Context-Root 인 “/” 를 반환하도록 한다.</p>\n</blockquote>\n\n<ul>\n <li>WebConfig.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">WebConfig</span> <span class=\"kd\">extends</span>\n<span class=\"nc\">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getRootConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">RootConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getServletConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">ServletConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"nf\">getServletMappings</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"s\">\"/\"</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-java-설정---확인\"><font color=\"blue\">4. JAVA 설정 - 확인</font></h2>\n<ul>\n <li>\n <p>Tomcat 서버의 Path를 ‘/’ 로 변경한다.\n<img src=\"/assets/images/tomcat_path.png\" alt=\"탐캣설정\" /></p>\n </li>\n <li>Tomcat 서버를 Start 한다.</li>\n <li>웹브라우저에서 <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080</code>을 호출 시, “Hello, World!” 가 정상적으로 보여진다.</li>\n</ul>\n\n","dir":"/spring5/2_mvc/","name":"architect.md","path":"spring5/2_mvc/architect.md","url":"/spring5/2_mvc/architect.html"},{"sort":1,"layout":"default","title":"REST 방식","content":"<h1 id=\"rest-방식\">REST 방식</h1>\n\n<ul>\n <li><strong>REST</strong> : ‘Representational State Transfer’, URI가 하나의 리소스를 대표하도록 설계 하는 방식</li>\n <li><strong>REST 방식을 위해 필요한 어노테이션</strong></li>\n</ul>\n\n<ol>\n <li>@RestController : Controller 가 Rest 방식임을 명시함</li>\n <li>@ResponseBody : 뷰가 아닌 데이터 자체를 전달하기 위한 어노테이션</li>\n <li>@PathVariable : url 경로의 값을 파라미터처럼 사용하기 위한 어노테이션</li>\n <li>@CrossOrigin : Ajax의 크로스 도메인 문제를 해결해 주는 어노테이션</li>\n <li>@RequestBody : 뷰로부터 전달받은 Json 을 객체로 변환해 주는 어노테이션</li>\n</ol>\n\n<h2 id=\"1-restcontroller\"><font color=\"blue\">1. @RestController</font></h2>\n<ul>\n <li>뷰로 전달하는 방식이 아니라, 데이터 자체를 전송함</li>\n <li>@Controller에서, @ResponseBody를 이용한 것과 동일한 결과임</li>\n <li>@RestController는 리턴타입으로 사용자 객체를 이용할 수 있고, 이를 Json이나 Xml로 자동으로 처리 가능함</li>\n</ul>\n\n<ol>\n <li>Json 데이터를 처리하기 위한 <code class=\"language-plaintext highlighter-rouge\">jackson-databind</code> 라이브러리를 pom.xml 에 추가</li>\n <li>Xml 데이터 처리를 위한 <code class=\"language-plaintext highlighter-rouge\">jackson-dataformat-xml</code> 라이브러리를 pom.xml 에 추가</li>\n <li>java 객체를 json 으로 변경하기 위한 <code class=\"language-plaintext highlighter-rouge\">gson</code> 라이브러리를 pom.xml 에 추가</li>\n</ol>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>com.fasterxml.jackson.dataformat<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>jackson-dataformat-xml<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>2.12.1<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n\n<span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>jackson-databind<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>2.12.1<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n\n<span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;</span>\n<span class=\"nt\">&lt;dependency&gt;</span>\n    <span class=\"nt\">&lt;groupId&gt;</span>com.google.code.gson<span class=\"nt\">&lt;/groupId&gt;</span>\n    <span class=\"nt\">&lt;artifactId&gt;</span>gson<span class=\"nt\">&lt;/artifactId&gt;</span>\n    <span class=\"nt\">&lt;version&gt;</span>2.8.5<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;/dependency&gt;</span>\n\n</code></pre>  </div></div>\n\n<h2 id=\"2-restcontroller-반환타입\"><font color=\"blue\">2. @RestController 반환타입</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-1. 단순 문자열 반환</font></strong></p>\n<ul>\n <li>순수한 text 또는 Json, Xml 로 반환</li>\n <li>@GetMapping의 <code class=\"language-plaintext highlighter-rouge\">produces</code> 속성에 <code class=\"language-plaintext highlighter-rouge\">text/plain; charset=UTF-8</code> MIME 타입 명시\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">\"/getText\"</span><span class=\"o\">,</span> <span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"s\">\"text/plain; charset=UTF-8\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">getText</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"MIME TYPE:\"</span> <span class=\"o\">+</span> <span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">);</span>\n      <span class=\"k\">return</span> <span class=\"s\">\"안녕하세요, 순수 텍스트 반환 테스트 입니다.\"</span><span class=\"o\">;</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n <p><img src=\"/assets/images/getText.png\" alt=\"rest_getText\" /></p>\n </li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-2. 객체 반환</font></strong></p>\n<ul>\n <li>객체 반환은, JSON이나 XML을 이용함</li>\n <li>produces 의 MIME 타입은, 생략이 가능하지만 명시적으로 선언하는 것이 좋음\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">\"/getObject\"</span><span class=\"o\">,</span> \n              <span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">,</span>\n                          <span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_XML_VALUE</span><span class=\"o\">}</span> <span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"nc\">RestSampleVO</span> <span class=\"nf\">getObject</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">RestSampleVO</span><span class=\"o\">(</span><span class=\"mi\">112</span><span class=\"o\">,</span> <span class=\"s\">\"스타\"</span><span class=\"o\">,</span> <span class=\"s\">\"골드\"</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>결과 1: http://localhost:8080/restSample/getObject 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getObject_xml.png\" alt=\"객체를 XML로 반환\" /></p>\n\n<ul>\n <li>결과 2: http://localhost:8080/restSample/getObject.json 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getObject_json.png\" alt=\"객체를 JSON로 반환\" /></p>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-3. 컬렉션 객체 반환</font></strong></p>\n<ul>\n <li>맵, 배열, 리스트등 전송 가능</li>\n <li>produces 명시 하지 않으면, 자동으로 xml 이나 json 으로 전송됨\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"/getCollection\"</span><span class=\"o\">,</span>\n          <span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">,</span>\n                      <span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_XML_VALUE</span><span class=\"o\">})</span>\n  <span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">RestSampleVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getCollection</span><span class=\"o\">(){</span>\n\t\t\n      <span class=\"k\">return</span> <span class=\"nc\">IntStream</span><span class=\"o\">.</span><span class=\"na\">range</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">).</span><span class=\"na\">mapToObj</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"k\">new</span> <span class=\"nc\">RestSampleVO</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"s\">\"First\"</span><span class=\"o\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"s\">\"Last\"</span><span class=\"o\">)).</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">());</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>결과 1: http://localhost:8080/restSample/getCollection 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getCollection_xml.png\" alt=\"리스트를 XML로 반환\" width=\"50%\" /></p>\n\n<ul>\n <li>결과 2: http://localhost:8080/restSample/getCollection.json 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getCollection_json.png\" alt=\"리스트를 JSON로 반환\" width=\"50%\" /></p>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-4. ResponseEntity 타입 반환</font></strong></p>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">ResponseEntity</code>란?\n <ul>\n <li>‘데이터 + 헤더정보 + 상태정보’를 같이 전달하는 용도로 사용</li>\n </ul>\n </li>\n <li>ResponseEntity 생성자\n <ul>\n <li>ResponseEntity(HttpStatus status)</li>\n <li>ResponseEntity(MultiValueMap&lt;String, String&gt; headers, HttpStatus status)</li>\n <li>ResponseEntity(T body, MultiValueMap&lt;String, String&gt; headers, HttpsStatus status)</li>\n <li>ResponseEntity(T body, MultiValueMap&lt;String, String&gt; headers, int rawStatus)</li>\n </ul>\n </li>\n</ol>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"/getResponseEntity\"</span><span class=\"o\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"firstName\"</span><span class=\"o\">,</span> <span class=\"s\">\"lastName\"</span><span class=\"o\">})</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">RestSampleVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getResponseEntity</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">firstName</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">lastName</span><span class=\"o\">){</span>\n\t\t\n\t\t<span class=\"nc\">RestSampleVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">RestSampleVO</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">firstName</span><span class=\"o\">,</span> <span class=\"n\">lastName</span><span class=\"o\">);</span>\n\t\t<span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">RestSampleVO</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"na\">status</span><span class=\"o\">(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">).</span><span class=\"na\">body</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>결과 1: http://localhost:8080/restSample/getResponseEntity.json?firstName=kim&amp;lastName=yunmi 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getResponseEntity_json.png\" alt=\"ResponseEntity로 반환\" /></p>\n\n<h2 id=\"3-restcontroller의-파라미터\"><font color=\"blue\">3. @RestController의 파라미터</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">3-1. @PathVariable</font></strong></p>\n<ul>\n <li>url 경로를 파라미터처럼 사용할 때 사용한다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/product/{cat}/{pid}\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"nf\">getPath</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"cat\"</span><span class=\"o\">)</span> <span class=\"nc\">String</span> <span class=\"n\">cat</span><span class=\"o\">,</span> <span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"pid\"</span><span class=\"o\">)</span> <span class=\"nc\">Integer</span> <span class=\"n\">pid</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"s\">\"cat:\"</span><span class=\"o\">+</span><span class=\"n\">cat</span><span class=\"o\">,</span> <span class=\"s\">\"pid:\"</span><span class=\"o\">+</span><span class=\"n\">pid</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>결과 1: http://localhost:8080/restSample/product/Nabi/1.json 호출</li>\n</ul>\n\n<p><img src=\"/assets/images/getPath_json.png\" alt=\"Path를 파라미터로 변환\" /></p>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">3-2. @RequestBody</font></strong></p>\n<ul>\n <li>json 으로 Controller에 전송된 데이터를 사용자 객체로 변환할 때 사용한다.</li>\n <li>body를 이용함으로 post 요청만 할 수 있다.</li>\n <li>요청을 post 로 Json 데이터를 전송하고, 받을 때는 @RequestBody에 의해 RestSampleVO로 받는다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/getJson\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">RestSampleVO</span> <span class=\"nf\">getJsonToObj</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nc\">RestSampleVO</span> <span class=\"n\">vo</span><span class=\"o\">){</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">vo</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>test 및 결과 확인 : test는 크롬 브라우저의 확장 프로그램 <code class=\"language-plaintext highlighter-rouge\">REST Client</code>를 이용한다.\n<img src=\"/assets/images/getJson_test.png\" alt=\"Post 요청 @RequestBody\" /></li>\n</ul>\n\n<h2 id=\"4-rest-방식의-test\"><font color=\"blue\">4. Rest 방식의 TEST</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">4-1. Json 으로 테스트하기</font></strong></p>\n\n<ul>\n <li>3-2. @RequestBody 의 예제를 호출하는 테스트를 작성하였다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">static</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">springframework</span><span class=\"o\">.</span><span class=\"na\">test</span><span class=\"o\">.</span><span class=\"na\">web</span><span class=\"o\">.</span><span class=\"na\">servlet</span><span class=\"o\">.</span><span class=\"na\">request</span><span class=\"o\">.</span><span class=\"na\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">static</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">springframework</span><span class=\"o\">.</span><span class=\"na\">test</span><span class=\"o\">.</span><span class=\"na\">web</span><span class=\"o\">.</span><span class=\"na\">servlet</span><span class=\"o\">.</span><span class=\"na\">result</span><span class=\"o\">.</span><span class=\"na\">MockMvcResultMatchers</span><span class=\"o\">.</span><span class=\"na\">status</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.RestSampleVO</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.junit.Before</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.junit.Test</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.junit.runner.RunWith</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.beans.factory.annotation.Autowired</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.http.MediaType</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.context.ContextConfiguration</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.context.junit4.SpringJUnit4ClassRunner</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.context.web.WebAppConfiguration</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.web.servlet.MockMvc</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.web.servlet.MvcResult</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.web.servlet.ResultActions</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.web.servlet.setup.MockMvcBuilders</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.context.WebApplicationContext</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">com.google.gson.Gson</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.extern.log4j.Log4j</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@WebAppConfiguration</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">({</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml\"</span><span class=\"o\">,</span>\n\t\t\t\t\t   <span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RestSampleControllerTest</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">WebApplicationContext</span> <span class=\"n\">ctx</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"nc\">MockMvc</span> <span class=\"n\">mockMvc</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Before</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">mockMvc</span> <span class=\"o\">=</span> <span class=\"nc\">MockMvcBuilders</span><span class=\"o\">.</span><span class=\"na\">webAppContextSetup</span><span class=\"o\">(</span><span class=\"n\">ctx</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConvert</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span><span class=\"o\">{</span>\n\t\t<span class=\"nc\">RestSampleVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">RestSampleVO</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setMno</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setFirstName</span><span class=\"o\">(</span><span class=\"s\">\"김\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setLastName</span><span class=\"o\">(</span><span class=\"s\">\"라라\"</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"nc\">String</span> <span class=\"n\">jsonStr</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Gson</span><span class=\"o\">().</span><span class=\"na\">toJson</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"jsonStr:\"</span> <span class=\"o\">+</span> <span class=\"n\">jsonStr</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"n\">post</span><span class=\"o\">(</span><span class=\"s\">\"/restSample/getJson\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">contentType</span><span class=\"o\">(</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"n\">jsonStr</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andExpect</span><span class=\"o\">(</span><span class=\"n\">status</span><span class=\"o\">().</span><span class=\"na\">is</span><span class=\"o\">(</span><span class=\"mi\">200</span><span class=\"o\">));</span>\n\t\t\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">4-2. 기타도구 사용하기</font></strong></p>\n<ul>\n <li>Tomcat을 구동한다면, Mac 이나 Linux는 <code class=\"language-plaintext highlighter-rouge\">curl</code> 이용</li>\n <li>크롬의 확장 프로그램인 <code class=\"language-plaintext highlighter-rouge\">REST client</code> 이용</li>\n</ul>\n","dir":"/spring5/4_rest_ajsx_reply/","name":"1_rest_anotation.md","path":"spring5/4_rest_ajsx_reply/1_rest_anotation.md","url":"/spring5/4_rest_ajsx_reply/1_rest_anotation.html"},{"sort":1,"layout":"default","title":"PythonAnyWhere에 장고소스 배포하기","content":"# PythonAnyWhere에 장고소스 배포하기\n\n## 1. PythonAnyWhere 가입하기/로그인하기\n\n1. 접속: <www.pythonanywhere.com>\n2. 신규가입 : signup - 'Create a Beginner ACCOUNT' - 개인정보 입력 후 'Register' (이메일 컨펌이 필요함)\n- Beginner은, 도메인명을 바꿀 수 없으며, 장고 앱도 하나만 실행 할 수 있음 \n3. 로그인\n\n## 2. 장고 소스 올리기\n![pythonAnyWhere 메인화면](/assets/images/pythonAnyWhereDashboard.png)\n\n- Dashboard : 나의 사이트에 대한 CPU 사용량등 전체현황\n- Consoles : Bash쉘, Python쉘 작업창\n- Files : 파일과 디렉토리를 보거나, 파일 업로드\n- Web : 장고 앱을 실행하기 위해 필요한 항목 설정\n- Task : cron 작업 명령\n- Databases : mySql DB를 사용하기 위한 메뉴. 장고는 sqlite3를 사용하므로 사용하지 않음\n\n1. file 로 이동\n![pythonAnyWhere File화면](/assets/images/pythonAnyWhereFile.png)\n\n2. Directories 에 'pyBook/ch3'를 입력하여 'New Directory' 버튼을 입력하여 프로젝트 폴더를 생성\n3. 'Upload File'을 눌러 내 PC에서 압축한 프로젝트파일(ch3.zip)을 업로드 한다\n\n## 3. 리눅스 명령어로 압축 풀기\n![pythonAnyWhere File화면](/assets/images/pythonAnyWhereConsole.png)\n1. 'console' 화면으로 이동 - Bash 클릭하여 업로드 했던 파일 압축을 푼다\n```console\n$ cd pyBook/ch3\n$ unzip ch3.zip\n$ tree -L 3\n.\n├── ch3\n│ ├── books\n│ │ ├── __init__.py\n│ │ ├── __pycache__\n│ │ ├── admin.py\n│ │ ├── apps.py\n│ │ ├── migrations\n│ │ ├── models.py\n│ │ ├── templates\n│ │ ├── tests.py\n│ │ ├── urls.py\n│ │ └── views.py\n│ ├── db.sqlite3\n│ ├── logs\n│ │ └── mysite.log\n│ ├── manage.py\n│ ├── mysite\n│ │ ├── __init__.py\n│ │ ├── __pycache__\n│ │ ├── asgi.py\n│ │ ├── settings.py\n│ │ ├── urls.py\n│ │ ├── views.py\n│ │ └── wsgi.py\n│ ├── polls\n│ │ ├── __init__.py\n│ │ ├── __pycache__\n│ │ ├── admin.py\n│ │ ├── apps.py\n│ │ ├── forms.py\n│ │ ├── migrations\n│ │ ├── models.py\n│ │ ├── templates\n│ │ ├── tests.py\n│ │ ├── urls.py\n│ │ └── views.py\n│ └── templates\n│ ├── admin\n│ ├── base.html\n│ ├── base_books.html\n│ ├── base_polls.html\n│ └── home.html\n└── ch3.zip\n```\n\n## 4. 가상환경 만들기\n\n- Bash 쉘에서 계속 작업한다.\n\n```bash\n$ cd /home/kimyunmi/\n$ mkdir VENV\n$ cd VENV\n# python3.8을 사용하는 v3PyBook 가상환경을 생성\n$ virtualenv --python python3.8 v3PyBook\n# 가상환경 안으로 이동\n$ source /home/kimyunmi/VENV/v3PyBook/bin/activate\n# 가상환경에서 장고 설치\n(v3PyBook) $ pip install Django\n# 설치 목록 확인\n(v3PyBook) $ pip list\n\n# 가상환경 종료는,\n(v3PyBook) $ deactivate\n```\n\n## 5. PythonAnyWhere 웹서버에서 장고 설정 변경하기\n- PythonAnyWhere 안에서 웹서버가 실행되고 있음\n- 장고의 'console' 을 열고 settings.py를 수정한다.\n\n```console\n$ cd /home/kimyunmi/pyBook/ch3/ch3/mysite\n$ vim settings.py\n\n# i 나 a 로 편집모드로 진입하여 편집\nALLOWED_HOST = ['kimyunmi.pythonanywhere.com', 'localhost', '127.0.0.1'] # 변경\n\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'www_dir', 'static')\n# ESC + :wq 로 종료\n\n$ cd /home/kimyunmi/pyBook/ch3/ch3\n$ source /home/kimyunmi/VENV/v3PyBook/bin/activate\n(v3PyBook) $ python manage.py collectstatic\n```\n\n## 6. PythonAnyWhere 웹서버 설정하기\n- 웹서버가 장고를 인식 할 수 있도록, 웹서버의 설정을 변경해야 한다\n\n1. 'Web' 메뉴 선택 - 'Add a new web app' 선택 - 'Select a Python Web framework' 대화창에서 'Manual configuration (including virtualenvs)' 선택 - 'Select a Python version' 대화창에서 내가 개발한 파이썬 버전 선택 - 'Next' 클릭하여 마법사 종료\n![웹서버 생성](/assets/images/pythonAnyWhereWeb.png)\n2. 설정마법사가 종료되면, 일단 웹서버는 가동 중이다. 웹 서버 설정을 변경 해 보자\n![웹서버 설정](../../assets/images/pythonAnyWhereWebConf.png) \n 1. Code 섹션의 WSGI configuration file 을 클릭, 아래와 같이 수정한다.\n\n ```python\n import os\n import sys\n\n # 프로젝트 루트 디렉토리 지정\n path = 'home/kimyunmi/pyBook/ch3/ch3'\n if path not in sys.path:\n sys.path.append(path)\n\n os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'\n\n from django.core.wsgi import get_wsgi_application\n application = get_wsgi_application()\n ```\n\n 2. Virtualenv 섹션에서 v3PyBook의 가상환경 경로를 입력하고 체크버튼 클릭 \n `/home/kimyunmi/VENV/v3PyBook/`\n 3. Static files 섹션에서 URL과 Directory 에 settings.py의 STATIC_ROOT 설정 항목 값을 등록한다\n - URL : /static/\n - Directory : /home/kimyunmi/pyBook/ch3/ch3/www_dir/static\n\n3. 모든 설정을 완료 한 후 초록색 Reload 버튼 클릭하여 웹서버 재 시작한다.\n\n## 7. 지금까지 작업한 것 확인하기\n- 웹 브라우저에 'kimyunmi(본인의 계정명).pythonanywhere.com' 을 실행하면, 페이지가 열린다.","dir":"/python/pythonAnyWhereCloudServerDeploy/","name":"pythonanywhereDeploy.md","path":"python/pythonAnyWhereCloudServerDeploy/pythonanywhereDeploy.md","url":"/python/pythonAnyWhereCloudServerDeploy/pythonanywhereDeploy.html"},{"sort":1,"layout":"default","title":"파이썬 코딩 시, 알아야 할 꿀팁!","content":"# 파이썬 코딩 시, 알아야 할 꿀팁!\n\n## 날짜 입력하기\n\n - datetime.datetime.now() 보다는, timezone.now() 사용을 추천함\n - current_year = timezone.now().year\n\n## __str__() 메소드\n\n - 객체를 string 으로 표현해 주기 위해 모든 클래스에 정의 할 수 있다.\n - Question 객체를 알아보기 쉬운 스트링으로 표현하기 위해 self.question_text를 __str__() 함수에서 리턴한다.\n\n## 장고 설치 위치 확인하기\n\n```console\n> python -c 'import django; print(django.__path__)'\n```\n\n## models 의 필드 알아보기\n- 도큐먼트 참조 : <https://docs.djangoproject.com/en/2.1/ref/models/fields/>\n\n## 테이블 간의 관계 (3가지)\n- ForeignKey\n- ManyToManyField\n- OneToOneField\n\n## 장고 파이썬 쉘 (jango python shell) 시작 명령어\n- python manage.py shell\n\n## 장고에서 지원하는 model의 필드\n- 참고 : <https://docs.djangoproject.com/en/3.1/ref/models/fields/>\n\n## CentOs 에서 Python의 특정버전을 범용적으로 사용하는 방법\n`sudo alternatives --set python /usr/bin/python3` \n\n## 운영서버 이전하기 전 설정 체크 명령어\n`$ python manage.py check --deploy`\n\n## 4. 컬럼의 데이터필드 타입 \n\n- from django.db import models\n\n### (1) models.SlugField(옵션,)\n\n1. 슬러그(Slug)란?\n- 페이지나 포스트를 설명하는 핵심단어의 집합\n- 웹 개발시에는 특정 콘텐츠의 고유주소로도 사용됨\n- 보통, 페이지나 포스트의 제목에서 조사, 전치사, 쉼표, 마침표등을 빼고 띄어쓰기는 하이픈(-)으로 바꾸어 만듦\n- URL에서 Slug를 고유주소로 사용함으로써 검색 엔진에서 빨리 페이지를 찾아주고 정확도를 높일 수 있음\n2. SlugField 필드타입\n- URL 에서 pk 대신 사용됨. pk (=id) 를 사용하는 것 보다 슬러그를 사용하면 이해하기 쉬움\n- Slug 필드의 기본 길이는 50\n- 해당 Slug 필드에는 기본적으로 **인텍스**가 생성됨\n\n### (2) models.CharField()\n### (3) models.TextField()\n### (4) models.DateTimeField()\n## 5. 데이터 필드의 옵션들\n\n1. blank=True : 빈칸 허용 여부\n2. auto_now_add=True : models.DateTimeField 의 옵션으로, 생성될 때 시간을 자동 기록\n3. auto_now=True : models.DateTimeField 의 옵션으로, 객체가 저장될 때 (= 객체가 변경될 때) 시간을 자동으로 기록\n4. verbose_name='TITLE' : 폼 화면에서 레이블로 사용되는 문구로, 해당 컬럼의 별칭\n5. max_length=50 : 최대 길이\n6. allow_unicode=True : 한글입력을 허용함\n7. help_text='도움말' : Admin 사이트에서 입력필드를 설명하는 문구\n\n## 6. Model 클래스의 Meta 내부 클래스\n\n1. 필드 속성외에 필요한 모델의 파라미터 정의\n2. 예제\n\n```python\nclass Post(models.Model):\n ...(생략)...\n class Meta:\n verbose_name = 'post' # 테이블의 단수 별칭\n verbose_name_plural = 'posts' # 테이블의 복수 별칭\n db_table = 'blog_posts' # 데이터베이스에 저장되는 테이블의 이름 (이렇게 지정하지 않으면, 앱명_모델클래스명 이 기본이므로 blog_post 였을 것임.)\n ordering = ('-modify_dt',) # 내림차순 정렬\n```\n- verbose_name : 테이블의 단수 별칭\n- verbose_name_plural : 테이블의 복수 별칭\n- db_table : DB에 저장될 테이블의 이름\n- ordering : 테이블 조회시 기본 정렬\n\n## 7. Model 클래스의 함수 정의\n\n1. 예제\n```python\nclass Post(models.Model) :\n ...(생략)...\n\n def __str__(self):\n return self.title\n \n def get_absolute_url(self):\n return reverse('blog:post_detail', args=(self.slug,))\n \n def get_previous(self):\n return self.get_previous_by_modify_dt()\n\n def get_next(self):\n return self.get_next_by_modify_dt()\n```\n\n- \\_\\_str\\_\\_ 함수 : 모델을 출력 할 때, \\_\\_str\\_\\_() 함수를 이용함\n- get_absolute_url() 함수 : 'blog:post_detail'의 URL 을 리턴하고, 인자로 slug 값을 리턴합, templates 에서 모델객체.get_absolute_url 로 호출\n- get_previous() 함수 : 장고의 내장함수 <font color='red'>get_previous_by_modify_dt()</font>를 리턴하여, modify_dt로 정렬 하였을 때 이전 모델객체(row)를 반환, templates 에서 모델객체.get_previous 로 호출\n- get_next() 함수 : 장고의 내장함수 <font color='red'>get_next_by_modify_dt()</font>를 리턴하여, modify_dt로 정렬 하였을 때 다음 모델 객체(row)를 반환, templates 에서 모델명.get_next 로 호출\n\n## 8. Model 클래스를 admin.py에 등록\n\n### (1) 등록 속성\n\n1. 예제\n```python\n@admin.register(Post)\nclass PostAdmin(admin.admin.ModelAdmin):\n list_display = ('id','title','modify_dt')\n list_fiter = ('modify_dt')\n search_fields = ('title', 'content')\n prepopulated_fields = {'slug':('title',)}\n```\n\n2. list_display : Admin 사이트에 보여지는 컬럼의 순서\n3. list_filter : 특정 필터링 결과만 보여짐\n4. search_fields : 지정된 컬럼으로 검색할 수 있는 검색필드 보여짐\n5. prepopulated_fields : 자동 입력으로, 위의 예제에서는 slug를 title을 사용해 미리 채워지도록 함\n\n\n### <font color=\"blue\">*참고* 마이그레이션 명령 </font>\n<div style='background-color: #D9EEF1;border-radius: 5px;padding: 10px;'>\n1. (venv) $ python3 manage.py showmigrations : 모든 마이그레이션 보여주고, 각 마이그레이션 별 적용여부 확인<br>\n2. (venv) $ python3 manage.py sqlmigrate bookmark 0001 : bookmark 앱의 0001번 마이그레이션을 적용 할 때 사용될 sql 문 보여줌\n</div>\n\n\n## PathParameter\n\n### 1. Slug\n\n1. 예시\n```python\nre_path(r'^post/(?P<slug>[-\\w]+)/$', views.PostDV.as_view(), name='post_detail')\n```\n- slug의 pathparameter 지정을 <slug:slug> 로 할 경우, 한글을 인식하지 못함.\n- <slug> 컨버터는 '[-a-zA-Z0-9_]+'만 허용하기 때문.\n- 그러므로, 정규 표현식을 사용하여 한글도 입력 할 수 있도록 해 주어야 함\n\n\n# 1. 날짜관련 필드의 포맷(ex. modify_dt, create_dt )\n1. 참고: <https://docs.djangoproject.com/en/2.2/ref/templates/builtins/#date>\n2. \\{\\{ post.modify_dt\\|date:\"N d, Y\" \\}\\} : July 05, 2019 형식으로 표현됨\n3. \\{\\{ object.modify_dt\\|date:\"j F Y\" \\}\\} : 12 July 2015 형식\n4. {% raw %}{% now \"N d, Y\" %}{% endraw %} : 오늘 날짜의 July 18, 2015 형식\n5. {% raw %}{{ post.modify_dt\\|date:'Y-m-d' }}{% endraw %} : 날짜를 2019-06-12 형식으로 표현\n6. {% raw %}{{ post.modify_dt\\|date:'F' }}{% endraw %} : 월을 july 형식으로 표현\n7. {% raw %}{{ post.modify_dt\\|date:'N, Y' }}{% endraw %} : 날짜를 May, 2015 형식으로 표현\n\n## 2. 컨텍스트 오브젝트\n1. **<font color=\"blue\">object_list</font>** : ListView등의 클래스뷰에서 전달하는 객체 리스트\n2. **<font color=\"blue\">object</font>** : DetailView 등의 클래스뷰에서 전달하는 객체 리스트\n3. **<font color=\"blue\">page_obj</font>** : ListView등의 클래스뷰에서 전달하는 객체 리스트. Page 객체가 들어 있는 컨텍스트 변수.\n- **<font color=\"blue\">page_obj.has_previous</font>** : 현재 페이지 기준으로 이전 페이지가 있는지 여부\n- **<font color=\"blue\">page_obj.has_next</font>** : 현재 페이지 기준으로 다음 페이지가 있는지 여부\n- **<font color=\"blue\">page_obj.previous_page_number</font>** : 이전 페이지의 번호\n- **<font color=\"blue\">page_obj.next_page_number</font>** : 다음 페이지의 번호\n- **<font color=\"blue\">page_obj.number</font>** : 현재 페이지의 번호\n- **<font color=\"blue\">page_obj.paginator.num_pages</font>** : 총 페이지 갯수\n4. 예시\n\n```\n{% raw %}\n<h1>Blog List</h1>\n<br>\n\n{% for post in object_list %}\n <h3><a href=\"{{ post.get_absolute_url }}\">{{ post.title }}</a></h3>\n {{ post.modify_dt|date:\"N d, Y\"}}\n <p>{{ post.description }}</p>\n{% endfor %}\n\n<br>\n\n<div>\n <span>\n {% if page_obj.has_previous %}\n <a href=\"?page={{ page_obj.previous_page_number }}\">PreviousPage</a>\n {% endif %}\n\n Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}\n\n {% if page_obj.has_next %}\n <a href=\"?page={{ page_obj.next_page_number }}\">NextPage</a>\n {% endif %}\n </span>\n</div>\n{% endraw %}\n```\n5. **<font color=\"blue\">date_list</font>** : 날짜관련 클래스뷰 ( XXXarchiveView 또는 ArchiveIndexView ) 에서 넘겨주는 컨텍스트 변수, DateQuerySet 객체 리스트를 담고 있음. 날짜정보만 추출한 리스트. 객체는 datetime.date 타입의 객체.\n6. **<font color=\"blue\">latest</font>** : ArchiveIndexView에서만 정의된 변수\n\n## 3. 템플릿 필터\n1. \\{\\{ object.content\\|<font color=\"blue\">linebreaks</font> \\}\\} : \\\\n(newline)을 인식하게 함 \n2. \\{\\{ date\\|<font color=\"blue\">date:'Y'</font> \\}\\} : date객체로부터 YYYY 형식의 연도만 추출함, 2020 형식\n\n## 4. Tag, 템플릿문법 등\n1. 검색엔진에 노출돼야 하는 페이지라면 &lt;title&gt; 태그에 의미있는 문구를 넣을 것\n","dir":"/python/tip/","name":"tip.md","path":"python/tip/tip.md","url":"/python/tip/tip.html"},{"sort":1,"permalink":"/python/webStandardLibrary/","layout":"default","title":"웹 표준 라이브러리","content":"<h1 id=\"웹-표준-라이브러리\">웹 표준 라이브러리</h1>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/webStandardLibrary/README.md</code></p>\n","dir":"/python/webStandardLibrary/","name":"README.md","path":"python/webStandardLibrary/README.md","url":"/python/webStandardLibrary/"},{"sort":1,"layout":"default","title":"웹 클라이언트 라이브러리","content":"# 웹 클라이언트 라이브러리\n> __KEY WORD__ \n> `#urllib.parse #urlparse() #urllib.request #urlopen() #POST요청 #Request() #build_open() #HTTPBasicAuthHandler #HTTPCookieProcessor\n> #install_open() #ProxyHandler #ProxyBasicAuthHandler #HTMLParser #feed()`\n\n## 1. urllib.parse 모듈\n> URL 분해, 조립, 변경, URL 문자 인코딩, 디코딩 등을 처리. \n> urlparse(), urljoin(), parse_qs(), quote(), encode() 함수등이 있음. \n> <https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse> \n\n### urlparse()\n- 예제\n```\n>>> from urllib.parse import urlparse\n>>> result = urlparse(\"http://www.python.org:80/guido/python.html;philosophy?overall=3#n10\")\n>> result\nParseResult(scheme='http', netloc='www.python.org:80', path='/guido/python.html', params='philosophy', query='overall=3', fragment='n10')\n```\n\n## 2. urllib.request 모듈\n> 주어진 URL에서 데이터를 가져오는 기능\n\n### urlopen()\n- 문법\n```\nurlopen(url, data=None, [timeout])\n```\n + url 인자 : 문자나 Request 클래스\n + url에 file 스킴 지정 시, 파일을 열 수 있음\n + data 인자가 None 이거나 없으면 GET 요청, data 인자로 문자열이 있으면 POST 요청 \n\n### urlopen()으로 get 방식 요청하기\n```\n>>> from urllib.request import urlopen\n>>> f = urlopen('http://www.example.com')\n>>> print(f.read(500).decode('utf-8'))\n```\n\n### urlopen()으로 post 방식 요청하기\n + data 인자는 `바이트 스트링` 이어야 함\n- 예제\n``` \n>>> from urllib.request import urlopen\n>>> data = \"language=python&framework=django\"\n>>> f = urlopen(\"http://127.0.0.1:8000\", bytes(data, encoding='utf-8'))\n>> print(f.read(500).decode('utf-8'))\n```\n\n### urlopen()과 Request 클래스 이용하여 요청 헤드 지정하기\n```\n>>> from urllib.request import urlopen, Request\n>>> from urllib.parse import urlencode\n>>>\n>>> url = 'http://127.0.0.1:8000'\n>>> data = {\n 'name':'김윤미',\n 'email':'kimyn@naver.com',\n 'url':'http://www.naver.com'\n}\n>>> encDate = urlencode(data)\n>>> postData = bytes(encData, encoding='utf-8')\n>>> req = Request(url, data=postData)\n>>> req.add_header('Content-Type', 'application/x-www-form-rulencoded')\n>>> f = req.urlopen(req)\n>>> print(f.info())\n>>> print(f.read(500).decode('utf-8'))\n```\n\n### build_opener()와 HTTPBasicAuthHandler 클래스를 이용하여 인증요청 보내기\n```\n>>> from urllib.request import HTTPBasicAuthHandler, build_opener\n>>> auth_handler = HTTPBasicAuthHandler()\n>>> auth_handler.add_password(realm='kym', user='ymkim', passwd='ymkimadmin', uri='http:// 127.0.0.1:8000/auth')\n>>> opener = build_opener(auth_handler)\n>>> resp = opener.open('http://127.0.0.1:8000/ahtu/')\n>>> print(resp.read().decode('utf-8'))\n```\n + 핸들러 생성 => 생성한 핸들러를 오프너에 전달하여 오프너 생성 => 오프너로 요청\n\n### build_open()와 HTTPCookieProcessor 클래스로 쿠키데이터 포함한 요청 하기\n```\nfrom urllib.request import Request, HTTPCookieProcessor, build_opener\nurl = 'http://127.0.0.1:8000/cookie'\n# get 방식으로 쿠키핸들러 요청하기\n# 쿠키 핸들러 생성, 쿠키 데이터 저장\ncookie_handler = HTTPCookieProcessor()\nopener = build_open(cookie_handler)\n\nreq = Request(url)\nres = opener.open(req)\nprint(res.info())\nprint(res.read().decode('utf-8'))\n\n# 이전의 요청에서 받은 쿠키를 헤더에 담아서 Post 요청\ndata = 'language=python&framework=django'\nencData = bytes(data, encoding='utf-8')\nreq = Request(url, encData)\nres = opener.open(req)\nprint(res.info())\nprint(res.read().decode('utf-8'))\n```\n\n### install_opener() 와 ProxyHandler 및 ProxyBasicAuthHandler 클래스로 프록시 처리\n```python\nimport urllib.request\n\nurl = 'http://www.example.com'\nproxyServer = 'http://www.proxy.com:3128'\n\n# proxy 서버를 설정함\nproxy_handler = urllib.request.ProxyHandler({'http':proxyServer})\n# 프록시 서버 설정 무시하고 웹서버로 요청 시,\n# proxy_handler = urllib.request.ProxyHandler({})\n\n# 프록시 서버에 대한 인증 처리\nproxy_auth_handler = urllib.request.ProxyBasicAuthHandler()\nproxy_auth_handler.add_password('realm', 'host', 'username', 'password')\n\n# 2개의 핸들러를 오프너에 등록\nopener = urllib.request.build_opener(proxy_handler, proxy_auth_handler)\n# 디폴트 오프너로 등록\nurllib.request.install_opener(opener)\n\n# opener.open() 대신 urlopen()을 사용\nf = urllib.request.urlopen(url)\nprint(\"geturl():\", f.geturl())\nprint(f.read(300).decode('utf-8'))\n```\n\n### urllib.request와 HTMLParser를 이용해서 이미지만 검색하여 리스트를 보여주기\n```python\nfrom html.parser import HTMLParser\nfrom urllib.request import urlopen\n\n# HTMLParser 를 사용할 때는, 이렇게 HTMLParser를 상속받고, 필요한 메소드를 overrwide 합니다.\nclass ImageParser(HTMLParser):\n # 'img' 태그를 찾기 위해서 handler_starttag 를 오버라이드 합니다.\n def handle_starttag(self, tag, attrs):\n if tag != 'img':\n return\n if not hasattr(self, 'result'):\n self.result = []\n\n for name, value in attrs:\n if name == 'src':\n # img src 태그를 찾으면 self.result 목록에 추가합니다.\n self.result.append(value)\n\n\ndef parse_image(data):\n parser = ImageParser()\n # HTML문장을 feed() 함수에 넣어주면, 바로 파싱하고 그 결과를 parser.result에 추가\n parser.feed(data)\n # set 에 parser.result를 넣어주어 중복된 값을 삭제합니다.\n dataSet = set( x for x in parser.result)\n return dataSet\n\ndef main():\n url = \"http://www.google.co.kr\"\n # urlopen 함수를 이용하여 구글의 첫페이지를 가져옵니다.\n with urlopen(url) as f:\n chatset = f.info().get_param('charset')\n data = f.read().decode(chatset)\n\n dataSet = parse_image(data)\n print('\\n>>>> Fetch Images from', url)\n print('\\n'.join(sorted(dataSet)))\n\n```\n\n## 3. http.client 모듈\n> GET, POST 이외의 방식으로 요청하는등 저수준의 더 세밀한 기능이 필요할 때 사용 \n> putheader(), endheaders(), send() 등의 함수가 있다. \n> 참조: <https://docs.python.org/3/library/http.client.html> \n\n### http.client 모듈의 코딩 순서\n\n|순번 |코딩순서 |코딩예시|\n|-----|---------|--------|\n|1 |연결 객체 생성 | conn = http.client.HTTPConnection('www.naver.com') |\n|2 |요청 보냄|conn.request('GET','/index.html') |\n|3 |응답 객체 생성|res = conn.getresponse() |\n|4 |응답 데이터 읽음 |data = res.read() |\n|5 |연결 닫음 |conn.close() |\n\n### GET 방식 요청하기\n\n```python\nfrom http.client import HTTPConnection\n\nhost = 'www.naver.com'\n# HTTPConnection()의 인수로 url('http://www....')이 아닌 host('www....')를 이용한다.\nconn = HTTPConnection(host)\n# conn.request(메소드, url, [body], [header])\nconn.request('GET','/')\nres1 = conn.getresponse()\nprint(res1.status, res1.reason)\n# 데이터를 모두 읽어들여야 다음 요청이 가능하다. 그렇지 않으면 error가 발생한다.\ndata1 = res1.read()\n\n# 두번째 요청\nconn.request('GET','/')\nres2 = conn.getresponse()\nprint(r2.status, r2.reason)\ndata2 = res2.read()\nprint(data2.decode())\nconn.close()\n```\n\n### HEAD 메소드로 요청하기\n\n```python\nfrom http.client import HTTPConnection\nconn = HTTPConnection('www.naver.com')\nconn.request('HEAD','/')\nresp = conn.getresponse()\ndata = resp.read()\n# head를 요청하였으므로, data( =body) 에는 아무것도 없어서 \n# 0 이 출력될 것이다.\nprint(len(data))\n```\n\n### POST 방식으로 요청하기\n```python\nfrom http.client import HTTPConnection\nfrom urllib.parse import urlencode\n\nhost = '127.0.0.1:8000'\n# 인코딩 해야 함\nparams = urlencode({\n 'language':'python',\n 'name':'김윤미',\n 'email':'kym@naver.com'\n})\nheaders = {\n 'Content-Type':'application/x-www-form-urlencoded',\n 'Accept':'text/plain'\n}\nconn = HTTPConnection(host)\nconn.request('POST','', params, headers)\nresp = conn.getresponse()\nprint(resp.status, resp.reason)\n\ndata = resp.read()\nprint(data.encode('utf-8'))\n\nconn.close()\n```\n\n### PUT 메소드로 요청하기\n\n```python\nfrom http.client import HTTPConnection\nfrom urllib.parse import urlencode\n\nhost = '127.0.0.1:8000'\n# 인코딩 해야 함\nparams = urlencode({\n 'language':'python',\n 'name':'김윤미',\n 'email':'kym@naver.com'\n})\nheaders = {\n 'Content-Type':'application/x-www-form-urlencoded',\n 'Accept':'text/plain'\n}\nconn = HTTPConnection(host)\nconn.request('PUT','', params, headers)\nresp = conn.getresponse()\nprint(resp.status, resp.reason)\n\ndata = resp.read(300)\nprint(data.encode('utf-8'))\n\nconn.close()\n```\n\n### 웹사이트에서 이미지만을 검색하여 그 이미지들을 다운로드 하는 방법\n```python\nimport os\nfrom http.client import HTTPConnection\nfrom urllib.parse import urljoin, urlunparse\nfrom urllib.request import urlretrieve\nfrom html.parser import HTMLParser\n\n# HTMLParser를 사용할 때는, HTMLParser를 상속하고, 필요한 메소드를 오버라이드하여 사용함.\nclass ImageParser(HTMLParser):\n # 이미지 태그를 찾기 위해 handle_starttag를 오버라이드 함\n def handle_starttag(self, tag, attrs):\n if tag != 'img':\n return\n if not hasattr(self, 'result'):\n self.result = []\n for name, value in attrs:\n if name == 'src':\n self.result.append(value)\n\n# HTML 문장을 feed()에 주면, 바로 파싱하고 parser.result 리스트에 추가함.\ndef download_image(url, data):\n if not os.path.exists('DOWNLOAD'):\n os.makedirs('DOWNLOAD')\n\n parser = ImageParser()\n parser.feed(data)\n dataSet = set(x for x in parser.result)\n\n for x in sorted(dataSet):\n # 다운로드 하기위해 baseUrl과 파일명을 합쳐서 완전한 다운로드 주소를 만듦\n imageUrl = urljoin(url, x)\n basename = os.path.basename(imageUrl)\n print('basename:',basename)\n targetFile = os.path.join('DOWNLOAD', basename)\n\n print('Downloading...', imageUrl)\n # src로부터 파일을 가져와서 targetFile로 생성해 줌.\n urlretrieve(imageUrl, targetFile)\n\ndef main():\n host = 'www.google.co.kr'\n\n conn = HTTPConnection(host)\n conn.request('GET','')\n resp = conn.getresponse()\n # 인코딩 방식을 알아내는 방법\n charset = resp.msg.get_param('charset')\n data = resp.read().decode(charset)\n conn.close()\n\n print('\\n>>>>>> Download Images from ', host)\n url = urlunparse(('http',host,'','','',''))\n download_image(url,data)\n\nif __name__ == '__main__':\n main()\n```\n","dir":"/python/webStandardLibrary/","name":"webClientLIbrary.md","path":"python/webStandardLibrary/webClientLIbrary.md","url":"/python/webStandardLibrary/webClientLIbrary.html"},{"sort":1,"layout":"default","title":"마이바티스 동적 SQL","content":"<h1 id=\"마이바티스-동적-sql\">마이바티스 동적 SQL</h1>\n\n<h2 id=\"1-ltifgt\"><font color=\"blue\">1. &lt;if&gt;</font></h2>\n\n<ul>\n <li>if 안에 들어간 표현식은 <code class=\"language-plaintext highlighter-rouge\">OGNL</code> 표현식이라 함. 참고:<a href=\"https://commons.apache.org/proper/commons-ognl/language-guide.html\">https://commons.apache.org/proper/commons-ognl/language-guide.html</a></li>\n <li><code class=\"language-plaintext highlighter-rouge\">test</code> 속성의 특정 조건이 true가 되었을 때 포함된 SQL을 실행</li>\n <li>예시</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'T'.toString()\"</span><span class=\"nt\">&gt;</span>\n(title like concat('%',#{type},'%'))\n<span class=\"nt\">&lt;/if&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-ltchoosegt\"><font color=\"blue\">2. &lt;choose&gt;</font></h2>\n\n<ul>\n <li>여러 상황들 중 하나의 상황에서 동작</li>\n <li>java의 ‘if ~ else’ 와 유사함</li>\n <li>예시</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;choose&gt;</span>\n<span class=\"nt\">&lt;when</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'T'.toString()\"</span><span class=\"nt\">&gt;</span>\n    (title like concat('%',#{type},'%'))\n<span class=\"nt\">&lt;/when&gt;</span>\n<span class=\"nt\">&lt;when</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'C'.toString()\"</span><span class=\"nt\">&gt;</span>\n    (content like concat('%',#{type},'%'))\n<span class=\"nt\">&lt;/when&gt;</span>\n<span class=\"nt\">&lt;otherwise&gt;</span>\n    (title like concat('%',#{type},'%') or content like concat('%',#{type},'%') or writer like concat('%',#{type},'%'))\n<span class=\"nt\">&lt;/otherwise&gt;</span>\n<span class=\"nt\">&lt;/choose&gt;</span>\n</code></pre>  </div></div>\n<h2 id=\"3-lttrimgtltwheregtltsetgt\"><font color=\"blue\">3. &lt;trim&gt;,&lt;where&gt;,&lt;set&gt;</font></h2>\n\n<ul>\n <li>trim, where, set은 단독 사용하지 않음. if,choose등과 같은 태그들을 내포하여 SQL 연결해 주고, AND, OR, WHERE 등 앞.뒤에 필요한 구문들을 추가 및 생략하는 역할</li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">where 태그</font></strong></p>\n\n<ul>\n <li>태그 안쪽에서 SQL이 생성될 때 Where 구문이 붙고 그렇지 않으면 생성되지 않음</li>\n <li>예시</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>select * from tbl_board\n<span class=\"nt\">&lt;where&gt;</span>\n    <span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">\"bno != null\"</span><span class=\"nt\">&gt;</span>\n    bno = #{bno}\n<span class=\"nt\">&lt;/where&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>결과 1 bno가 없는 경우 : select * from tbl_board where bno = 123</li>\n <li>결과 2 bno가 있는 경우 : select * from tbl_board</li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">trim 태그</font></strong></p>\n\n<ul>\n <li>trim 안쪽에 만들어지는 SQL문을 조사하여, 앞쪽에 추가적인 SQL을 넣는 역할</li>\n <li>예시</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>select * from tbl_board\n<span class=\"nt\">&lt;where&gt;</span>\n    <span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">'bno != null'</span><span class=\"nt\">&gt;</span>\n        bno = #{bno}\n    <span class=\"nt\">&lt;/if&gt;</span>\n    <span class=\"nt\">&lt;trim</span> <span class=\"na\">prefixOverrides=</span><span class=\"s\">'and'</span><span class=\"nt\">&gt;</span>\n    rownum = 1\n    <span class=\"nt\">&lt;/trim&gt;</span>\n<span class=\"nt\">&lt;/where&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>결과 1 bno 값 존재 시 : select * from tbl_board Where bno = 33 and rownum = 1</li>\n <li>\n <p>결과 2 bno 값 null : select * from tbl_board wehre rownum = 1</p>\n </li>\n <li>prefix : trim 내부 구문의 제일 앞에 추가할 문자열</li>\n <li>suffix : trim 내부 구문의 제일 마지막에 추가할 문자열</li>\n <li>prefixOverrides : trim 내부 구문의 제일 앞에서, prefixOverrides 에 명시된 문자열 제거</li>\n <li>suffixOverrides : trim 내부 구문의 제일 뒤에서, suffixOverrides 에 명시된 문자열 제거</li>\n <li>with : overrides에 명시된 것을 지우고 with 속성에 명시된 것을 추가</li>\n</ul>\n\n<h2 id=\"4-ltforeachgt\"><font color=\"blue\">4. &lt;foreach&gt;</font></h2>\n\n<ul>\n <li>List, 배열, 맵 등을 이용해서 루프 처리. 주로 IN 조건에서 많이 사용.</li>\n <li>배열이나 list 이용 시, item 속성만 사용</li>\n <li>map 형태로 key 와 value 이용 시, index와 item 속성 사용</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">map</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HashMap</span><span class=\"o\">();</span>\n<span class=\"n\">map</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"T\"</span><span class=\"o\">,</span><span class=\"s\">\"TTT\"</span><span class=\"o\">);</span>\n<span class=\"n\">map</span><span class=\"o\">.</span><span class=\"na\">put</span><span class=\"o\">(</span><span class=\"s\">\"C\"</span><span class=\"o\">,</span><span class=\"s\">\"CCC\"</span><span class=\"o\">);</span>\n</code></pre>  </div></div>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>select * from tbl_board\n<span class=\"nt\">&lt;trim</span> <span class=\"na\">prefix=</span><span class=\"s\">\"where (\"</span> <span class=\"na\">suffix=</span><span class=\"s\">\")\"</span> <span class=\"na\">prefixOverrides=</span><span class=\"s\">\"OR\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;foreach</span> <span class=\"na\">item=</span><span class=\"s\">\"val\"</span> <span class=\"na\">index=</span><span class=\"s\">\"key\"</span> <span class=\"na\">collection=</span><span class=\"s\">\"map\"</span><span class=\"nt\">&gt;</span>\n\n        <span class=\"nt\">&lt;trim</span> <span class=\"na\">prefix =</span> <span class=\"s\">\"OR\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">\"key=='C'.toString()\"</span><span class=\"nt\">&gt;</span>\n            content = #{val}\n            <span class=\"nt\">&lt;/if&gt;</span>\n            <span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">\"key=='T'.toString()\"</span><span class=\"nt\">&gt;</span>\n            title = #{val}\n            <span class=\"nt\">&lt;/if&gt;</span>\n            <span class=\"nt\">&lt;if</span> <span class=\"na\">test=</span><span class=\"s\">\"key=='W'.toString()\"</span><span class=\"nt\">&gt;</span>\n            writer = #{val}\n            <span class=\"nt\">&lt;/if&gt;</span>\n        <span class=\"nt\">&lt;/trim&gt;</span>\n    <span class=\"nt\">&lt;/foreach&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"5-ltsqlgtltincludegt\"><font color=\"blue\">5. &lt;sql&gt;&lt;include&gt;</font></h2>\n\n<ul>\n <li>재사용 가능한 구문을 &lt;sql id=”test”&gt;…&lt;/sql&gt; 에 선언하고 &lt;include refid=’test’&gt;&lt;/include&gt; 를 사용하여 재사용 한다.</li>\n</ul>\n","dir":"/spring5/10_mybatis/","name":"1_myBatis.md","path":"spring5/10_mybatis/1_myBatis.md","url":"/spring5/10_mybatis/1_myBatis.html"},{"sort":1,"permalink":"/spring5/1_env/","layout":"default","title":"개발환경 구축","content":"<h1 id=\"개발환경-구축\">개발환경 구축</h1>\n\n<ol>\n <li>개발 준비</li>\n <li>스프링 특징과 의존성 주입</li>\n <li>스프링과 오라클 연동</li>\n <li>myBatis와 스프링 연동</li>\n</ol>\n","dir":"/spring5/1_env/","name":"README.md","path":"spring5/1_env/README.md","url":"/spring5/1_env/"},{"sort":1,"layout":"default","title":"스프링 개발환경 구축","content":"# 스프링 개발환경 구축\n\n## <font color='blue'>1. 개발 준비</font>\n- JDK 1.8 설치 (현재 2021년, 탐캣 9.x 버전이 jdk 1.8 기반임.)\n- `openJdk 11 이상 설치 해 보았으나, Servlet과의 호환성 문제 발생 및 정상빌드 되지 않음. jdk 1.8로 개발할 것.`\n- STS(Eclipse) 설치\n- 탐캣 설치 & 연동\n- 오라클 설치 & SQL Developer 설치\n- MyBatis & mybatis-spring 설치\n- 스프링 MVC 개발 설정\n\n## <font color='blue'>2. 개발 환경 설정</font>\n\n**(1) JDK 설치**\n\n- *스프링은 버전에 따라 JDK 제한이 있으므로 버전에 주의 할 것!*\n\n |스프링 |JDK |\n |:------|:---|\n |5.x |1.8 이상|\n |4.x |1.6 이상|\n |3.x |1.5 이상|\n\n- *JDK 설치*\n\n```bash\njava version \"1.8.0_281\"\nJava(TM) SE Runtime Environment (build 1.8.0_281-b09)\nJava HotSpot(TM) 64-Bit Server VM (build 25.281-b09, mixed mode)\n```\n\n- *환경변수에 JAVA_HOME 추가 & PATH에 JAVA_HOME/bin 추가*\n\n```bash\n$vim .zshrc\nJAVA_HOME=/Library/java/JavaVirtualMachines/jdk-1.8.0_281.jdk/Contents/Home\nexport JAVA_HOME\nexport PATH=$HOME/bin:${JAVA_HOME}/bin:$PATH\n# esc + :wq 로 저장\n# .zshrc 반영\n$source .zshrc\n```\n\n**(2) 개발툴 (IDE) 설치 및 셋팅**\n\n- [ ] STS (Eclipse 기반의 스프링 개발 툴, Spring Tool Suit) 설치하는 방법\n- [x] Eclipse 설치 후 Spring 플러그인 설치하는 방법 : 경험자\n- 다운로드 : <https://www.eclipse.org/downloads/> 의 `Eclipse IDE for Enterprise Java Developers` 설치 (2020-06 버전 사용하였음. jdk 1.8 지원.)\n- Eclipse 실행환경 편집 ( /Applications/development/Eclipse.app/Contents/Eclipse/eclipse.ini) : jre의 환경설정을 jdk 로 변경(lombok등의 라이브러리 사용이 지장 받을 수 있음.)\n\n```ini\n-vm\n## ../Eclipse/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.macosx.x86_64_15.0.1.v20201027-0507/jre/lib/libjli.dylib\n/Library/java/JavaVirtualMachines/jdk-1.8.0_281.jdk/Contents/MacOS/libjli.dylib\n```\n\n- Eclipse 의 workspace의 기본문자열 인코딩을 `utf-8`로 모두 변경 (아마 기본적으로 utf-8로 셋팅되어 있을 것이다.)\n\n```\nEclipse > Preferences > General > Workspace 에서 변경, Web의 HTML, JSP, CSS 도 변경\n```\n\n- Eclipse 실행 후, `Preference`의 `Installed JRE`를 `jdk-1.8.0_281.jdk`로 변경한다.\n\n**(3) Eclipse 에 STS3 플러그인 설치 (STS4는, 스프링부트를 위한 툴)**\n\n- 플러그인 주소 확인\n-> https://github.com/spring-projects/toolsuite-distribution/wiki/Spring-Tool-Suite-3 \n-> p2 repo for Eclipse 4.18: https://download.springsource.com/release/TOOLS/update/3.9.15.RELEASE/e4.18/\n\n![STS3 주소](/assets/images/sts3_address.png)\n\n- 플러그인 설치\n-> eclipse > Help > Install New Software... > Work with 필드의 'add' \n-> Name : STS3\n-> Location : https://download.springsource.com/release/TOOLS/update/3.9.15.RELEASE/e4.18/\n-> 플러그인 전체 체크 후 설치\n\n![STS3 플러그인 설치](/assets/images/sts3_plugin_install.png)\n\n- eclipse 재시작\n- 'Perspective' 항목에 'Spring' 항목 추가된 것을 확인\n\n![spring 설치 확인](/assets/images/spring_perspective.png)\n\n**(4) 탐캣 서버 설정**\n\n- 다운로드 <https://tomcat.apache.org> : tomcat9.x 버전을 zip 이나 tar.gz 형태로 다운로드 후, 원하는 경로에 압축을 해제함\n- Eclipse > Preferences > Server > runtime server > Add > 'Apache Tomcat 9' 선택 > 압축을 푼 디렉토리를 선택\n\n![탐캣 설정](/assets/images/tomcat_add.png)\n\n![탐캣 추가 완료](/assets/images/tomcat_add_complete.png)\n\n## <font color='blue'>3. 스프링 프로젝트 설정</font>\n- [x] 스프링 프로젝트를 지정하고 생성하는 방식\n- [ ] Maven/Gradle 빌드도구로 프로젝트 생성 후, 프레임워크 추가하는 방법\n- [ ] 직접 프레임워크 라이브러리 추가하는 방법\n\n**(1) 'ex00'프로젝트 생성**\n- `Perspective`를 `Spring`으로 지정\n- file > New > `spring Legacy Project` > `Spring MVC Project` 선택 \n\n![스프링 MVC 프로젝트 생성](/assets/images/spring_mvc_project.png)\n\n- 패키지명 (hostname 거꾸로 한 형태) : `org.test.controller`\n\n![기초 패키지 생성](/assets/images/package_name.png)\n\n- 프로젝트 생성 완료\n\n|프로젝트 트리|설명|\n|:------------|----|\n|![프로젝트 트리](/assets/images/project_view.png)|src/main/java -> 코드<br>src/main/resources -> 설정파일<br> spring/appServlet/servlet-context.xml -> 웹관련 스프링 설정<br>web.xml -> 탐캣 설정파일<br>pom.xml -> 메이븐 설정파일|\n\n**(2) 스프링 버전 변경하기**\n- 'Spring Lagacy Project' 는 JDK 1.6, Spring 3 버전으로 초기 설정되므로 설정을 변경해야 함\n- `pom.xml` 파일에서 spring 버전을 5.x 로 변경 (maven spring 버전을 확인)\n\n```xml\n# pom.xml\n<properties>\n <java-version>1.8</java-version>\n <org.springframework-version>5.2.12.RELEASE</org.springframework-version>\n <org.aspectj-version>1.6.10</org.aspectj-version>\n <org.slf4j-version>1.6.6</org.slf4j-version>\n</properties>\n```\n\n- 버전이 성공적으로 변경되면, maven 라이브러리의 spring 버전이 모두 5.2.12 로 변경된다.\n\n![스프링 버전 변경](/assets/images/spring_version_change.png)\n\n**(3) java 버전 변경하기**\n- JDK 1.6을 1.8 버전으로 변경한다.\n(내 PC에 jdk 1.8 버전을 설치 하였기 때문.)\n\n```xml\n<plugin>\n <groupId>org.apache.maven.plugins</groupId>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>2.5.1</version>\n <configuration>\n <source>1.8</source>\n <target>1.8</target>\n <compilerArgument>-Xlint:all</compilerArgument>\n <showWarnings>true</showWarnings>\n <showDeprecation>true</showDeprecation>\n </configuration>\n</plugin>\n```\n\n- 프로젝트 우클릭 > Maven > Update Project\n- Package Explorer의 JRE SystemLibrary 내 라이브러리 버전이 모두 1.8 로 변경되었음을 확인한다.\n\n**(4) 프로젝트 환경 구성 JDK 1.8 로 변경**\n- 프로젝트 우클릭 > `Project facets` > java 버전을 1.8로 변경\n- 프로젝트 우클릭 > `java compile` > java 1.8 로 선택되어 있어야 한다.\n- JRE SystemLibrary에 `JRE System Library[jdk-1.8.0_281.jdk]` 라고 보여져야 한다.\n\n**(5) Servlet 버전 변경**\n- Spring Lagacy Project 로 생성한 프로젝트는 서블릿이 2.5로 되어 있으니, 이것을 3.0 이상으로 변경한다.\n- `서블릿 3.0 이상은 jdk 1.7 이상에서만 설정 할 수 있다. 그런데 11,15 등과 같은 버전은 에러가 발생하여 현재로써는 jdk 1.8로 설정하는 것이 최선이다.`\n- pom.xml \n\n```xml\n<!-- Servlet -->\n<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->\n<dependency>\n\t<groupId>javax.servlet</groupId>\n\t<artifactId>javax.servlet-api</artifactId>\n\t<version>3.1.0</version>\n\t<scope>provided</scope>\n</dependency>\n\n<!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api -->\n<dependency>\n\t<groupId>javax.servlet.jsp</groupId>\n\t<artifactId>javax.servlet.jsp-api</artifactId>\n\t<version>2.3.3</version>\n\t<scope>provided</scope>\n</dependency>\n```\n\n\n**(6) 탐캣 설정**\n\n- Window > Show View > Server 선택 : 하단에 Server 뷰가 보인다.\n- Server 뷰에서 '서버추가하기' 를 클릭하여 tomcat 서버를 추가한다. (서버추가하라는 영문이지...진짜 '서버추가하기'는 아님.)\n- 실제로는 tomcat 9.x 를 추가하였다. (jdk1.8을 지원하는 탐캣. 그림과는 다름.)\n\n![탐캣 서버 추가](/assets/images/add_tomcat.png)\n\n- 추가한 탐캣에 작성중인 프로젝트를 추가한다.\n\n![서버에 프로젝트 추가](/assets/images/add_project_to_tomcat.png)\n\n- 서버를 실행한다 (Run > Run as > Run on server)\n- 웹브라우저에서 정상실행되는지 확인한다.\n\n![웹페이지 확인](/assets/images/initial_setting_complete.png)\n\n\n## <font color='blue'>4. Lombok 라이브러리 설치</font>\n- Lombok : getter, setter, toString(), 생성자 자동생성등\n- Lombok은, 프로젝트 뿐만 아니라 Eclipse 에디터 내에서도 사용하므로 별도로 설치 해야 함\n- 다운로드 : <https://projectlombok.org/download> 에서 jar 파일 형태로 받을 수 있음.\n- lombok 설치\n\n```bash\n$ java -jar lombok.jar\n```\n\n- `specify location...` > Eclipe 설치 위치를 지정\n- MacOS의 경우, Eclipse 는 `Applications/Eclipse.app` 의 위치에 있어야만 정상적으로 IDE를 인식한다. (Applications/다른폴더/Eclipse.app 일 때는, 인식하지 못함)\n- `install/Update` 하여 lombok 설치\n- 결과적으로, `/Applications/Eclipse.app/Contents/Eclipse/lombok.jar` 의 위치로 lombok.jar가 복사되었다.\n- 또는, Eclipse > Help > Install New SoftWare 에서 lombok의 저장소를 적고, 롬복을 설치해도 된다.\n\n![lombok 설치](/assets/images/install_lombok.png)\n\n## <font color='blue'>5. XML이 아닌 *Java Configuration* 을 하기위한 준비</font>\n\n- **(1) web.xml 삭제** : web.xml, servlet-context.xml, root-context.xml\n\n- **(2) 스프링 관련파일 삭제** : spring 폴더 삭제\n\n- **(3) pom.xml 수정 및 스프링 버젼 변경**\n\n- *web.xml 을 사용하지 않도록 설정을 `추가`해야 함*\n\n```xml\n<plugin>\n <groupId>org.apache.maven.plugins</groupId>\n <artifactId>maven-war-plugin</artifactId>\n <version>3.2.0</version>\n <configuration>\n <failOnMissingWebXml>false</failOnMissingWebXml>\n </configuration>\n</plugin>\n```\n\n- *pom.xml의 스프링 버전 및 java 버젼도 함께 `변경`해야 함.*\n\n```xml\n<properties>\n <java-version>1.8</java-version>\n <org.springframework-version>5.2.12.RELEASE</org.springframework-version>\n <org.aspectj-version>1.6.10</org.aspectj-version>\n <org.slf4j-version>1.6.6</org.slf4j-version>\n</properties>\n```\n\n- *pom.xml의 컴파일 관련 버전 역시 `변경`하고 `Maven > Update > Update Project` 실행*\n\n\n```xml\n<plugin>\n <groupId>org.apache.maven.plugins</groupId>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>2.5.1</version>\n <configuration>\n <source>1.8</source>\n <target>1.8</target>\n <compilerArgument>-Xlint:all</compilerArgument>\n <showWarnings>true</showWarnings>\n <showDeprecation>true</showDeprecation>\n </configuration>\n</plugin>\n```\n\n- **(4) 설정관련 JAVA 파일 개발**\n\n- *`src/main/java` 하위에 `org.example.config` 패키지 생성*\n\n- *`org.example.config` 패키지에 `RootConfig.java` 클래스 생성 - `root-context.xml` 을 대체하는 설정파일*\n\n\n```java\n//RootConfig.java\npackage org.example.config;\n\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class RootConfig {\n}\n```\n\n- *`org.example.config` 패키지 하위에 `WebConfig.java` 클래스 생성 - `web.xml` 을 대체하는 설정파일*\n\n- AbstractAnnotationConfigDispatcherServletInitializer 추상클래스를 상속\n\n\n```java\n//WebConfig.java\npackage org.example.config;\n\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class WebConfig extends\nAbstractAnnotationConfigDispatcherServletInitializer {\n\n @Override\n protected Class<?>[] getRootConfigClasses() {\n // TODO Auto-generated method stub\n return null;\n }\n\n @Override\n protected Class<?>[] getServletConfigClasses() {\n // TODO Auto-generated method stub\n return null;\n }\n\n @Override\n protected String[] getServletMappings() {\n // TODO Auto-generated method stub\n return null;\n }\n\n}\n\n```\n\n- *`RootConfig.java`*를 방금 생성한 `WebConfig.java`의 `getRootConfigClasses()`메소드에 적용한다.\n\n```java\npackage org.example.config;\n\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class WebConfig extends\nAbstractAnnotationConfigDispatcherServletInitializer {\n\n\t@Override\n\tprotected Class<?>[] getRootConfigClasses() {\n\t\t// TODO Auto-generated method stub\n\t\treturn new Class[] {RootConfig.class};\n\t}\n\n\t@Override\n\tprotected Class<?>[] getServletConfigClasses() {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}\n\n\t@Override\n\tprotected String[] getServletMappings() {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}\n\n}\n```\n\n\n## <font color='blue'>6. 스프링과 오라클 연동</font>\n\n### (1) DB 설치\n- 오라클 : MacOS 는 지원하지 않으므로 VM 에 설치해야 함.\n- mySql 설치 : HOMEBREW 패키지 설치\n\n```zsh\n> brew update\n> brew install mysql@8\n# mysql 설치 확인 : list결과 mysql 있으면 설치됨\n> brew list\n```\n\n- mySql 실행\n\n```zsh\n> mysql.server start\nStarting MySQL\nSUCCESS!\n```\n\n- mySql 설정\n\n```zsh\n> mysql_secure_installation\nmysql_secure_installation: [ERROR] unknown variable 'default-character-set=utf8'.\nSecuring the MySQL server deployment.\nEnter password for user root:\n# 비밀번호를 복잡하게 설정할 것인지, 쉬운 비밀번호를 사용할 것인지 Yes | No => No\nVALIDATE PASSWORD COMPONENT can be used to test passwords\nand improve security. It checks the strength of password\nand allows the users to set only those passwords which are\nsecure enough. Would you like to setup VALIDATE PASSWORD component?\n\nPress y|Y for Yes, any other key for No: No\n# root 유저의 비밀번호 설정\nNew password:\nRe-enter new password:\n# 사용자에 대한 설정 Yes (-u 옵션 필요) | No (-u 옵션 필요 없음) => Yes\nBy default, a MySQL installation has an anonymous user,\nallowing anyone to log into MySQL without having to have\na user account created for them. This is intended only for\ntesting, and to make the installation go a bit smoother.\nYou should remove them before moving into a production\nenvironment.\n\nRemove anonymous users? (Press y|Y for Yes, any other key for No) : Yes\n# 원격 접속 허용 여부 : 다른 IP에서 root 로 접속을 허용할지 확인 Yes | No => No\nNormally, root should only be allowed to connect from\n'localhost'. This ensures that someone cannot guess at\nthe root password from the network.\n\nDisallow root login remotely? (Press y|Y for Yes, any other key for No) : No\n# TEST 데이터베이스 설정 여부 : Y (TEST 데이터베이스 삭제) | N (TEST 데이터베이스 유지) => Y\ny default, MySQL comes with a database named 'test' that\nanyone can access. This is also intended only for testing,\nand should be removed before moving into a production\nenvironment.\n\nRemove test database and access to it? (Press y|Y for Yes, any other key for No) : yes\n\n- Dropping test database...\nSuccess.\n - Removing privileges on test database...\nSuccess.\n# 변경된 권한을 테이블에 적용할지 여부 확인 : Yes (적용) | No (미적용) => Yes\nReloading the privilege tables will ensure that all changes\nmade so far will take effect immediately.\n\nReload privilege tables now? (Press y|Y for Yes, any other key for No) : yes\n# 설정 완료\nAll done!\n```\n\n- mySql 접속 확인\n\n```zsh\n> mysql -u root -P 3306 -p\nEnter password : [패스워드 입력]\n\nmysql >\n```\n\n- mysql 설정파일 구성 확인 및 변경 : `/usr/local/Cellar/mysql/8.0.22_1/.bottle/etc/my.conf`\n\n```zsh\n> vim my.conf\n\n[mysqld]\n\ncharacter-set-server=utf8\n\ncollation-server=utf8_general_ci\n\ninit_connect=SET collation_connection=utf8_general_ci\n\ninit_connect=SET NAMES utf8\n\n[client]\n\ndefault-character-set=utf8\n\n[mysql]\n\ndefault-character-set=utf8\n```\n\n- 프로젝트에서 접속할 DB와 사용자 생성\n\n```zsh\n# 데이터베이스 생성\nmysql> CREATE DATABASE testdb;\n# 사용자 생성\nmysql> CREATE USER 'book_ex'@'localhost' IDENTIFIED BY 'password';\n# 사용자 권한 지정\nmysql> grant all privileges on testdb.* to 'book_ex'@'localhost';\n# 또는,\nmysql> GRANT INSERT,UPDATE,INDEX,ALTER ON on testdb.* TO 'book_ex'@'localhost';\nmysql>FLUSH PRIVILEGES;\n```\n\n### (2) 프로젝트의 JDBC 연결\n- 오라클의 경우는, ojdbc8.jar 등의 라이브러리를 build path 에 추가해야 한다. 그리고 war를 만들 때도 jar 파일이 포함되도록 `Web Deployment Assembly` 항목에도 jar 파일을 추가한다.\n- mySql의 경우, pom.xml 에 `mysql-connector-java`를 추가한 것으로 충분하다.\n\n### (3) JDBC 연결 테스트\n\n- `src/test/java` 폴더에 `org.example.persistence` 패키지 추가\n- `JDBCTests.java` 클래스 생성\n\n```java\npackage org.example.persistence;\n\nimport static org.junit.Assert.fail;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\nimport org.junit.Test;\n\nimport lombok.extern.log4j.Log4j;\n\n@Log4j\npublic class JDBCTest {\n\n\tstatic {\n\t\ttry {\n\t\t\tClass.forName(\"com.mysql.cj.jdbc.Driver\");\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\t@Test\n\tpublic void testConnection() {\n\t\tConnection conn = null;\n\t\ttry{\n\t\t\tconn = \n\t\t\t\tDriverManager.getConnection(\"jdbc:mysql://localhost/testDb?characterEncoding=UTF-8&serverTimezone=UTC\",\n\t\t\t\t\t\t\"book_ex\",\n\t\t\t\t\t\t\"password\");\n\t\t\tlog.info(conn);\n\t\t\tconn.close();\n\t\t} catch (SQLException e) {\n\t\t\t\n\t\t\tfail(e.getMessage());\n\t\t} \n\t}\n}\n\n```\n\n- `Junit Test` 시, 테스트 성공하면 잘 설정 된 것임.\n\n\n### (4) 커넥션풀 설정\n> 커넥션 풀 : 필요할 때마다 Connection을 맺는게 아니라, 이미 맺어둔 Connection 들을 `Connection Pool`에 등록하여 `DataSource` 라는 인터페이스를 통해 Connection 을 사용한다. \n> `spring-jdbc` 대신 요즘 유행하는 `HikariCP`를 사용한다.\n\n- pom.xml 에 HikariCP 라이브러리를 추가 (Maven에서 HikariCP 검색)\n\n```xml\n<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->\n<dependency>\n<groupId>com.zaxxer</groupId>\n<artifactId>HikariCP</artifactId>\n<version>3.4.5</version>\n</dependency>\n```\n\n- root-context.xml 또는 RootConfig.java 에 HikariCP 의 설정을 Bean으로 등록한다\n\n```xml\n<bean id='hikariconfig' class='com.zaxxer.hikari.HikariConfig'>\n <property name='driverClassName' value='com.mysql.cj.jdbc.Driver'></property>\n <property name='jdbcUrl' value='jdbc:mysql://localhost:3306/testDb'></property>\n <property name='username' value='book_ex'></property>\n <property name='password' value='password'></property>\n <property name='serverTimezone' value='UTC'></property>\n</bean>\n\n<bean id='dataSource' class='com.zaxxer.hikari.HikariDataSource' destroy-method='close'>\n <constructor-arg ref='hikariconfig' />\n</bean>\n``` \n\n- 또는....\n\n```java\n// RootConfig.java\n\npackage org.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\n@Configuration\n@ComponentScan(basePackages = {\"org.example.sample\"})\npublic class RootConfig {\n\n\t@Bean\n\tpublic DataSource dataSource() {\n\t\tHikariConfig config = new HikariConfig();\n\t\tconfig.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");\n\t\tconfig.setUsername(\"book_ex\");\n\t\tconfig.setPassword(\"password\");\n\t\tconfig.addDataSourceProperty(\"serverTimezone\", \"UTC\");\n\n\t\tHikariDataSource ds = new HikariDataSource(config);\n\t\treturn ds;\n\t}\n}\n```\n\n### (5) Connection-Pool & DataSource 테스트\n\n- `src/test/java` 폴더의 `org.example.persistence` 패키지 `DataSourceTest.java` 파일 \n\n```java\npackage org.example.persistence;\n\nimport static org.junit.Assert.fail;\n\nimport java.sql.Connection;\n\nimport javax.sql.DataSource;\n\nimport org.example.config.RootConfig;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport lombok.Setter;\nimport lombok.extern.log4j.Log4j;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(classes= {RootConfig.class})\n@Log4j\npublic class DataSourceTest {\n\n\t@Setter(onMethod = @__({@Autowired}))\n\tprivate DataSource ds; \n\t\n\t@Test\n\tpublic void testConnection() {\n\t\tConnection conn = null;\n\t\ttry{\n\t\t\tconn = ds.getConnection();\n\t\t\tlog.info(conn);\n\t\t} catch (Exception e) {\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}\n}\n```\n\n\n\n## <font color='blue'>7. 스프링과 myBatis 연동</font>\n\n### (1) myBatis의 장점\n> 자동으로 Connection close() \n> 리턴타입 지정하면 자동으로 객체생성 및 ResultSet 처리 \n> `mybatis-spring` 라이브러리 제공 \n\n### (2) MyBatis 관련 라이브러리 추가\n- pom.xml 에 추가\n- `spring-jdbc` : 데이터베이스 처리\n- `spring-tx` : 트랜젝션 처리\n- `mybatis` : mybatis 처리\n- `mybatis-spring` : 스프링과 mybatis 연동 처리\n\n```xml\n<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n<dependency>\n <groupId>org.mybatis</groupId>\n <artifactId>mybatis</artifactId>\n <version>3.5.4</version>\n</dependency>\n\n<!-- MyBatis-Spring -->\n<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->\n<dependency>\n <groupId>org.mybatis</groupId>\n <artifactId>mybatis-spring</artifactId>\n <version>2.0.3</version>\n</dependency>\n\n<!-- Spring-jdbc -->\n<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->\n<dependency>\n <groupId>org.springframework</groupId>\n <artifactId>spring-jdbc</artifactId>\n <version>${org.springframework-version}</version>\n</dependency>\n\n<!-- https://mvnrepository.com/artifact/org.springframework/spring-tx -->\n<dependency>\n <groupId>org.springframework</groupId>\n <artifactId>spring-tx</artifactId>\n <version>${org.springframework-version}</version>\n</dependency>\n```\n\n### (3) SqlSessionFactoryBean 등록\n- `SqlSession` : MyBatis의 가장 핵심적인 객체. SqlSettion 통해서 Connection 생성 또는 SQL 전달, 결과 리턴 받음.\n- `SqlSessionFactoryBean` : SqlSession 을 만들어내는 `SqlSessionFactory` 를 등록할 때 이용\n\n- root-context.xml 에 등록하는 경우\n\n```xml\n<!-- HikariCP configuration -->\n<bean id='dataSource' class='com.zaxxer.hikari.HikariDataSource' destroy-method='close'>\n <constructor-arg ref='hikariconfig' />\n</bean>\n<!-- SqlSessionFactory configuration -->\n<bean id='sqlSessionFactory' class='org.mybatis.spring.SqlSessionFactoryBean'>\n <property name='dataSource' ref='dataSource'></property>\n</bean>\n```\n\n- RootConfig.java에 @Bean으로 등록하는 경우\n\n```java\npackage org.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.mybatis.spring.SqlSessionFactoryBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\n@Configuration\n@ComponentScan(basePackages = {\"org.example.sample\"})\npublic class RootConfig {\n\n\t@Bean\n\tpublic DataSource dataSource() {\n\t\tHikariConfig config = new HikariConfig();\n\t\tconfig.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");\n\t\tconfig.setUsername(\"book_ex\");\n\t\tconfig.setPassword(\"password\");\n\t\tconfig.addDataSourceProperty(\"serverTimezone\", \"UTC\");\n\t\tconfig.addDataSourceProperty(\"cachePrepStmts\", \"true\");\n\t\tconfig.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");\n\t\tconfig.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");\n\n\t\tHikariDataSource dataSource = new HikariDataSource(config);\n\t\treturn dataSource;\n\t}\n\t\n\t@Bean\n\tpublic SqlSessionFactory sqlSessionFactory() throws Exception {\n\t\tSqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();\n\t\tsqlSessionFactory.setDataSource(dataSource());\n\t\treturn (SqlSessionFactory) sqlSessionFactory.getObject();\n\t}\n}\n```\n\n### (4) SqlSessionFactory & Connection 테스트\n\n- `src/test/java` 폴더의 `org.example.persistence` 패키지 `DataSourceTest.java` 파일 \n\n```java\npackage org.example.persistence;\n\nimport static org.junit.Assert.fail;\n\nimport java.sql.Connection;\n\nimport javax.sql.DataSource;\n\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.example.config.RootConfig;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport lombok.Setter;\nimport lombok.extern.log4j.Log4j;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(classes= {RootConfig.class})\n@Log4j\npublic class DataSourceTest {\n\n\t@Setter(onMethod = @__({@Autowired}))\n\tprivate DataSource ds; \n\t\n\t@Setter(onMethod = @__({@Autowired}))\n\tprivate SqlSessionFactory sqlSessionFactory;\n\t\n\t\n\t@Test\n\tpublic void testMyBatis() {\n\t\t\n\t\ttry(SqlSession session = sqlSessionFactory.openSession();\n\t\t\tConnection\tconn = session.getConnection();\n\t\t\t){\n\t\t\tlog.info(session);\n\t\t\tlog.info(conn);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}\n\t\n\t\n//\t@Test\n//\tpublic void testConnection() {\n//\t\tConnection conn = null;\n//\t\ttry{\n//\t\t\tconn = ds.getConnection();\n//\t\t\tlog.info(conn);\n//\t\t} catch (Exception e) {\n//\t\t\tfail(e.getMessage());\n//\t\t}\n//\t}\n}\n```\n\n### (5) 스프링과 MyBatis + Mapper와 연동 처리\n> Mapper : SQL과 그 처리를 하는 클래스를 연결하는 역할 \n> ① Mapper + 인터페이스 + 어노테이션 으로 작성할 수도 있고, \n> ② XML + 인터페이스 + 어노테이션의 형태로 작성 할 수도 있음. \n\n--------------------------------------------------------------\n<font color='green'>5-1. Mapper 설정</font>\n- Mybatis XML Mapper 참조 : <http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html>\n \n> **<font color='purple'>xml 설정을 이용하는 경우</font>** \n> root-context.xml 에 설정하기 : `<mybatis:scan>` 태그 이용 \n> root-context.xml 창 하단의 'Namespaces' 항목에서 'mybatis-spring' 항목 체크 \n> `<mybatis-spring:scan>`에 지정된 패키지의 모든 MyBatis 어노테이션을 찾아서 처리 \n \n```xml\n<mybatis-spring:scan base-package='org.example.mapper'/>\n```\n\n> **<font color='purple'>Java 설정을 이용하는 경우</font>** \n> `@MapperScan`을 이용하여 처리 \n\n```java\npackage org.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.mybatis.spring.SqlSessionFactoryBean;\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\n@Configuration\n@ComponentScan(basePackages = {\"org.example.sample\"})\n@MapperScan(basePackages = {\"org.example.mapper\"})\npublic class RootConfig {\n\n @Bean\n public DataSource dataSource() {\n HikariConfig config = new HikariConfig();\n config.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");\n config.setUsername(\"book_ex\");\n config.setPassword(\"password\");\n config.addDataSourceProperty(\"serverTimezone\", \"UTC\");\n config.addDataSourceProperty(\"cachePrepStmts\", \"true\");\n config.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");\n config.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");\n\n HikariDataSource ds = new HikariDataSource(config);\n return ds;\n }\n \n @Bean\n public SqlSessionFactory sqlSessionFactory() throws Exception {\n SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();\n sqlSessionFactory.setDataSource(dataSource());\n return (SqlSessionFactory) sqlSessionFactory.getObject();\n }\n}\n```\n------------------------------------------------------------------------------------\n*<font color='green'>5-2. Java 인터페이스와 Mybatis 어노테이션 이용한 예제</font>*\n\n> <font color='black'>인터페이스</font> \n> `src/main/java` 폴더 `org.example.mapper` 패키지 `TimeMapper.java` 인터페이스 \n> `@Select` MyBatis 어노테이션 이용 \n \n```java\npackage org.example.mapper;\n\nimport org.apache.ibatis.annotations.Select;\n\npublic interface TimeMapper {\n\n\t@Select(\"SELECT sysdate() FROM dual\")\n\tpublic String getTime();\n}\n```\n\n> <font color='black'>테스트</font> \n> `src/test/java` 폴더 `org.example.persistance` 패키지 `TimeMapperTests.java` 클래스 \n\n```java\npackage org.example.persistence;\n\nimport org.example.config.RootConfig;\nimport org.example.mapper.TimeMapper;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport lombok.Setter;\nimport lombok.extern.log4j.Log4j;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(classes = {RootConfig.class})\n@Log4j\npublic class TimeMapperTests {\n\n\t@Setter(onMethod = @__({@Autowired}))\n\tprivate TimeMapper timeMapper;\n\t\n\t@Test\n\tpublic void testGetTime() {\n\t\tlog.info(timeMapper.getClass().getName());\n\t\tlog.info(timeMapper.getTime());\n\t}\n}\n```\n\n----------------------------------------------------------------------------------\n*<font color='green'>5-3. XML + Java 인터페이스 이용한 예제</font>*\n\n> <font color='black'>인터페이스</font> \n> `src/main/java` 폴더 `org.example.mapper` 패키지 `TimeMapper.java` 인터페이스 \n\n```java\npackage org.example.mapper;\n\nimport org.apache.ibatis.annotations.Select;\n\npublic interface TimeMapper {\n\n\tpublic String getTime2();\n}\n```\n\n> <font color='black'>XML</font> \n> `src/main/resources` 폴더 `org/example/mapper` 폴더 `TimeMapper.xml` \n> `namespace` : xml 에서 처리할 인터페이스의 위치와 같게 설정함 \n> `id` : 인터페이스에서 처리할 메소드명\n> `resultType` : 처리할 메소드의 반환타입 \n> 선언은 인터페이스, SQL 처리는 XML 에서! \n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n\n<mapper namespace=\"org.example.mapper.TimeMapper\">\n\n <select id=\"getTime2\" resultType=\"string\">\n select sysdate() from dual\n </select>\n\n</mapper>\n```\n\n> <font color='black'>테스트</font> \n> `src/test/java` 폴더 `org.example.persistance` 패키지 `TimeMapperTests.java` 클래스 \n\n```java\npackage org.example.persistence;\n\nimport org.example.config.RootConfig;\nimport org.example.mapper.TimeMapper;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport lombok.Setter;\nimport lombok.extern.log4j.Log4j;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(classes = {RootConfig.class})\n@Log4j\npublic class TimeMapperTests {\n\n\t@Setter(onMethod = @__({@Autowired}))\n\tprivate TimeMapper timeMapper;\n\t\n\t@Test\n\tpublic void testGetTIme2() {\n\t\tlog.info(timeMapper.getClass().getName());\n\t\tlog.info(timeMapper.getTime2());\n\t}\n}\n```\n\n### (6) log4jdbc-log4j2 설정\n\n> JDBC의 PreparedStatement의 SQL 로그를 ? 가 아닌 실제 값으로 보기위한 라이브러리. \n\n*<font color='green'>6-1. 라이브러리 추가</font>*\n\n- pom.xml\n\n```xml\n<!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 -->\n<dependency>\n <groupId>org.bgee.log4jdbc-log4j2</groupId>\n <artifactId>log4jdbc-log4j2-jdbc4</artifactId>\n <version>1.16</version>\n</dependency>\n```\n\n-----------------------------------------------------------------------------------\n*<font color='green'>6-2. 로그 설정 파일 추가</font>*\n\n> `src/mian/resources` 밑에 `log4jdbc.log4j2.properties` 파일\n\n```ini\nlog4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator\n# log4jdbc.auto.load.popular.drivers = false\n```\n-----------------------------------------------------------------------------------\n*<font color='green'>6-3. JDBC 연결정보 수정</font>*\n\n> RootConfig.java\n\n```java\npackage org.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.mybatis.spring.SqlSessionFactoryBean;\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\n@Configuration\n@ComponentScan(basePackages = {\"org.example.sample\"})\n@MapperScan(basePackages = {\"org.example.mapper\"})\npublic class RootConfig {\n\n\t@Bean\n\tpublic DataSource dataSource() {\n\t\tHikariConfig config = new HikariConfig();\n // driver 추가 (기본 드라이버 로드 안되도록 properties 에서 설정함.)\n\t\tconfig.setDriverClassName(\"net.sf.log4jdbc.sql.jdbcapi.DriverSpy\");\n //jdbc: 다음부분에 log4jdbc 추가함.\n\t\tconfig.setJdbcUrl(\"jdbc:log4jdbc:mysql://localhost:3306/testDb\");\n\t\t//config.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");\n\t\tconfig.setUsername(\"book_ex\");\n\t\tconfig.setPassword(\"password\");\n\t\tconfig.addDataSourceProperty(\"serverTimezone\", \"UTC\");\n\t\tconfig.addDataSourceProperty(\"cachePrepStmts\", \"true\");\n\t\tconfig.addDataSourceProperty(\"prepStmtCacheSize\", \"250\");\n\t\tconfig.addDataSourceProperty(\"prepStmtCacheSqlLimit\", \"2048\");\n\n\t\tHikariDataSource ds = new HikariDataSource(config);\n\t\treturn ds;\n\t}\n\t\n\t@Bean\n\tpublic SqlSessionFactory sqlSessionFactory() throws Exception {\n\t\tSqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();\n\t\tsqlSessionFactory.setDataSource(dataSource());\n\t\treturn (SqlSessionFactory) sqlSessionFactory.getObject();\n\t}\n}\n```\n\n*<font color='green'>6-4. 로그레벨</font>*\n\n- 참고: <https://logging.apache.org/log4j/2.x/manual/customloglevels.html>\n- 로그레벨은 마지막 <root> 구문의 영향을 받음. \n- main 소스 ( src/main/resources/log4j.xml ) 의 경우, 로그레벨을 'warn'으로 하여, 불필요한 정보를 유출하지 않음. \n- test 소스 ( src/test/resources/log4j.xml ) 의 경우, 로그레벨을 'info'로 하여, 개발자가 필요한 정보를 많이 볼 수 있도록 설정함. \n\n```xml\n<root>\n <priority value=\"info\"/>\n <appender-ref=\"console\">\n</root>\n```","dir":"/spring5/1_env/","name":"env.md","path":"spring5/1_env/env.md","url":"/spring5/1_env/env.html"},{"sort":2,"layout":"default","title":"장고의 웹애플리케이션 개발 방식","content":"# 장고의 웹애플리케이션 개발 방식\n\n+ 프로젝트 : 전체 프로그램\n+ 애플리케이션 : 모듈화된 단위 프로그램\n\n## 1. MVT 개발방식\n\n### (1) MVT의 정의\n1. `M` : Module ( DB테이블을 클래스로 만들어, DB와 객체를 맵핑 해주는 역할 ), modules.py 파일에 정의\n2. `V` : Views (장고에서는, Controller를 View로 구분한다.), views.py 파일에 정의\n3. `T` : Templete (템플릿, html 파일을 생성해 주는 템플릿 파일 ), templetes.py 파일에 정의\n\n### (2) 예시\n\n```mermaid\nflowchart LR\n id1((웹클라이언트))<--Response-->id2([View])--Model CRUD--> id3([Model]);\n id1--Request-->id6[URL\\n conf];\n id6--Request-->id2;\n id2--Templete Rendering-->id4([Templete]);\n id3--ORM-->id5[(DB)];\n```\n\n+ URLconf : URL을 분석하여, URL에 해당하는 뷰를 결정\n\n## 2. Model - 데이터베이스 정의\n> ORM 기법으로 테이블을 클래스로 맵핑하기 때문에 데이터베이스 엔진이 바뀌더라도 변경을 하지 않아도 된다. \n> models.py 파일에 정의 \n> 참고 : <https://docs.djangoproject.com/en/3.2/topics/db/models> \n\n### (1) 예시 \n\n```python\nfrom django.db import models\n\nclass Person(models.Model):\n first_name = models.CharField(max_length=30)\n last_name = models.CharField(max_length=30)\n```\n\n+ DB에 테이블을 생성하지 않아도, 웹서버 실행 시 테이블이 없으면 자동생성 함\n\n### (2) DB 스키마 자동 생성의 규칙\n1. 테이블명 : 애플리케이션이름_모델 클래스명 (모두 소문자)\n2. PrimaryKey : 장고에서 자동부여 (=id)\n\n## 3. URLconf - URL 정의\n> urls.py 파일에 정의 \n\n### (1) 예시\n\n```python\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n path('articles/2003/',views.special_case_2003),\n path('articles/<int:year>/',views.year_archive),\n path('articles/<int:year>/<int:month>/',views.month_archive),\n path('articles/<int:year>/<int:month>/<slug:slug>/',views.article_detail),\n]\n```\n\n### (2) URL 분석하는 순서\n1. settings.py 파일에서 ROOT_URLCONF 항목을 읽어 최상위 URLconf(urls.py)의 위치를 알아냄\n2. URLconf 로딩하여, urlpatterns 변수에 지정된 URL 리스트를 검사\n3. 매치된 URL에 해당하는 view를 호출 (view 는 클래스나 메소드, 호출 시, HTTPRequest객체와 <>안에 정의된 파라미터를 함께 전달함)\n4. 매칭에 실패시, 에러 처리하는 뷰 호출\n\n### (3) <> (Path Converter)에 사용되는 타입\n1. str : 지정하지 않으면 기본값\n2. int\n3. slug : slug 형식의 문자열 (ASCII, 숫자, 하이픈, 밑줄)\n4. uuid \n5. path : /를 포함한 모든 문자열, 패턴의 일부가 아니라 전체를 추출\n\n### (4) 정규표현식을 사용한 URL 표현법\n\n+ 예시\n - path() : 타입을 사용하여 파라미터 정의\n - re_path() : 정규식을 사용하여 파라미터 정의\n\n```python\nfrom django.urls import path, re_path\nfrom . import views\n\nurlpatterns = [\n path('articles/2003/', views.special_case_2003),\n re_path(r'^articles/(?P<year>[0-9]{4})/$', views.year_archive),\n re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$', views.month_archive),\n re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<slug>[\\w-]+)/$',views.article_detail)\n]\n```\n\n### (5) 정규표현식에 사용되는 문자들\n\n|표현 |의미 |\n|:--- |:--- |\n|.(Dot) |모든 문자 1개 |\n|^(Carot) |문자열의 시작 |\n|$ |문자열의 끝 |\n|[] |[]안의 문자중 하나 |\n|[^] |[]안의 문자 이외의 문자 하나 |\n|* |0회 이상 반복 |\n|+ |1번 이상 반복 |\n|? |0 또는 1번 반복 |\n|{n} |n회 반복 |\n|{m,n} |m~n회 반복 |\n|A\\|B |A또는 B |\n|[a-z] |a~z의 소문자 |\n|\\w |영문대문자, 영문소문자, 숫자, 밑줄 중 1글자 |\n|\\d |숫자 한개 |\n\n## 4. View - 로직정의\n> 웹 요청을 받고 응답을 반환함 \n> views.py 파일에 정의 \n> 다양한 형태의 응답 데이터를 만들어내기 위한 로직 작성 \n\n### (1) 예시\n\n```python\nfrom django.http import HttpResponse\nimport datetime\n\ndef current_datetime(request):\n now = datetime.datetime.now()\n html = \"<html><body>It is now %s.</body></html>\" % now\n return HttpResponse(html)\n```\n\n+ 에러를 응답하고 싶다면, HttpResponse클래스의 하위 클래스로 정의되어 있음 \n `return HttpResponseNotFound('<h1>Page not found</h1>')`\n\n## 5. Templete - 화면 UI\n> jango 자체 템플릿 있음, 탬플릿 태그/필터 기능 사용 가능하여 파이썬 코드를 직접 사용 가능 \n> 템플릿 파일은 지정된 곳에 반드시 위치 시켜야 함 \n> jango 에서 템플릿 찾을 때는, TEMPLETES 및 INSTALLED_APPS 에서 지정된 앱의 디렉토리 검색 (settings.py 파일에 정의되어 있음) \n\n### (1) 템플릿 위치 찾기\n1. settings.py 파일에 정의\n2. settings.py 파일 예제\n\n```python\nINSTALLED_APPS = [\n 'django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes'\n]\n\nTEMPLETES = [\n 'DIRS': [os.path.join(BASE_DIR,'templete')]\n]\n```\n\n- TEMPLETES 에 정의된 디렉토리를 먼저 검색\n- INSTALLED_APPS 항목에 등록된 각 앱의 templetes 디렉토리 검색\n\n3. (2)의 파일에서 검색결과 템플릿 위치\n- BASE_DIR의 위치를 /private/programmer/phthon 이라고 가정하자.\n\n```\n<!-- TEMPLETES에 정의된 디렉토리 검색 -->\n/private/programmer/phthon/templetes\n\n<!-- INSTALLED_APPS 항목에 들록된 앱에서 templetes 디렉토리 검색 -->\n/Phthon3/Lib/site-packages/django/admin/templetes\n/Phthon3/Lib/site-packages/django/auth/templetes\n/Phthon3/Lib/site-packages/django/contenttypes/templetes\n```\n\n## 6. MVT 코딩순서\n> 개발 시, 자신만의 코딩순서를 정하는 것이 로직을 풀어나가는데 일관성을 유지할 수 있고 노하우를 빨리 습득 할 수 있다. \n\n1. 프로젝트 뼈대 만들기 : 앱 개발에 필요한 디렉토리와 파일 생성\n2. 모델 코딩하기 : 테이블 관련 사항 개발 (models.py, admin.py)\n3. URLconf 코딩하기 : urls.py\n4. 템플릿과 뷰를 동시에 코딩하기 : tempeletes/ 디렉토리 하위의 *.html 및 views.py\n","dir":"/python/DjangoWebFramework/","name":"jangoDevelopmentPattern.md","path":"python/DjangoWebFramework/jangoDevelopmentPattern.md","url":"/python/DjangoWebFramework/jangoDevelopmentPattern.html"},{"sort":2,"permalink":"/python/DjangoWebFramework/","layout":"default","title":"Django 웹 프레임워크","content":"<h1 id=\"django-웹-프레임워크\">Django 웹 프레임워크</h1>\n\n<blockquote>\n <p>MVT 패턴 <br />\nORM 지원 <br />\n관리자화면 자동 구성 <br />\n정규표현식을 이용한 우아한 URL 지원 <br />\n자체 템플릿 지원 <br />\n여러유형/여러장소의 캐시 시스템 운영 <br />\n다국어 지원 <br />\n풍부한 개발환경 (테스트서버 지원등) <br />\n소스 변경 사항 자동 반영 (웹서버 재실행 필요 없음)</p>\n</blockquote>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/DjangoWebFramework/README.md</code></p>\n","dir":"/python/DjangoWebFramework/","name":"README.md","path":"python/DjangoWebFramework/README.md","url":"/python/DjangoWebFramework/"},{"sort":2,"layout":"default","title":"Q&amp;A","content":"<h1 id=\"qa\">Q&amp;A</h1>\n\n<h2 id=\"1-한글-문제와-utf-8-처리하기\">1. 한글 문제와 UTF-8 처리하기</h2>\n\n<h2 id=\"2-스프링부트-적용하기\">2. 스프링부트 적용하기</h2>\n\n<h2 id=\"3-뒤로가기-문제-해결하기\">3. 뒤로가기 문제 해결하기</h2>\n\n<h2 id=\"4-mybatis의-동적-sql-사용하기\">4. MyBatis의 동적 SQL 사용하기</h2>\n\n<h2 id=\"5-오라클-데이터베이스-성능-올리기\">5. 오라클 데이터베이스 성능 올리기</h2>\n\n<h2 id=\"6-테스트-하기junit\">6. 테스트 하기(Junit)</h2>\n\n<h2 id=\"7-mac-os-에-mysql-dmg-설치\">7. Mac OS 에 MySql dmg 설치</h2>\n\n<ol>\n <li>mySql 다운로드 : <a href=\"https://dev.mysql.com/downloads/mysql/\">https://dev.mysql.com/downloads/mysql/</a></li>\n <li>*.dmg 파일을 다운로드 받은 후, 해당 파일을 더블클릭하여 설치를 시작한다.</li>\n <li>설치 과정은 간단하므로 설치 마법사에 따라서 설치한다.</li>\n <li>맥 OS의 ‘시스템환경설정’에 가보면, mysql 서버 아이콘이 보여진다.</li>\n <li>mysql 아이콘을 더블 클릭해 보면, 현재 상태를 알 수 있다.</li>\n <li>mysql 서버가 실행중인 것을 확인 후 터미널로 이동한다. (DBMS 에서는 자동으로 서버를 스캔하여 접속 가능하다.)</li>\n <li>\n <p>터미널에서 mysql 을 실행한다.\n ```zsh\n $ cd /usr/local/mysql/bin\n $ ./mysql -u root -p\n Enter Password:[비밀번호 입력]\n mysql&gt; \n ``</p>\n </li>\n <li>mysql 경로로 직접 가서 mysql shell 을 실행하지 않고, ‘mysql’ 명령어만으로 실행하고 싶다면, .zshrc에 alias를 추가한다.\n<pre><code class=\"language-.zshrc\"> &lt;!-- 생략 --&gt;\n alias mysql=\"/usr/local/mysql/bin/mysql\"\n &lt;!-- esc + wq: 로 저장 --&gt;\n</code></pre>  \n </li>\n</ol>\n\n<h2 id=\"8-domain의-종류인-vo-와-dto-는-어떤-차이가-있나요\">8. domain의 종류인 VO 와 DTO 는 어떤 차이가 있나요?</h2>\n\n<h2 id=\"9-mybatis-xml-파일에-다중의-파라미터를-전달하려면-어떻게-해야-하나요\">9. myBatis XML 파일에 다중의 파라미터를 전달하려면 어떻게 해야 하나요?</h2>\n","dir":"/spring5/9_QNA/","name":"2_qna.md","path":"spring5/9_QNA/2_qna.md","url":"/spring5/9_QNA/2_qna.html"},{"sort":2,"layout":"default","title":"장고 파이썬 쉘로 데이터 조작하기","content":"# 장고 파이썬 쉘로 데이터 조작하기\n\n> <font color='red'>간단한 데이터 관리는 Admin 사이트 UI를 활용하지만, 복잡하고 다양한 데이터 처리나 웹 브라우저에 접속 할 필요가 없을 때, 일반적으로 shell 로 데이터를 처리한다.</font> \n> Create \n> Read \n> Update \n> Delete \n> 데이터 조작하기 실습 \n\n\n## 1. 장고 파이썬 쉘 시작하는 명령어 \n- manage.py 를 통해 DJANGO_SETTINGS_MODULE 속성을 이용하여 미리 mysite/settings.py 파일을 임포트 함.\n\n ```\n ch3>python manage.py shell\n ```\n\n## 2. Create - 데이터 생성/입력\n- save() 명령 실행, 내부적으로 SQL의 INSERT 문장 실행\n\n ```\n ch3> python manage.py shell\n In [1]: from polls.models import Question, Choice\n In [2]: from django.utils import timezone\n In [3]: q = Question(question_text='What's new?', pub_date=timezone.now())\n In [4]: q.save()\n ```\n\n\n## 3. Read - 데이터 조회\n\n> 조회 결과는 QuerySet 객체(컬랙션) 로 반환됨 \n> QuerySet은 SELECT 문장에 해당하며 QuerySet 객체를 반환하려면, objects 객체를 이용해야 함 \n> Where에 해당하는 함수는, filter() 와 exclude() 가 있음 \n> 1개의 데이터만 반환하는 것이 확실할 때는, get() 함수를 쓸 수 있음 \n> SQL의 OFFSET이나 LIMIT 에 해당하는 기능은 배열 슬라이스를 사용 할 수 있으며, 이때는 리스트를 반환함 \n\n1. 전체 레코드 조회하여 <font color='red'>QuerySet 반환받기</font>\n - 핵심 키워드 : `Question.objects.all()`\n\n ```\n In [16]: Question.objects.all()\n Out[16]: <QuerySet [<Question: What is your hobby?>, <Question: Who do you like best?>, <Question: Where do you live?>, <Question: What's new?>]>\n ```\n\n2. 조건에 맞는 레코드 검색하기 (Where) : filter(), exclude()\n - objects.all(), filter(), exclude()는 모두 <font color='red'>QuerySet 컬랙션을 반환</font>하므로 `체인`식 호출이 가능\n\n ```\n In [12]: Question.objects.all().filter(question_text__startswith='What').exclude(pub_date__gte=datetime.now().strftime(\"%Y-%m-%d\")).filter(pub_date__gte=datetime(2005, 1, 30))\n Out[12]: <QuerySet [<Question: What is your hobby?>]>\n ```\n\n3. 한개의 요소만 있는것이 확실한 경우 get() 사용\n> 1개의 <font color='red'>객체를 리턴함</font>\n\n ```\n In [13]: Question.objects.get(pk=1)\n Out[13]: <Question: What is your hobby?>\n ```\n\n4. SQL의 OFFSET 또는 LIMIT 에 해당하는 개수 제한하기\n> 배열 슬라이스 문법을 사용함 \n> <font color='red'> 리스트를 반환함 </font>\n\n ```\n In [14]: Question.objects.all()[:2]\n Out[14]: <QuerySet [<Question: What is your hobby?>, <Question: Who do you like best?>]>\n\n In [15]: Question.objects.all()[1:3]\n Out[15]: <QuerySet [<Question: Who do you like best?>, <Question: Where do you live?>]>\n ```\n\n## 4. Update - 데이터 수정하기\n\n1. 한개의 객체 (row)만 수정하기 : save() 메소드 사용\n\n ```\n In [23]: q=Question.objects.get(question_text__startswith='What is')\n\n In [24]: q.question_text = 'What is your favorit thing?'\n\n In [25]: q.save()\n\n In [26]: Question.objects.all()\n Out[26]: <QuerySet [<Question: What is your favorit thing?>, <Question: Who do you like best?>, <Question: Where do you live?>, <Question: What's new?>]>\n ```\n\n2. 여러개의 객체 한번에 수정하기 : update() 메소드 사용\n\n ```\n In [28]: Question.objects.filter(question_text__startswith='What').update(question_text='Everything is the same')\n Out[28]: 2\n ```\n\n## 5. Delete - 데이터 삭제\n> delete() 메소드 사용 \n> Fk 로 연결된 Choice 데이터도 연쇄 삭제됨 \n\n1. 조건에 해당하는 데이터 삭제하기\n\n ```\n In [32]: Question.objects.filter(question_text__startswith='Everything').delete()\n Out[32]: (5, {'polls.Choice': 3, 'polls.Question': 2})\n\n In [33]: Question.objects.all()\n Out[33]: <QuerySet [<Question: Who do you like best?>, <Question: Where do you live?>]>\n\n In [34]: Choice.objects.all()\n Out[34]: <QuerySet [<Choice: Reading>, <Choice: Soccer>, <Choice: Climbing>, <Choice: seoul, Korea>, <Choice: jeju, Korea>, <Choice: Asan, Korea>]>\n ```\n\n2. 모든 데이터 삭제하기 : all()메소드를 사용해야만 모두 삭제 할 수 있음. 삭제의 위험성을 낮추기 위한 조치\n\n - (O) `Question.objects.all().delete()`\n - (x) `Question.objects.delete()`\n\n## 6. FK 로 연결된 Choice 모델 데이터 조작하기\n> choice_set 속성을 이용한다. \n\n### (1) Question 테이블의 레코드 하나를 조회한다\n\n >>> q = Question.objects.get(pk=2)\n\n### (2) 조회된 Question 객체 q에 연결된 Choice 레코드를 모두 조회한다\n\n In [37]: q.choice_set.all()\n Out[37]: <QuerySet [<Choice: Reading>, <Choice: Soccer>, <Choice: Climbing>]>\n\n### (3) question 객체에 답변항목인 choice 객체 3개를 생성해 보자\n\n In [36]: q = Question.objects.get(pk=2)\n\n In [37]: q.choice_set.all()\n Out[37]: <QuerySet [<Choice: Reading>, <Choice: Soccer>, <Choice: Climbing>]>\n\n In [38]: q.choice_set.create(choice_text='Sleeping', votes=0)\n Out[38]: <Choice: Sleeping>\n\n In [39]: q.choice_set.create(choice_text='Eating', votes=0)\n Out[39]: <Choice: Eating>\n\n In [40]: c = q.choice_set.create(choice_text='Palying', votes=0)\n\n### (4) choice 객체에 연결되어 있는 Question 객체를 조회해 보자\n\n In [40]: c = q.choice_set.create(choice_text='Palying', votes=0)\n\n In [41]: c.question\n Out[41]: <Question: Who do you like best?>\n\n### (5) 반대로, question 객체에 연결된 choice 객체를 조회해 보자\n\n In [42]: q.choice_set.all()\n Out[42]: <QuerySet [<Choice: Reading>, <Choice: Soccer>, <Choice: Climbing>, <Choice: Sleeping>, <Choice: Eating>, <Choice: Palying>]>\n\n In [43]: q.choice_set.count()\n Out[43]: 6\n\n### (6) __ 를 이용하여 객체간의 관계를 표현해 보자\n\n(ex) pub_date 속성이 올해인 Question 객체에 연결된 Choice 객체를 모두 조회하는 명령\n\n In [44]: current_year = timezone.now().year\n\n In [45]: Choice.objects.filter(question__pub_date__year=current_year)\n Out[45]: <QuerySet [<Choice: Reading>, <Choice: Soccer>, <Choice: Climbing>, <Choice: seoul, Korea>, <Choice: jeju, Korea>, <Choice: Asan, Korea>, <Choice: Sleeping>, <Choice: Eating>, <Choice: Palying>]>\n\n### (7) choice_set 중에 한개의 객체를 삭제해 보자\n\n In [46]: c = q.choice_set.filter(choice_text__startswith='Sleeping')\n\n In [47]: c.delete()\n Out[47]: (1, {'polls.Choice': 1})\n\n In [48]:","dir":"/python/DjangoCoreFunction/","name":"dataAlterbyPythonShell.md","path":"python/DjangoCoreFunction/dataAlterbyPythonShell.md","url":"/python/DjangoCoreFunction/dataAlterbyPythonShell.html"},{"sort":2,"layout":"default","title":"웹 서버 라이브러리","content":"# 2. 웹 서버 라이브러리\n> 웹서버는 프레임워크를 사용해서 개발하는 경우가 대부분이지만, 웹 서버 라이브러리의 동작원리를 익히는 것이 고급 개발자로 가는 길이다. \n\n## http.server의 주요 클래스\n\n|클래스 명 |주요기능 |\n|:--- |:--- |\n|HTTPServer |. 웹서버를 만들기 위한 클래스, ip와 port를 바인딩 함 <br>. HTTPServer객체 생성 시, 핸들러가 반드시 필요함 |\n|BaseHTTPRequestHandler |. 핸들러를 만들기 위한 기반 클래스. HTTP 처리 로직이 들어 있음<br>. 이 클래스를 상속 받아, 자신의 로직 처리를 담당하는 핸들러를 만들 수 있음 |\n|SimpleHTTPRequestHandler|. BaseHTTPRequestHandler를 상속받아 만든 클래스<br>. GET과 HEAD 메소드 처리가 가능한 핸들러|\n|CGIHTTPRequestHAndler|. SimpleHTTPRequestHandler클래스를 상속받아 만든 클래스<br>. 추가적으로 POST와 CGI 처리가 가능한 핸들러 클래스|\n\n## 가장 간단한 웹서버 만들기 샘플\n> HTTPServer와 BaseHTTPRequestHandler 를 이용\n\n```python\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\n\nclass MyHandler(BaseHTTPRequestHandler):\n def do_GET(self):\n self.send_response_only(200, 'OK')\n self.send_header('Content-Type', 'text/plain')\n self.end_headers()\n self.wfile.write(b\"Hello World\")\n\nif __name__ == '__main__':\n # 서버의 ip, port, 핸들러를 인자로 하여, HttpServer객체를 생성한다.\n server = HTTPServer(('',8888), MyHandler)\n print(\"Started WebServer on port 8888......\")\n print(\"Press ^C to quit WebServer\")\n # 요청을 처리함\n server.serve_forever()\n```\n- 웹서버를 만드는 방법은 일정한 룰에 의해 작성됨\n\n## SimpleHTTPRequestHandler 클래스\n> 별도의 코딩이 필요 없음 \n> do_GET(), do_HEAD() 메소드가 정의되어 있음 \n\n```\n$ python -m http.server 8888\n```\n- 웹브라우저에 http://localhost:8888 을 요청하면, 내 PC의 디렉터리 목록이 보여진다.\n\n## CGIHTTPRequestHandler 클래스\n> 미리 구현되어 있어서, 즉시 웹서버 실행이 가능함 \n> do_POST()메소드가 정의되어 있고 CGI 웹서버 실행만 가능함 \n> CGI 웹서버 실행시 --cgi 옵션을 이용 \n> 디폴트 포트번호는 8000 \n> http.server --cgi 실행위치가 웹서버의 루트 디렉토리가 됨\n\n```\n$python -m http.server 8888 --cgi\n```\n\n### CGIHTTPRequestHandler 클래스를 이용하여 Post 요청 해보기\n- 서버 스크립트\n + 반드시 cgi-bin 폴더안에 파일을 생성해야 함\n + 파일에 실행권한을 주어야 함 \n `$ chmod 755 ./cgi-bin/cgi_server.py` \n + 새로운 터미널을 열고 cgi-bin 폴더의 상위폴더에서 http.server --cgi 를 실행하면, 자동으로 cgi-bin 폴더안의 cgi-server.py가 실행됨 \n `$ python -m http.server 8888 --cgi`\n\n```python\n#!/usr/bin/env python\n\nimport cgi\n\nform = cgi.FieldStorage()\nname = form.getvalue('name')\nemail = form.getvalue('email')\nurl = form.getvalue('url')\n\nprint('Content-Type: text/plain')\nprint()\n\nprint('Welcome... CGI Script')\nprint('name is ', name)\nprint('email is ', email)\nprint('url is ', url)\n```\n\n- 클라이언트 스크립트\n + http.server --cgi 명령을 실행한 위치가 루트가 되므로, url이 .../cgi-bin/cgi_server.py 가 되는 것임 \n\n```python\nfrom urllib.request import urlopen\nfrom urllib.parse import urlencode\n\nurl = 'http://127.0.0.1:8888/cgi-bin/cgi_server.py'\ndata = urlencode({\n 'name':'김윤미',\n 'email':'kym@naver.com',\n 'url':'http://www.naver.com'\n})\npostData = data.encode()\n\nf = urlopen(url, postData)\nprint(f.read().decode('utf-8'))\n\n```","dir":"/python/webStandardLibrary/","name":"webServerLibrary.md","path":"python/webStandardLibrary/webServerLibrary.md","url":"/python/webStandardLibrary/webServerLibrary.html"},{"sort":2,"layout":"default","title":"xml 을 이용한 프로젝트 뼈대 설정","content":"<h1 id=\"xml-을-이용한-프로젝트-뼈대-설정\">xml 을 이용한 프로젝트 뼈대 설정</h1>\n<blockquote>\n <p>pom.xml 수정 <br />\n데이터베이스 설정 <br />\n스프링 MVC 처리</p>\n</blockquote>\n\n<h2 id=\"1-pomxml-설정\">1. pom.xml 설정</h2>\n<ol>\n <li>java 버전, 스프링 버전 변경\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;properties&gt;</span>\n     <span class=\"nt\">&lt;java-version&gt;</span>1.8<span class=\"nt\">&lt;/java-version&gt;</span>\n     <span class=\"nt\">&lt;org.springframework-version&gt;</span>5.2.12.RELEASE<span class=\"nt\">&lt;/org.springframework-version&gt;</span>\n     <span class=\"nt\">&lt;org.aspectj-version&gt;</span>1.6.10<span class=\"nt\">&lt;/org.aspectj-version&gt;</span>\n     <span class=\"nt\">&lt;org.slf4j-version&gt;</span>1.6.6<span class=\"nt\">&lt;/org.slf4j-version&gt;</span>\n <span class=\"nt\">&lt;/properties&gt;</span>\n <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n  <span class=\"nt\">&lt;plugin&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.apache.maven.plugins<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>maven-compiler-plugin<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.5.1<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;configuration&gt;</span>\n         <span class=\"nt\">&lt;source&gt;</span>1.8<span class=\"nt\">&lt;/source&gt;</span>\n         <span class=\"nt\">&lt;target&gt;</span>1.8<span class=\"nt\">&lt;/target&gt;</span>\n         <span class=\"nt\">&lt;compilerArgument&gt;</span>-Xlint:all<span class=\"nt\">&lt;/compilerArgument&gt;</span>\n         <span class=\"nt\">&lt;showWarnings&gt;</span>true<span class=\"nt\">&lt;/showWarnings&gt;</span>\n         <span class=\"nt\">&lt;showDeprecation&gt;</span>true<span class=\"nt\">&lt;/showDeprecation&gt;</span>\n     <span class=\"nt\">&lt;/configuration&gt;</span>\n <span class=\"nt\">&lt;/plugin&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>스프링 관련 추가 라이브러리\n <ul>\n <li>spring-tx, spring-jdbc, spring-test</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-jdbc<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>   \n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-tx<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- spring-test --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-test<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>DB 연결 관련 라이브러리 추가\n <ul>\n <li>HikariCP, MyBatis, mysql-connector-java, mybatis-spring, Log4jdbc</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!--DB 관련 추가 라이브러 --&gt;</span>\n <span class=\"c\">&lt;!-- MySQL --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>mysql<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mysql-connector-java<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>8.0.22<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n     <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>com.zaxxer<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>HikariCP<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.4.5<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- MyBatis 3.4.1 --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.mybatis<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mybatis<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.5.4<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- MyBatis-Spring --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.mybatis<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mybatis-spring<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.0.3<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n     <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.bgee.log4jdbc-log4j2<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>log4jdbc-log4j2-jdbc4<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>1.16<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>\n <p>Lombox 추가</p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- lombok --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.projectlombok<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>lombok<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>1.18.0<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>jUnit 버전 변경\n <ul>\n <li>4.7 -&gt; 4.12</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- Test --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>junit<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>junit<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>4.12<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>test<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>Servlet 버전 변경\n <ul>\n <li>2.5 -&gt; 3.0 이상</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- Servlet --&gt;</span>\n <span class=\"c\">&lt;!-- &lt;dependency&gt;\n     &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n     &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;\n     &lt;version&gt;2.5&lt;/version&gt;\n     &lt;scope&gt;provided&lt;/scope&gt;\n &lt;/dependency&gt; --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>javax.servlet<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>javax.servlet-api<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.1.0<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>Controller 객체를 json으로 변환하는 라이브러리 추가\n <ul>\n <li>jackson-binder</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>jackson-databind<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.11.3<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\t\t\t\t\n</code></pre>  </div> </div>\n </li>\n <li>Maven Project Update\n <ul>\n <li>프로젝트 우클릭 &gt; Maven &gt; Update Project…</li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"2-테이블-생성과-더미-데이터-생성\">2. 테이블 생성과 더미 데이터 생성</h2>\n<ul>\n <li>mysqlWorkbench로 ‘book_ex’/’book_ex’로 접속한다. (기본 DB는 testdb로 정하였었다.)</li>\n <li>\n <p>아래의 스키마를 실행하여 테이블을 생성한다.</p>\n\n <div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"nv\">`testdb`</span><span class=\"p\">.</span><span class=\"nv\">`tbl_board`</span> <span class=\"p\">(</span>\n  <span class=\"nv\">`bno`</span> <span class=\"nb\">INT</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span> <span class=\"n\">AUTO_INCREMENT</span><span class=\"p\">,</span>\n  <span class=\"nv\">`title`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`content`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`writer`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`regdate`</span> <span class=\"nb\">TIMESTAMP</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"nv\">`updatedate`</span> <span class=\"nb\">TIMESTAMP</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"nv\">`bno`</span><span class=\"p\">));</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>더미 데이터를 5건 정도 입력한다.</p>\n\n <div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">tbl_board</span> <span class=\"p\">(</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">writer</span><span class=\"p\">)</span>\n  <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'테스트제목'</span><span class=\"p\">,</span><span class=\"s1\">'테스트내용'</span><span class=\"p\">,</span><span class=\"s1\">'user00'</span><span class=\"p\">);</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"3-데이터베이스-설정\">3. 데이터베이스 설정</h2>\n\n<ol>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">root-context.xml</code> : DataSource, sqlSession, log4jdbc 설정</p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- Root Context: defines shared resources visible to all other web components --&gt;</span>\n <span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">'hikariConfig'</span> <span class=\"na\">class=</span><span class=\"s\">'com.zaxxer.hikari.HikariConfig'</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">'driverClassName'</span> <span class=\"na\">value=</span><span class=\"s\">'net.sf.log4jdbc.sql.jdbcapi.DriverSpy'</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">'jdbcUrl'</span> <span class=\"na\">value=</span><span class=\"s\">'jdbc:log4jdbc:mysql://localhost:3306/testdb?serverTimezone=UTC'</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"username\"</span> <span class=\"na\">value=</span><span class=\"s\">'book_ex'</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"password\"</span> <span class=\"na\">value=</span><span class=\"s\">\"book_ex\"</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n <span class=\"nt\">&lt;/bean&gt;</span>\n\t\n <span class=\"c\">&lt;!-- HikariCP configuration --&gt;</span>\n <span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">class=</span><span class=\"s\">\"com.zaxxer.hikari.HikariDataSource\"</span> <span class=\"na\">destroy-method=</span><span class=\"s\">\"close\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;constructor-arg</span> <span class=\"na\">ref=</span><span class=\"s\">\"hikariConfig\"</span><span class=\"nt\">/&gt;</span>\n <span class=\"nt\">&lt;/bean&gt;</span>\n\t\n <span class=\"c\">&lt;!-- sqlSession --&gt;</span>\n <span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"sqlSessionFactory\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;property</span> <span class=\"na\">name=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">ref=</span><span class=\"s\">\"dataSource\"</span><span class=\"nt\">&gt;&lt;/property&gt;</span>\n <span class=\"nt\">&lt;/bean&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">root-context.xml</code> : MyBatis 설정\n <ul>\n <li>namespace 추가</li>\n <li>mybatis-spring:scan 추가</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;beans</span> <span class=\"na\">xmlns:mybatis-spring=</span><span class=\"s\">\"http://mybatis.org/schema/mybatis-spring\"</span><span class=\"nt\">&gt;</span>\n <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"nt\">&lt;mybatis-spring:scan</span> <span class=\"na\">base-package=</span><span class=\"s\">\"org.example.mapper\"</span><span class=\"nt\">/&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">log4jdbc.log4j2.properties</code> 파일 추가\n <ul>\n <li>src/main/resource 폴더하위</li>\n </ul>\n\n <div class=\"language-properties highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"py\">log4jdbc.spylogdelegator.name</span><span class=\"p\">=</span><span class=\"s\">net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator</span>\n <span class=\"c\">#log4jdbc.auto.load.popular.drivers = false\n</span></code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"4-jdbc-test\">4. JDBC TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지 생성</li>\n <li>JDBCTest.java 생성 후 테스트코드 작성</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">JDBCTest</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">static</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">try</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"nc\">Class</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">try</span><span class=\"o\">{</span>\n\t\t\t<span class=\"n\">conn</span> <span class=\"o\">=</span> \n\t\t\t\t<span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"s\">\"jdbc:mysql://localhost/testDb?characterEncoding=UTF-8&amp;serverTimezone=UTC\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\n\t\t\t<span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span> \n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n\n<h2 id=\"5-datasource--connectionpool-test\">5. DataSource &amp; ConnectionPool TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지</li>\n <li>DataSourceTest.java 생성 후 테스트코드 작성\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">DataSourceTest</span> <span class=\"o\">{</span>\n\n  <span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n  <span class=\"kd\">private</span> <span class=\"nc\">DataSource</span> <span class=\"n\">ds</span><span class=\"o\">;</span> \n\t\n  <span class=\"nd\">@Test</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n      <span class=\"k\">try</span><span class=\"o\">{</span>\n          <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">();</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n","dir":"/spring5/3_webDev/","name":"2_xmlSetting.md","path":"spring5/3_webDev/2_xmlSetting.md","url":"/spring5/3_webDev/2_xmlSetting.html"},{"sort":2,"layout":"default","title":"프로젝트 생성","content":"<h1 id=\"프로젝트-생성\">프로젝트 생성</h1>\n\n<ul>\n <li>Intellij 실행</li>\n <li>‘Gradle’ 프로젝트 생성, ‘java’ 항목, ‘web’ 항목 체크\n (‘web’ 항목이 없다면, 일단 넘어가자.)</li>\n <li>Project JDK 선택 (나는 1.8 을 설치 후, 선택함)</li>\n</ul>\n\n<h1 id=\"스프링-프레임워크-추가\">스프링 프레임워크 추가</h1>\n\n<ul>\n <li>스프링의 버전을 직접 지정하기 위하여, gradle을 이용한다.</li>\n <li>build.gradle 파일을 수정한다.</li>\n</ul>\n","dir":"/spring5/8_intellij_gradle/","name":"2_project.md","path":"spring5/8_intellij_gradle/2_project.md","url":"/spring5/8_intellij_gradle/2_project.html"},{"sort":2,"layout":"default","title":"스프링 MVC의 Controller","content":"<h1 id=\"스프링-mvc의-controller\">스프링 MVC의 Controller</h1>\n\n<h2 id=\"1-controller---요청받을-준비하기\"><font color=\"blue\">1. @Controller - 요청받을 준비하기</font></h2>\n\n<ul>\n <li>ComponentScan 에서 조사 할 수 있도록 해주는 어노테이션으로, 스프링이 관리 할 수 있는 Bean 으로 등록해 주는 어노테이션.</li>\n <li>\n <p>Controller 클래스의 선언부에 @RequestMapping 과 같이 자주 사용함.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;\">예제</span> <br />\n . ServletConfig.java - ComponentScan 에 controller 소속된 패키지 추가</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.context.annotation.ComponentScan</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.EnableWebMvc</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.ViewResolverRegistry</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.config.annotation.WebMvcConfigurer</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.view.InternalResourceViewResolver</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.view.JstlView</span><span class=\"o\">;</span>\n\n  <span class=\"nd\">@EnableWebMvc</span>\n  <span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.controller\"</span><span class=\"o\">})</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ServletConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">WebMvcConfigurer</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// 생략</span>\n</code></pre>  </div> </div>\n\n <p>. SampleController.java - controller 작성</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.stereotype.Controller</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.bind.annotation.RequestMapping</span><span class=\"o\">;</span>\n\n  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n  <span class=\"c1\">// 코드작성</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"2-요청받을-url-설정하기---requestmapping-getmapping-postmapping\"><font color=\"blue\">2. 요청받을 URL 설정하기 - @RequestMapping, @GetMapping, @PostMapping</font></h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">@RequestMapping</code>: 해당 객체의 URL을 설정하는 기능을 함.</li>\n <li>클래스와 메소드의 선언부에 쓰임.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">@GetMapping</code>: @RequestMapping의 method 속성이 GET 인 것의 단축표현</li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">@PostMapping</code>: @RequestMapping의 method 속성이 POST 인 것의 단축표현</p>\n\n <p>. 예제</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"nd\">@Log4j</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n\n      <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"o\">,</span> <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">GET</span><span class=\"o\">,</span> <span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">POST</span><span class=\"o\">})</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">basic</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"basic...............\"</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n        \n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/get\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">basicGet</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"basic get............\"</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n        \n      <span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/post\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">basicPost</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"basic post............\"</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"3파라미터-받기---dto-requestparam-dtolist-datetimeformat\"><font color=\"blue\">3.파라미터 받기 - DTO, @RequestParam, DTOList, @DateTimeFormat</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. VO, DTO 객체 파라미터</font></strong></p>\n<ul>\n <li>DTO 객체의 속성들은 별도의 처리 없이 파라미터를 받고 화면에 전달하는 것 까지 가능하다.</li>\n <li>\n <p>DTO 가 될 수 있는 자격은 <code class=\"language-plaintext highlighter-rouge\">Bean</code>의 자격을 갖춘 (인자가 없는 생성자, 게터/세터가 있어야 함) 객체여야 한다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;\">예제</span> <br />\n . org.example.domain 패키지 &gt; SampleDTO.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">lombok.Data</span><span class=\"o\">;</span>\n\n  <span class=\"nd\">@Data</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleDTO</span> <span class=\"o\">{</span>\n\n      <span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n      <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. org.example.controller.SampleController.java <br />\n . 호출 시, <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/sample/dto?name=\"A\"&amp;age=10</code> 라고 호출하면, SampleDTO 객체로 받고, 화면으로 전달도 가능하다.</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"nd\">@Log4j</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// 상단 생략</span>\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"dto\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getDtoExample</span><span class=\"o\">(</span><span class=\"nc\">SampleDTO</span> <span class=\"n\">dto</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"name:\"</span> <span class=\"o\">+</span> <span class=\"n\">dto</span><span class=\"o\">.</span><span class=\"na\">getName</span><span class=\"o\">());</span>  <span class=\"c1\">// name:A</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"age:\"</span> <span class=\"o\">+</span> <span class=\"n\">dto</span><span class=\"o\">.</span><span class=\"na\">getAge</span><span class=\"o\">());</span>    <span class=\"c1\">// age:10</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. @RequestParam </font></strong></p>\n<ul>\n <li>\n <p>전달된 파라미터와 controller 내에서 사용할 파라미터의 변수명이 다를 경우 유용하게 사용된다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;\">예제</span></p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"nd\">@Log4j</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// 상단 생략</span>\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/requestparam\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getRequestParamExample</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"name\"</span><span class=\"o\">)</span> <span class=\"nc\">String</span> <span class=\"n\">myName</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"name:\"</span> <span class=\"o\">+</span> <span class=\"n\">myName</span><span class=\"o\">);</span> \t<span class=\"c1\">// name: A</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/requestparam?name=A</code> 로 호출 시, “name:A” 가 출력된다.</p>\n </li>\n</ul>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. 리스트, 배열 파라미터 처리하기</font></strong></p>\n<ul>\n <li>\n <p>동일한 이름의 파라미터가 여러개 전달 될 때, <code class=\"language-plaintext highlighter-rouge\">ArrayList&lt;&gt;</code> 나 <code class=\"language-plaintext highlighter-rouge\">배열</code> 객체로 받을 수 있다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;padding:5px;\">예제</span> <br />\n . <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/sample/list?ids=1&amp;ids=2&amp;ids=3</code> 처럼 ids 라는 파라미터가 여러개 전달 되었다고 가정하자.</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"nd\">@Log4j</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n      <span class=\"c1\">// 상단 생략</span>\n\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/list\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getListParameterExample</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"ids\"</span><span class=\"o\">)</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">ids</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"List ids:\"</span><span class=\"o\">+</span><span class=\"n\">ids</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n      <span class=\"c1\">// 출력] INFO : org.example.controller.SampleController - List ids:[1, 2, 3]</span>\n\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/array\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getArrayParameterExample</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"ids\"</span><span class=\"o\">)</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"n\">ids</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"Array ids:\"</span><span class=\"o\">+</span><span class=\"nc\">Arrays</span><span class=\"o\">.</span><span class=\"na\">deepToString</span><span class=\"o\">(</span><span class=\"n\">ids</span><span class=\"o\">));</span>\n      <span class=\"o\">}</span>\n      <span class=\"c1\">// 출력] INFO : org.example.controller.SampleController - Array ids:[1, 2, 3]</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. DTO객체 리스트 처리하기</font></strong></p>\n<ul>\n <li>\n <p>동일한 이름의 파라미터가 여러개 전달 될 때, <code class=\"language-plaintext highlighter-rouge\">dtoList.java</code> 객체를 생성하여 받을 수 있다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;padding:5px;\">예제</span> <br />\n . <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/sample/dtolist?list%5B0%5D.name=A&amp;list%5B0%5D.age=10&amp;list%5B1%5D.name=B&amp;list%5B1%5D.age=20</code> 처럼 SampleDTO 객체 파라미터가 여러개 전달 되었다고 가정하자.(encoding된 url.)</p>\n\n <p>( http://localhost:8080/sample/dtolist?list[0].name=A&amp;list[0].age=10&amp;list[1].name=B&amp;list[1].age=20 과 같음. )</p>\n\n <p>. SampleDTOList.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n  <span class=\"nd\">@Data</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleDTOList</span> <span class=\"o\">{</span>\n\n      <span class=\"kd\">private</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">SampleDTO</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span><span class=\"o\">;</span>\n        \n      <span class=\"kd\">public</span> <span class=\"nf\">SampleDTOList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n          <span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. SampleController.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n  <span class=\"nd\">@Log4j</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleController</span> <span class=\"o\">{</span>\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/dtolist\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getDtoListExample</span><span class=\"o\">(</span><span class=\"nc\">SampleDTOList</span> <span class=\"n\">list</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"dto list:\"</span> <span class=\"o\">+</span> <span class=\"n\">list</span><span class=\"o\">);</span>\n          <span class=\"c1\">// 출력 : INFO : org.example.controller.SampleController - dto list:SampleDTOList(list=[SampleDTO(name=A, age=10), SampleDTO(name=B, age=20)])</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-4. 날짜 포맷의 파라미터를 date 타입으로 받기.</font></strong></p>\n<ul>\n <li>\n <p>DTO 의 <code class=\"language-plaintext highlighter-rouge\">Date</code> 자료형으로 된 속성에 <code class=\"language-plaintext highlighter-rouge\">@DateTimeFormat(pattern=\"yyyy/mm/dd\")</code> 만 붙이면, 파라미터를 Date 형으로 받을 수 있다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;padding:5px;\">예제</span></p>\n\n <p>. TodoDTO.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Data</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">TodoDTO</span> <span class=\"o\">{</span>\n\n      <span class=\"nd\">@DateTimeFormat</span><span class=\"o\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s\">\"yyyy/mm/dd\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">dueDate</span><span class=\"o\">;</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. SampleController.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/date\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getDateParameterExample</span><span class=\"o\">(</span><span class=\"nc\">TodoDTO</span> <span class=\"n\">dto</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"date:\"</span> <span class=\"o\">+</span> <span class=\"n\">dto</span><span class=\"o\">.</span><span class=\"na\">getDueDate</span><span class=\"o\">());</span>\n\t\n      <span class=\"c1\">//[요청] http://localhost:8080/sample/date?dueDate=2020/01/01</span>\n      <span class=\"c1\">//[출력] INFO : org.example.controller.SampleController - date:Wed Jan 01 00:01:00 KST 2020</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"4-화면으로-데이터-전달하기---dto-model-객체-modelattribute-redirectattributes\"><font color=\"blue\">4. 화면으로 데이터 전달하기 - DTO, Model 객체, @ModelAttribute, RedirectAttributes</font></h2>\n<p><strong><font color=\"green\" style=\"font-size:large;\">4-1. Model 객체</font></strong></p>\n<ul>\n <li>메소드의 파라미터로 선언하면, 자동으로 객체가 생성된다.</li>\n <li>\n <p>controller 에서 새롭게 처리한 데이터를 화면으로 전달할 때 사용한다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;padding:5px;\">예제</span></p>\n\n <p>. SampleController.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modelExample\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">modelExample</span><span class=\"o\">(</span><span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"test\"</span><span class=\"o\">,</span> <span class=\"s\">\"Success!!\"</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n <p>. modelExample.jsp</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n  <span class=\"nt\">&lt;%@ page </span><span class=\"na\">session=</span><span class=\"s\">\"false\"</span> <span class=\"nt\">%&gt;</span>\n  <span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"nt\">&lt;P&gt;</span>  ${test} <span class=\"nt\">&lt;/P&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n  <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">4-2. @ModelAttribute 애노테이션</font></strong></p>\n<ul>\n <li>DTO 의 경우, 자동으로 화면으로 전달 된다. ( 첫 대문자가 소문자로 바뀌어 전달됨. )</li>\n <li>그러나, 전달 받은 기본 자료형 (int, string…) 의 경우, 별도의 처리를 하지않으면 자동으로 화면으로 전달되지 않는다.</li>\n <li>\n <p>@ModelAttribute 어노테이션은 기본자료형도 자동으로 화면까지 전달 해주는 기능을 한다.</p>\n\n <p><span style=\"background-color:#b5d6f7; display:inline-block; width:100%;padding:5px;\">예제</span></p>\n\n <p>. SampleDTO.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Data</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SampleDTO</span> <span class=\"o\">{</span>\n      <span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">name</span><span class=\"o\">;</span>\n      <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">age</span><span class=\"o\">;</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. SampleController.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modelAttributeExample\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">modelAttributeExample</span><span class=\"o\">(</span><span class=\"nc\">SampleDTO</span> <span class=\"n\">dto</span><span class=\"o\">,</span> <span class=\"nd\">@ModelAttribute</span><span class=\"o\">(</span><span class=\"s\">\"page\"</span><span class=\"o\">)</span> <span class=\"kt\">int</span> <span class=\"n\">page</span><span class=\"o\">)</span> <span class=\"o\">{</span>\t\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>. modelAttributeExample.jsp</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n      pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n  <span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n  <span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"nt\">&lt;p&gt;</span>SampleDTO : ${sampleDTO} <span class=\"nt\">&lt;/p&gt;</span>\n  <span class=\"nt\">&lt;p&gt;</span>Page : ${page}<span class=\"nt\">&lt;/p&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n  <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n\n <p>. 결과화면\n <img src=\"/assets/images/modelAttribute_example.png\" alt=\"modelAttribute 결과 화면\" /></p>\n </li>\n</ul>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">4-3. RedirectAttributes</font></strong></p>\n<ul>\n <li>일회성으로 데이터를 전달하는 용도.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/register\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span> <span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"5-controller의-반환-타입---dto-void-string-responseentity-model\"><font color=\"blue\">5. Controller의 반환 타입 - DTO, void, string, ResponseEntity, Model</font></h2>\n<p><strong><font color=\"green\" style=\"font-size:large;\">5-1. void 타입</font></strong></p>\n<ul>\n <li>\n <p>해당 URL 그대로 jsp 이름으로 사용</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"voidSample\"</span><span class=\"o\">)</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">voidSample</span><span class=\"o\">(){</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>-&gt; voidSample.jsp 응답함.</p>\n </li>\n</ul>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">5-2. String 타입</font></strong></p>\n<ul>\n <li>jsp 이름을 리턴함.</li>\n <li>특별한 키워드를 붙여서 사용할 수 있음.\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">\"redirect:home\"</code></li>\n <li><code class=\"language-plaintext highlighter-rouge\">forward:home\"</code></li>\n </ul>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nd\">@Controller</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">HomeController</span> <span class=\"o\">{</span>\n\n      <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">home</span><span class=\"o\">(</span><span class=\"nc\">Locale</span> <span class=\"n\">locale</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"nc\">Date</span> <span class=\"n\">date</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Date</span><span class=\"o\">();</span>\n          <span class=\"nc\">DateFormat</span> <span class=\"n\">dateFormat</span> <span class=\"o\">=</span> <span class=\"nc\">DateFormat</span><span class=\"o\">.</span><span class=\"na\">getDateTimeInstance</span><span class=\"o\">(</span><span class=\"nc\">DateFormat</span><span class=\"o\">.</span><span class=\"na\">LONG</span><span class=\"o\">,</span> <span class=\"nc\">DateFormat</span><span class=\"o\">.</span><span class=\"na\">LONG</span><span class=\"o\">,</span> <span class=\"n\">locale</span><span class=\"o\">);</span>\n          <span class=\"nc\">String</span> <span class=\"n\">formattedDate</span> <span class=\"o\">=</span> <span class=\"n\">dateFormat</span><span class=\"o\">.</span><span class=\"na\">format</span><span class=\"o\">(</span><span class=\"n\">date</span><span class=\"o\">);</span>\n          <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"serverTime\"</span><span class=\"o\">,</span> <span class=\"n\">formattedDate</span> <span class=\"o\">);</span>\n          <span class=\"k\">return</span> <span class=\"s\">\"home\"</span><span class=\"o\">;</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n\n <p>-&gt; home.jsp 로 응답함.</p>\n </li>\n</ul>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">5-3. 객체 타입 (Json 변환)</font></strong></p>\n<ul>\n <li>VO나 DTO 타입등 객체 타입을 리턴 할 수 있는데, 이 경우 <code class=\"language-plaintext highlighter-rouge\">JSON 데이터를 만들어 내는 용도</code>로 사용함.</li>\n <li>HttpResponse 객체를 전달함으로 화면으로 전달하지 않음. ajax와 함께 쓰임</li>\n</ul>\n\n<ol>\n <li>\n <p>JSON 데이터로 변환하는 준비 : <code class=\"language-plaintext highlighter-rouge\">jackson-databind</code></p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>jackson-databind<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.11.3<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>메소드의 리턴타입에 @ResponseBody 어노테이션 붙이고 객체 리턴하기</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"returnJsonExample\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"nd\">@ResponseBody</span> <span class=\"nc\">SampleDTO</span> <span class=\"nf\">returnJsonExample</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n     <span class=\"nc\">SampleDTO</span> <span class=\"n\">dto</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SampleDTO</span><span class=\"o\">();</span>\n     <span class=\"n\">dto</span><span class=\"o\">.</span><span class=\"na\">setName</span><span class=\"o\">(</span><span class=\"s\">\"홍길동\"</span><span class=\"o\">);</span>\n     <span class=\"n\">dto</span><span class=\"o\">.</span><span class=\"na\">setAge</span><span class=\"o\">(</span><span class=\"mi\">10</span><span class=\"o\">);</span>\n\t\t\n     <span class=\"k\">return</span> <span class=\"n\">dto</span><span class=\"o\">;</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>실행 확인 : <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/returnJsonExample</code></p>\n\n <p><img src=\"/assets/images/returnJsonExample.png\" alt=\"객체를Json으로리턴\" /></p>\n </li>\n</ol>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">5-4. ResponseEntity 타입</font></strong></p>\n<ul>\n <li>HTTP의 <code class=\"language-plaintext highlighter-rouge\">Header</code> 정보나 데이터를 전달하기 위해 사용</li>\n <li>HttpResponse 객체를 전달함으로 화면으로 전달하지 않음. ajax와 함께 쓰임</li>\n</ul>\n\n<ol>\n <li>\n <p>ResponseEntity 리턴 예제</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"returnResponseEntityExample\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">returnResponseEntityExample</span><span class=\"o\">(){</span>\n        \n     <span class=\"nc\">String</span> <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s\">\"{\\\"name\\\":\\\"홍길동\\\"}\"</span><span class=\"o\">;</span>\n     <span class=\"nc\">HttpHeaders</span> <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HttpHeaders</span><span class=\"o\">();</span>\n     <span class=\"n\">header</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"s\">\"Content-Type\"</span><span class=\"o\">,</span> <span class=\"s\">\"application/json;charset=UTF-8\"</span><span class=\"o\">);</span>\n     <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">msg</span><span class=\"o\">,</span> <span class=\"n\">header</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">);</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>실행화면</p>\n\n <p><img src=\"/assets/images/returnResponseEntityExample.png\" alt=\"ResponseEntity 리턴\" /></p>\n </li>\n</ol>\n\n<hr />\n\n<h2 id=\"6-파일-업로드-servlet30\"><font color=\"blue\">6. 파일 업로드 (servlet3.0)</font></h2>\n<ul>\n <li>Servlet3.0 이상에서는 기본적으로 파일업로드 기능 제공.</li>\n <li>Servlet3.0 이전 버전에서는 commons-fileupload, cos.jar 등의 라이브러리가 필요함</li>\n <li>이번 예제는, <code class=\"language-plaintext highlighter-rouge\">commons-fileupload</code> 라이브러리를 사용하도록 하겠음.</li>\n</ul>\n\n<ol>\n <li>\n <p>commons-fileupload 라이브러리 설치</p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>      <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span>\n     <span class=\"nt\">&lt;dependency&gt;</span>\n         <span class=\"nt\">&lt;groupId&gt;</span>commons-fileupload<span class=\"nt\">&lt;/groupId&gt;</span>\n         <span class=\"nt\">&lt;artifactId&gt;</span>commons-fileupload<span class=\"nt\">&lt;/artifactId&gt;</span>\n         <span class=\"nt\">&lt;version&gt;</span>1.3.3<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>파일 업로드 할 임시 폴더 생성 : /Users/kim-yunmi/fileupload/tmp</li>\n <li>servlet-context.xml 또는 ServletConfig.java 에 <code class=\"language-plaintext highlighter-rouge\">MultipartResolver</code> (파일업로드)에 대한 설정하기\n <ul>\n <li>\n <p>ServletConfig.java</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n  <span class=\"nd\">@EnableWebMvc</span>\n  <span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.controller\"</span><span class=\"o\">})</span>\n  <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ServletConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">WebMvcConfigurer</span> <span class=\"o\">{</span>\n      <span class=\"c1\">//  상단 생략.</span>\n\n      <span class=\"nd\">@Bean</span><span class=\"o\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"multipartResolver\"</span><span class=\"o\">)</span>\n      <span class=\"kd\">public</span> <span class=\"nc\">CommonsMultipartResolver</span> <span class=\"nf\">getResolver</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span><span class=\"o\">{</span>\n            \n          <span class=\"nc\">CommonsMultipartResolver</span> <span class=\"n\">resolver</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">CommonsMultipartResolver</span><span class=\"o\">();</span>    \n          <span class=\"c1\">// 10MB</span>\n          <span class=\"n\">resolver</span><span class=\"o\">.</span><span class=\"na\">setMaxUploadSize</span><span class=\"o\">(</span><span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">10</span><span class=\"o\">);</span>\n          <span class=\"c1\">// 2MB</span>\n          <span class=\"n\">resolver</span><span class=\"o\">.</span><span class=\"na\">setMaxUploadSizePerFile</span><span class=\"o\">(</span><span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">1024</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n          <span class=\"c1\">// 임시 폴더 </span>\n          <span class=\"n\">resolver</span><span class=\"o\">.</span><span class=\"na\">setUploadTempDir</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">FileSystemResource</span><span class=\"o\">(</span><span class=\"s\">\"/Users/kim-yunmi/fileupload/tmp\"</span><span class=\"o\">));</span>\n          <span class=\"n\">resolver</span><span class=\"o\">.</span><span class=\"na\">setD</span>   <span class=\"nf\">efaultEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n          <span class=\"k\">return</span> <span class=\"n\">resolver</span><span class=\"o\">;</span>\n      <span class=\"o\">}</span> \n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>servlet-context.xml (<code class=\"language-plaintext highlighter-rouge\">bean id는 꼭 \"multipartResolver\" 여야 함.</code>)</p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nt\">&lt;beans:bean</span> <span class=\"na\">id=</span><span class=\"s\">\"multipartResolver\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;beans:property</span> <span class=\"na\">name=</span><span class=\"s\">\"defaultEncoding\"</span> <span class=\"na\">value=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;&lt;/beans:property&gt;</span>\n      <span class=\"nt\">&lt;beans:property</span> <span class=\"na\">name=</span><span class=\"s\">\"maxUploadSize\"</span> <span class=\"na\">value=</span><span class=\"s\">\"104857560\"</span><span class=\"nt\">&gt;&lt;/beans:property&gt;</span>\n      <span class=\"nt\">&lt;beans:property</span> <span class=\"na\">name=</span><span class=\"s\">\"maxUploadSizePerFile\"</span> <span class=\"na\">value=</span><span class=\"s\">\"2097152\"</span><span class=\"nt\">&gt;&lt;/beans:property&gt;</span>\n      <span class=\"nt\">&lt;beans:property</span> <span class=\"na\">name=</span><span class=\"s\">\"uploadTempDir\"</span> <span class=\"na\">value=</span><span class=\"s\">\"file:/Users/kim-yunmi/fileupload/tmp\"</span><span class=\"nt\">&gt;&lt;/beans:property&gt;</span>\n      <span class=\"nt\">&lt;beans:property</span> <span class=\"na\">name=</span><span class=\"s\">\"maxInMemorySize\"</span> <span class=\"na\">value=</span><span class=\"s\">\"10485756\"</span><span class=\"nt\">&gt;&lt;/beans:property&gt;</span>\n  <span class=\"nt\">&lt;/beans:bean&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>uploadTempDir 의 경로는, URL 형식으로 하여야 하므로 ‘file:’ 로 시작함</p>\n </li>\n </ul>\n </li>\n <li>\n <p>SampleController.java : 파일 업로드 화면으로 이동할 GET 방식의 Controller</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> \t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/uploadExample\"</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">uploadExampleGet</span><span class=\"o\">()</span> <span class=\"o\">{</span>\t\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>uploadExample.jsp : 파일 업로드 화면</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n     pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n <span class=\"nt\">&lt;html&gt;</span>\n <span class=\"nt\">&lt;head&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;title&gt;</span>fileUpload Example<span class=\"nt\">&lt;/title&gt;</span>\n <span class=\"nt\">&lt;/head&gt;</span>\n <span class=\"nt\">&lt;body&gt;</span>\n     <span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">\"uploadExample\"</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span> <span class=\"na\">enctype=</span><span class=\"s\">\"multipart/form-data\"</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"file\"</span> <span class=\"na\">name=</span><span class=\"s\">\"files\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"file\"</span> <span class=\"na\">name=</span><span class=\"s\">\"files\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"file\"</span> <span class=\"na\">name=</span><span class=\"s\">\"files\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"file\"</span> <span class=\"na\">name=</span><span class=\"s\">\"files\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"file\"</span> <span class=\"na\">name=</span><span class=\"s\">\"files\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;div&gt;&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n     <span class=\"nt\">&lt;/form&gt;</span>\n <span class=\"nt\">&lt;/body&gt;</span>\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>SampleController.java : 파일 업로드를 처리할 Post 방식의 컨트롤러</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\">// 파일업로드 처리 </span>\n <span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/uploadExample\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">uploadExamplePost</span><span class=\"o\">(</span><span class=\"nc\">ArrayList</span><span class=\"o\">&lt;</span><span class=\"nc\">MultipartFile</span><span class=\"o\">&gt;</span> <span class=\"n\">files</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n     <span class=\"n\">files</span><span class=\"o\">.</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">file</span> <span class=\"o\">-&gt;</span> <span class=\"o\">{</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"-------------------\"</span><span class=\"o\">);</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"fileName:\"</span> <span class=\"o\">+</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"na\">getOriginalFilename</span><span class=\"o\">());</span>\n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"size:\"</span> <span class=\"o\">+</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"na\">getSize</span><span class=\"o\">());</span>\n         <span class=\"c1\">// 파일을 업로드 처리할 코드 작성. (여기서는 넘어감.)</span>\n     <span class=\"o\">});</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"7-controller의-예외처리---controlleradvice-exceptionhandler\"><font color=\"blue\">7. Controller의 예외처리 - @ControllerAdvice, @ExceptionHandler</font></h2>\n<ul>\n <li>@ExceptionHandler와 @ControllerAdvice 이용한 처리</li>\n <li>@ResponseEntity를 이용한 예외 메시지 전달</li>\n</ul>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.exception</code> 패키지 생성한다.</li>\n <li>Java Configuration일 경우, <code class=\"language-plaintext highlighter-rouge\">ServletConfig.java</code> 의 @ComponentScan 에 “org.example.exception” 패키지를 추가한다.</li>\n <li>XML 설정일 경우, <code class=\"language-plaintext highlighter-rouge\">servlet-context.xml</code> 에 <code class=\"language-plaintext highlighter-rouge\">&lt;context:component-scan base-package=\"org.example.exception\"/&gt;</code> 을 추가한다.</li>\n</ol>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">7-1. 서버에러 (500에러) 처리</font></strong></p>\n<ol>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">CommonExceptionAdvice.java</code> : 예외 처리 객체 생성</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@ControllerAdvice</span>\n <span class=\"nd\">@Log4j</span>\n <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CommonExceptionAdvice</span> <span class=\"o\">{</span>\n        \n     <span class=\"nd\">@ExceptionHandler</span><span class=\"o\">(</span><span class=\"nc\">Exception</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">except</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">ex</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            \n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">error</span><span class=\"o\">(</span><span class=\"s\">\"Exception:\"</span><span class=\"o\">+</span><span class=\"n\">ex</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n         <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"exception\"</span><span class=\"o\">,</span> <span class=\"n\">ex</span><span class=\"o\">);</span>\n            \n         <span class=\"k\">return</span> <span class=\"s\">\"error/error_page\"</span><span class=\"o\">;</span>\n     <span class=\"o\">}</span>\n        \n     <span class=\"nd\">@ExceptionHandler</span><span class=\"o\">(</span><span class=\"nc\">BeanExpressionException</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">beanExcept</span><span class=\"o\">(</span><span class=\"nc\">BeanExpressionException</span> <span class=\"n\">ex</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            \n         <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">error</span><span class=\"o\">(</span><span class=\"s\">\"BeanExpressionException:\"</span><span class=\"o\">+</span><span class=\"n\">ex</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n         <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"exception\"</span><span class=\"o\">,</span> <span class=\"n\">ex</span><span class=\"o\">);</span>\n            \n         <span class=\"k\">return</span> <span class=\"s\">\"error/bean_error_page\"</span><span class=\"o\">;</span>\n     <span class=\"o\">}</span>   \n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n <ul>\n <li>클래스에 @ControllerAdvice 를 붙인다.</li>\n <li>메소드에 @ExceptionHandler 를 붙이고, () 안에 처리할 Exception 클래스를 넣는다. 이 때 <code class=\"language-plaintext highlighter-rouge\">Exception.class</code> 대신 구체적인 예외 클래스를 지정할 수 있다.</li>\n </ul>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">error/error_page.jsp</code>, <code class=\"language-plaintext highlighter-rouge\">error/bean_error_page.jsp</code> : 예외정보를 보여줄 화면 작성 (WEB-INF/views/error 폴더 하위에 jsp를 작성한다. except() 메소드가 “error/error_page” 를 리턴하였기 때문이다.)</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ page </span><span class=\"na\">session=</span><span class=\"s\">\"false\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;html&gt;</span>\n <span class=\"nt\">&lt;head&gt;</span>\n     <span class=\"nt\">&lt;title&gt;</span>Internal Server Error<span class=\"nt\">&lt;/title&gt;</span>\n <span class=\"nt\">&lt;/head&gt;</span>\n <span class=\"nt\">&lt;body&gt;</span>\n <span class=\"nt\">&lt;h1&gt;</span>\n     Internal Server Error!\n <span class=\"nt\">&lt;/h1&gt;</span>\n ${exception}\n <span class=\"nt\">&lt;/body&gt;</span>\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">SampleController.java</code> : 예외처리 테스트를 위해서, 강제로 예외를 던지는 controller를 작성한다.</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c1\">// 에러발생 테스트 1</span>\n <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/throwErrors\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">exceptionTest</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n     <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">Exception</span><span class=\"o\">(</span><span class=\"s\">\"Exception message\"</span><span class=\"o\">);</span>\n <span class=\"o\">}</span>\n    \n <span class=\"c1\">// 에러발생 테스트 2</span>\n <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/throwBeanErrors\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">beanExceptionTest</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">BeanExpressionException</span> <span class=\"o\">{</span>\n     <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nf\">BeanExpressionException</span><span class=\"o\">(</span><span class=\"s\">\"BeanExpressionException message\"</span><span class=\"o\">);</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/sample/throwErrors</code> 를 호출하면, except() 에서 예외를 처리하고 error_page.jsp 예외화면이 발생한다.</p>\n\n <p><img src=\"/assets/images/error_page.png\" alt=\"예외처리1\" /></p>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/sample/throwBeanErrors</code> 를 호출하면, beanExcept() 에서 예외를 처리하고 bean_error_page.jsp 예외화면이 발생한다.</p>\n\n <p><img src=\"/assets/images/bean_error_page.png\" alt=\"예외처리2\" /></p>\n </li>\n</ol>\n\n<hr />\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">7-2. 404 에러 처리</font></strong></p>\n<ol>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">web.xml</code> 또는 <code class=\"language-plaintext highlighter-rouge\">WebConfig.java</code> 에 404 에러처리를 위한 설정을 할 수 있다. (Servlet 3.0 이상)</p>\n\n <p>. web.xml</p>\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;servlet&gt;</span>\n <span class=\"c\">&lt;!-- 상단생략 --&gt;</span>\n <span class=\"nt\">&lt;init-param&gt;</span>\n     <span class=\"nt\">&lt;param-name&gt;</span>throwExceptionIfNoHandlerFound<span class=\"nt\">&lt;/param-name&gt;</span>\n     <span class=\"nt\">&lt;param-value&gt;</span>true<span class=\"nt\">&lt;/param-value&gt;</span>\n <span class=\"nt\">&lt;/init-param&gt;</span>\n <span class=\"nt\">&lt;load-on-startup&gt;</span>1<span class=\"nt\">&lt;/load-on-startup&gt;</span>\n <span class=\"nt\">&lt;/servlet&gt;</span>\n</code></pre>  </div> </div>\n <p>. WebConfig.java</p>\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">WebConfig</span> <span class=\"kd\">extends</span>\n <span class=\"nc\">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class=\"o\">{</span>\n <span class=\"c1\">// 상단 생략</span>\n     <span class=\"nd\">@Override</span>\n     <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">customizeRegistration</span><span class=\"o\">(</span><span class=\"nc\">Dynamic</span> <span class=\"n\">registration</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n         <span class=\"c1\">// TODO Auto-generated method stub</span>\n         <span class=\"n\">registration</span><span class=\"o\">.</span><span class=\"na\">setInitParameter</span><span class=\"o\">(</span><span class=\"s\">\"throwExceptionIfNoHandlerFound\"</span><span class=\"o\">,</span> <span class=\"s\">\"true\"</span><span class=\"o\">);</span>\n     <span class=\"o\">}</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">CommonExceptionAdvice.java</code> 클래스에 404에러 처리를 위한 메소드를 작성한다.</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@ControllerAdvice</span>\n <span class=\"nd\">@Log4j</span>\n <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CommonExceptionAdvice</span> <span class=\"o\">{</span>\n        \n     <span class=\"c1\">// 상단 생략</span>\n     <span class=\"nd\">@ExceptionHandler</span><span class=\"o\">(</span><span class=\"nc\">NoHandlerFoundException</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n     <span class=\"nd\">@ResponseStatus</span><span class=\"o\">(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">NOT_FOUND</span><span class=\"o\">)</span>\n     <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">handle404</span><span class=\"o\">(</span><span class=\"nc\">NoHandlerFoundException</span> <span class=\"n\">ex</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            \n         <span class=\"k\">return</span> <span class=\"s\">\"error/custom404\"</span><span class=\"o\">;</span>\n     <span class=\"o\">}</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">error/custom404.jsp</code> : 404에러를 보여줄 화면을 작성한다.</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"na\"> session=</span><span class=\"s\">\"false\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;html&gt;</span>\n <span class=\"nt\">&lt;head&gt;</span>\n     <span class=\"nt\">&lt;title&gt;</span>Page Not Found!<span class=\"nt\">&lt;/title&gt;</span>\n     <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;/head&gt;</span>\n <span class=\"nt\">&lt;body&gt;</span>\n <span class=\"nt\">&lt;h1&gt;</span>\n     해당 URL은 존재하지 않습니다.\n <span class=\"nt\">&lt;/h1&gt;</span>\n <span class=\"nt\">&lt;/body&gt;</span>\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" session=\"false\" %&gt;</code> 를 작성해야 한글이 깨지지 않는다.</li>\n </ul>\n </li>\n <li>\n <p>웹 브라우저에 <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/test</code> 를 호출하여 404 에러처리를 확인한다.<br />(/sample/** 의 패턴을 사용하면 SampleController 가 동작해 버리므로, 404 확인을 위해서는 사용하면 안됨.)</p>\n\n <p><img src=\"/assets/images/custom404.png\" alt=\"404error\" /></p>\n </li>\n</ol>\n","dir":"/spring5/2_mvc/","name":"controller.md","path":"spring5/2_mvc/controller.md","url":"/spring5/2_mvc/controller.html"},{"sort":2,"layout":"default","title":"운영 서버 적용 전 장고의 설정 변경 사항","content":"# 운영 서버 적용 전 장고의 설정 변경 사항\n\n## 1. 운영서버에 필요한 항목이 잘 설정되었는지 체크하는 명령어\n`$python manage.py check --deploy`\n\n## 2. settings.py의 SECRET_KEY\n\n- 운영모드에서는 settings.py 파일에 하드코딩된 SECRET_KEY 를 **환경변수**에 저장하거나 **파일에 저장**하여 그 경로를 settings.py 파일에 적어준다.\n```python\nimport os\nSECRET_KEY = os.environ['SECRET_KEY']\n# 또는,\nwith open (os.path.join(BASE_DIR, 'www_dir', 'secret_key.txt')) as f:\n SECRET_KEY = f.read().strip()\n```\n\n## 3. settigns.py의 DEBUG 모드\n\n- 운영모드에서는 settings.py 파일의 DEBUG 모드를 **False**로 변경한다.\n\n## 4. settigns.py의 ALLOWED_HOSTS 항목\n\n- 운영모드에서는 장고가 실행되는 서버의 IP 주소나 도메인을 등록한다.\n\n## 5. settings.py 파일의 STATIC_ROOT 항목과 collectstatic 명령\n\n- 운영모드에서는 웹서버에게 정적파일의 위치를 알려주어야 한다.\n- settings.py 파일의 'STATIC_ROOT' 항목은 `collectstatic` 명령 실행 시, 정적파일을 한곳에 모아주는 디렉토리 임\n```python\nSTATIC_ROOT = os.path.join(BASE_DIR, 'www_dir', 'static')\n```\n- 이 디렉토리는 웹 서버의 설정 파일에도 등록해야 함\n + Apache의 경우, httpd.conf의 Alias/static/ 항목에 등록\n\n- collectstatic 명령 실행\n + <font color='red'>주의!</font>\n - settings.py의 STATICFILES_DIRS 항목에 STATIC_ROOT 항목에 정의된 디렉토리는 없어야 함\n - collectstatic 명령 시, STATICFILES_DIRS 항목에 정의된 디렉토리의 정적파일을 모아서, STATIC_ROOT에 복사해 주기 때문\n\n```console\n$ python manage.py collectstatic\n```\n\n## 6. settings.py의 DATABASES NAME 항목과 접근권한\n\n1. settings.py 파일의 DATABASES의 NAME 속성값의 경로를 **db/db.sqlist3**으로 변경\n```python\nDATABASES = {\n 'NAME' : os.path.join(BASE_DIR, 'db', 'db.sqlite3')\n}\n```\n\n2. DATABASE 디렉토리 및 파일의 접근권한 설정 ( 웹서버가 rw 할 수 있도록 )\n```console\nch3 > mkdir db\nch3 > mv db.sqlite3 db/\nch3 > chmod 777 db/\nch3 > chmod 666 db/db.sqlite3 \n```\n\n## 7. settings.py의 LOGGING 항목과 로그파일 위치 접근권한\n- settings.py 파일의 LOGGING 항목에 로그파일 위치가 정의되어 있음\n- 웹 서버가 로그파일에 접근 할 수 있도록 접근권한 설정\n```console\nch3 >chmod 777 logs/\nch3 >chmod 666 logs/mysite.log\n```\n## 8. 캐시서버와 데이터베이스 서버의 접속 PASSWORD 다른곳에 저장\n- SECRET_KEY 처럼, settings.py 파일에 하드코딩된 비밀번호를 다른 곳에 저장\n\n## 9. 메일발송 기능이 있을 경우, SERVER_EMAIL 및 DEFAULT_FROM_EMAIL 항목 설정\n- 발신자 주소를 root@localhost 및 webmaster@localhost 로 지정\n ","dir":"/python/DjangoWebServerConfig/","name":"jangoSettingCheckListInProductMode.md","path":"python/DjangoWebServerConfig/jangoSettingCheckListInProductMode.md","url":"/python/DjangoWebServerConfig/jangoSettingCheckListInProductMode.html"},{"sort":2,"layout":"default","title":"로그인과 로그아웃 처리 (security-context 설정과 로그인 관련 Handler 사용법)","content":"<h1 id=\"로그인과-로그아웃-처리-security-context-설정과-로그인-관련-handler-사용법\">로그인과 로그아웃 처리 (security-context 설정과 로그인 관련 Handler 사용법)</h1>\n\n<h2 id=\"1-접근제한-설정\"><font color=\"blue\">1. 접근제한 설정</font></h2>\n<p>. security-context.xml 에 설정 <br />\n. <code class=\"language-plaintext highlighter-rouge\">security:intercept-url</code> 네임스페이스 사용</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\t<span class=\"nt\">&lt;security:http&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/all\"</span> <span class=\"na\">access=</span><span class=\"s\">\"permitAll\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/member\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_MEMBER')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/admin\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_ADMIN')\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/security:http&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\"># access 속성을 표현하는 두가지 방법</font></strong></p>\n\n<ol>\n <li>표현식 : 위와 같이 기본설정이 표현식이다.</li>\n <li>권한명 의미하는 문자열</li>\n</ol>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http</span> <span class=\"na\">auto-config=</span><span class=\"s\">\"true\"</span> <span class=\"na\">use-expressions=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/member\"</span> <span class=\"na\">access=</span><span class=\"s\">\"ROLE_MEMBER\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/manager\"</span> <span class=\"na\">access=</span><span class=\"s\">\"ROLE_MANAGER\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/admin\"</span> <span class=\"na\">access=</span><span class=\"s\">\"ROLE_ADMIN\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-사용자-접근-에러-메시지-처리\"><font color=\"blue\">2. 사용자 접근 에러 메시지 처리</font></h2>\n<blockquote>\n <p>권한이 없는 사용자가 페이지에 접근했을 때, 에러 페이지를 보여주는 페이지</p>\n</blockquote>\n\n<p>테스트를 위해서 사용자 정보를 하드코딩 한 후, 알아보자.</p>\n\n<p>. security-context.xml</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n        <span class=\"nt\">&lt;security:authentication-provider&gt;</span>\n            <span class=\"nt\">&lt;security:user-service&gt;</span>\n                <span class=\"nt\">&lt;security:user</span> <span class=\"na\">name=</span><span class=\"s\">\"member\"</span> <span class=\"na\">password=</span><span class=\"s\">\"{noop}member\"</span> <span class=\"na\">authorities=</span><span class=\"s\">\"ROLE_MEMBER\"</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;security:user</span> <span class=\"na\">name=</span><span class=\"s\">\"admin\"</span> <span class=\"na\">password=</span><span class=\"s\">\"{noop}admin\"</span> <span class=\"na\">authorities=</span><span class=\"s\">\"ROLE_MEMBER, ROLE_ADMIN\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/security:user-service&gt;</span>\n        <span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n    <span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n</code></pre>  </div></div>\n\n<p>스프링5에서는 <code class=\"language-plaintext highlighter-rouge\">PasswordEncoder</code>를 꼭 사용해야 하지만, 지금은 테스트를 위해서 PasswordEncoder를 사용하지 않고 사용자들 등록할 수 있도록 ‘password’앞에 <code class=\"language-plaintext highlighter-rouge\">'{noop}'</code>을 붙여준다.</p>\n\n<p>권한이 없는 사용자가 페이지 접근시 에러메시지를 설정하는 방법에는 두가지가 있다.</p>\n\n<p><strong>첫번째는</strong>, security-context.xml의 <code class=\"language-plaintext highlighter-rouge\">security:access-denied-handler</code> 네임스페이스의 <code class=\"language-plaintext highlighter-rouge\">error-page</code> 속성을 이용하는 방법이다.</p>\n\n<p>. security-context.xml에 속성을 추가한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http&gt;</span>\n    <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;security:access-denied-handler</span> <span class=\"na\">error-page=</span><span class=\"s\">\"/accessError\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p>. CommonController 에 <code class=\"language-plaintext highlighter-rouge\">/accessError</code> 링크에 대한 처리 메소드를 작성한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Controller</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CommonController</span> <span class=\"o\">{</span>\n\n    <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/accessError\"</span><span class=\"o\">)</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">accessDenied</span><span class=\"o\">(</span><span class=\"nc\">Authentication</span> <span class=\"n\">auth</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"access Denied : \"</span> <span class=\"o\">+</span> <span class=\"n\">auth</span><span class=\"o\">);</span>\n        <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"msg\"</span><span class=\"o\">,</span> <span class=\"s\">\"Access Denied!\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>. ‘/accessError’ 의 뷰 ‘views/accessError.jsp’ 를 작성한다.</p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n    pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1&gt;</span>Access Denied Page<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;h2&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"no\">SPRING_SECURITY_403_EXCEPTION</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">()</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;&lt;/h2&gt;</span>\n    <span class=\"nt\">&lt;h2&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">msg</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;&lt;/h2&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div></div>\n<hr />\n<p><strong>두번째는</strong>, security-context.xml 의 <code class=\"language-plaintext highlighter-rouge\">ref</code> 속성을 이용한다. <br />\n접속거부를 담당하는 <code class=\"language-plaintext highlighter-rouge\">AccessDeniedHandler 인터페이스</code>를 구현하는 구현체 <code class=\"language-plaintext highlighter-rouge\">CustomAccessDeniedHandler</code>를 작성해 Bean 으로 등록 후, <br />\n<code class=\"language-plaintext highlighter-rouge\">security:access-denied-handler</code> 네임스페이스의 ref 속성에 구현체의 id를 입력한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customAccessDenied\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomAccessDeniedHandler\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span> \n<span class=\"nt\">&lt;security:http&gt;</span>\n    <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;security:access-denied-handler</span> <span class=\"na\">ref=</span><span class=\"s\">\"customAccessDenied\"</span><span class=\"nt\">/&gt;</span>  \n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p>빈으로 등록했던 구현체 <code class=\"language-plaintext highlighter-rouge\">CustomAccessDeniedHandler.java</code>를 <code class=\"language-plaintext highlighter-rouge\">org.example.security</code> 패키지에 작성한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CustomAccessDeniedHandler</span> <span class=\"kd\">implements</span> <span class=\"nc\">AccessDeniedHandler</span><span class=\"o\">{</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">handle</span><span class=\"o\">(</span><span class=\"nc\">HttpServletRequest</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"nc\">HttpServletResponse</span> <span class=\"n\">response</span><span class=\"o\">,</span>\n            <span class=\"nc\">AccessDeniedException</span> <span class=\"n\">accessDeniedException</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span><span class=\"o\">,</span> <span class=\"nc\">ServletException</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// TODO Auto-generated method stub</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">error</span><span class=\"o\">(</span><span class=\"s\">\"Access Denied Handler\"</span><span class=\"o\">);</span>\n        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">error</span><span class=\"o\">(</span><span class=\"s\">\"Redirect...\"</span><span class=\"o\">);</span>\n            \n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">sendRedirect</span><span class=\"o\">(</span><span class=\"s\">\"/accessError\"</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>나머지 Controller와 뷰 코딩은 첫번째와 동일하다.</p>\n\n<h2 id=\"3-커스텀-로그인-페이지\"><font color=\"blue\">3. 커스텀 로그인 페이지</font></h2>\n<blockquote>\n <p>기본적으로 스프링이 로그인 폼을 제공하고, 처리도 해준다. 하지만 사용자가 원하는 폼과 서비스를 위해 커스터마이징 할 수 있다.</p>\n</blockquote>\n\n<p>. 로그아웃 기능이 아직 미구현이므로, 로그아웃 상태를 만들기 위해 브라우저 개발도구 &gt; Application &gt; Cookie &gt; SESSIONID 를 삭제한다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">security-context.xml</code>의 <code class=\"language-plaintext highlighter-rouge\">security:form-login</code> 네임스페이스에 직접 로그인 URL을 지정할 수 있다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"c\">&lt;!-- form-login 네임스페이스에 로그인 처리할 링크를 지정한다. --&gt;</span>\n    <span class=\"nt\">&lt;security:form-login</span> <span class=\"na\">login-page=</span><span class=\"s\">\"/customLogin\"</span> <span class=\"na\">authentication-success-handler-ref=</span><span class=\"s\">\"customLoginSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\t\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">login-page</code>에 연결된 URL을 코딩한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.extern.log4j.Log4j</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Controller</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CommonController</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/accessError\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">accessDenied</span><span class=\"o\">(</span><span class=\"nc\">Authentication</span> <span class=\"n\">auth</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"access Denied : \"</span> <span class=\"o\">+</span> <span class=\"n\">auth</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"msg\"</span><span class=\"o\">,</span> <span class=\"s\">\"Access Denied!\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n    <span class=\"c1\">// 커스텀 로그인 페이지 </span>\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/customLogin\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">customLogin</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">error</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">logout</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"error:\"</span> <span class=\"o\">+</span> <span class=\"n\">error</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"logout:\"</span> <span class=\"o\">+</span> <span class=\"n\">logout</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">error</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"error\"</span><span class=\"o\">,</span> <span class=\"s\">\"Login Error check Your Account\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">logout</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"logout\"</span><span class=\"o\">,</span> <span class=\"s\">\"Logout!!\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>로그인 뷰 페이지 <code class=\"language-plaintext highlighter-rouge\">views/customLogin.jsp</code>를 작성한다.</p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n    pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n\t<span class=\"nt\">&lt;h1&gt;</span>Custom Login Page<span class=\"nt\">&lt;/h1&gt;</span>\n\t<span class=\"nt\">&lt;h2&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">error</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;&lt;/h2&gt;</span>\n\t<span class=\"nt\">&lt;h2&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">logout</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;&lt;/h2&gt;</span>\n\t\n\t<span class=\"nt\">&lt;form</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/login\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;div&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"username\"</span> <span class=\"na\">value=</span><span class=\"s\">\"admin\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;/div&gt;</span>\n\t\t<span class=\"nt\">&lt;div&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"password\"</span> <span class=\"na\">name=</span><span class=\"s\">\"password\"</span> <span class=\"na\">value=</span><span class=\"s\">\"admin\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;/div&gt;</span>\n\t\t<span class=\"nt\">&lt;div&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;/div&gt;</span>\n\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"hidden\"</span> <span class=\"na\">name=</span><span class=\"s\">\"${_csrf.parameterName}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${_csrf.token}\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div></div>\n\n<p>. 요청방식은 꼭 <code class=\"language-plaintext highlighter-rouge\">post</code>로 지정할 것! (CSRF 토큰 함께 보내야 함)</p>\n\n<p>. 요청 주소는 꼭 <code class=\"language-plaintext highlighter-rouge\">/login</code> 으로 할 것! ( 스프링 내부로직 호출)</p>\n\n<p>. <code class=\"language-plaintext highlighter-rouge\">${_csrf.token}</code> 구문 꼭 함께 전송 할 것!</p>\n\n<h2 id=\"4-로그인-성공과-authenticationsuccesshandler\"><font color=\"blue\">4. 로그인 성공과 AuthenticationSuccessHandler</font></h2>\n\n<blockquote>\n <p>로그인 성공 이후에, 특별한 동작을 하도록 제어하고 싶을 때, <strong><code class=\"language-plaintext highlighter-rouge\">AuthenticationSuccessHandler</code></strong> 인터페이스를 구현해서 설정 할 수 있다.</p>\n</blockquote>\n\n<p>(1) <code class=\"language-plaintext highlighter-rouge\">AuthenticationSuccessHandler</code>을 구현한 <code class=\"language-plaintext highlighter-rouge\">CustomLoginSuccessHandler</code> 클래스 작성한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CustomLoginSuccessHandler</span> <span class=\"kd\">implements</span> <span class=\"nc\">AuthenticationSuccessHandler</span><span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onAuthenticationSuccess</span><span class=\"o\">(</span><span class=\"nc\">HttpServletRequest</span> <span class=\"n\">request</span><span class=\"o\">,</span> <span class=\"nc\">HttpServletResponse</span> <span class=\"n\">response</span><span class=\"o\">,</span>\n\t\t\t<span class=\"nc\">Authentication</span> <span class=\"n\">auth</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">IOException</span><span class=\"o\">,</span> <span class=\"nc\">ServletException</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">warn</span><span class=\"o\">(</span><span class=\"s\">\"Login Success!\"</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"n\">roleNames</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ArrayList</span><span class=\"o\">&lt;&gt;();</span>\n\t\t<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">getAuthorities</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">authority</span> <span class=\"o\">-&gt;</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">roleNames</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">authority</span><span class=\"o\">.</span><span class=\"na\">getAuthority</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">});</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">warn</span><span class=\"o\">(</span><span class=\"s\">\"ROLE NAMES:\"</span> <span class=\"o\">+</span> <span class=\"n\">roleNames</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">roleNames</span><span class=\"o\">.</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"s\">\"ROLE_ADMIN\"</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">sendRedirect</span><span class=\"o\">(</span><span class=\"s\">\"/sample/admin\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"k\">return</span><span class=\"o\">;</span>\n\t\t<span class=\"o\">}</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">roleNames</span><span class=\"o\">.</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"s\">\"ROLE_MEMBER\"</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">sendRedirect</span><span class=\"o\">(</span><span class=\"s\">\"/sample/member\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"k\">return</span><span class=\"o\">;</span>\n\t\t<span class=\"o\">}</span>\n\t\t\n\t\t<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"na\">sendRedirect</span><span class=\"o\">(</span><span class=\"s\">\"/\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>(2) security-context.xml 에 구현체를 빈으로 등록하고 form-login 속성에 추가한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customLoginSuccessHandler\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomLoginSuccessHandler\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n<span class=\"nt\">&lt;security:http&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;security:form-login</span> <span class=\"na\">login-page=</span><span class=\"s\">\"/customLogin\"</span> <span class=\"na\">authentication-success-handler-ref=</span><span class=\"s\">\"customLoginSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p>. <code class=\"language-plaintext highlighter-rouge\">CustomLoginSuccessHandler</code> 클래스 빈으로 등록하고, <code class=\"language-plaintext highlighter-rouge\">security:form-login</code> 네임스페이스의 <code class=\"language-plaintext highlighter-rouge\">authentication-success-handler-ref</code> 속성에 id 를 지정해 준다.</p>\n\n<p>. 예제는, 로그인이 성공하면, 권한에 따라 특정 페이지로 강제로 이동하는 로직이다.</p>\n\n<h2 id=\"5-로그아웃-처리와-logoutsuccesshandler\"><font color=\"blue\">5. 로그아웃 처리와 LogoutSuccessHandler</font></h2>\n<blockquote>\n <p>특정 URL 을 지정하고, 로그아웃 성공 후, 직접 로직을 핸들링 할 수 있다.</p>\n</blockquote>\n\n<p>(1) security-context.xml 에 <code class=\"language-plaintext highlighter-rouge\">security:logout</code> 네임스페이스에 속성을 지정한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;bean&gt;&lt;/bean&gt;</span>\n<span class=\"nt\">&lt;security:http&gt;</span>\n\t<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;security:logout</span> <span class=\"na\">logout-url=</span><span class=\"s\">\"/customLogout\"</span> <span class=\"na\">invalidate-session=</span><span class=\"s\">\"true\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"c\">&lt;!-- 생략 --&gt;</span>\t\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p>. <code class=\"language-plaintext highlighter-rouge\">logout-url</code> 속성에 로그아웃 처리 URL을 지정할 수 있다.</p>\n\n<p>. <code class=\"language-plaintext highlighter-rouge\">invalidate-session=true</code> 는, 로그아웃하면, 세션을 삭제 처리한다.</p>\n\n<p>(2) 로그아웃 버튼을 생성할 페이지에 로그아웃을 위한 form을 작성한다.</p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n    pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">'Content-Type'</span> <span class=\"na\">content=</span><span class=\"s\">'text/html; charset=UTF-8'</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n<span class=\"nt\">&lt;h1&gt;</span>/sample/admin page<span class=\"nt\">&lt;/h1&gt;</span>\n<span class=\"c\">&lt;!-- &lt;a href=\"/customLogout\"&gt;Logout&lt;/a&gt; --&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/customLogout\"</span><span class=\"nt\">&gt;</span>\n\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"hidden\"</span> <span class=\"na\">name=</span><span class=\"s\">\"${_csrf.parameterName}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${_csrf.token}\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;button&gt;</span>로그아웃<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div></div>\n\n<p>. <code class=\"language-plaintext highlighter-rouge\">action</code>에는, security-context.xml 에서 지정한 <code class=\"language-plaintext highlighter-rouge\">/customLogout</code> URL 을 지정한다.</p>\n\n<p>. 전송방식은 꼭 <code class=\"language-plaintext highlighter-rouge\">post</code> 로 해야하며, <code class=\"language-plaintext highlighter-rouge\">_csrf.token</code> 을 함께 전송해야 한다.</p>\n\n<p>. 실제 실행하여 로그아웃 버튼을 누르면, 스프링 내부 로직에 따라 로그인 페이지로 이동하는데 변경하고 싶으면 <strong><code class=\"language-plaintext highlighter-rouge\">security:logout</code>의 <code class=\"language-plaintext highlighter-rouge\">logout-success-url</code> 속성에 로그아웃 후 이동할 URL을 입력</strong>한다.</p>\n\n<p>. <strong>로그아웃 처리 성공 후, 사용자가 추가적인 로직을 넣고 싶다면</strong>, <code class=\"language-plaintext highlighter-rouge\">LogoutSuccessHandler</code> 인터페이스를 구현하여 빈에 등록하고, 그 ID 를 <code class=\"language-plaintext highlighter-rouge\">security:logout</code>의 <code class=\"language-plaintext highlighter-rouge\">success-handler-ref</code> 속성에 입력하면 된다. (로그인과 비슷하다.)</p>\n\n<p>. ‘logout-success-url’ 속성과 ‘success-handler-ref’ 속성은, 둘중 하나만 사용할 수 있다.</p>\n","dir":"/spring5/7_security/","name":"2_loginlogout.md","path":"spring5/7_security/2_loginlogout.md","url":"/spring5/7_security/2_loginlogout.html"},{"sort":2,"layout":"default","title":"의존성 주입 / Lombok","content":"# 의존성 주입 / Lombok\n\n## <font color='blue'>1. 의존성 주입</font>\n\n- 스프링의 `ApplicationContext` 가 필요한 객체를 생성해서 주입해주는 방식\n- 객체에서 new 클래스명() 식으로 코드로 생성하지 않고 스프링에서 생성된 객체를 제공해주는 방식\n- ApplicationContext 가 관리하는 개체들을 `빈` 이라 부름\n\n## <font color='blue'>2. AOP(Aspect Oriented Programming)</font>\n\n- 대부분 시스템이 공통으로 관심을 갖는 보안, 로그, 트랜젝션등을 `횡단 관심사`라 부름\n- `AOP`는 횡단 관심사를 모듈로 분리하여 개발하는 프로그램 페러다임\n\n## <font color='blue'>3. 의존성 주입과 테스트를 위한 라이브러리 설정</font>\n\n- 설정 방식은 주로 `XML`이나 `어노테이션` 을 이용\n\n- *pom.xml 에 `spring-test` , `lombok` `추가`하기*\n\n```xml\n<!-- spring-test -->\n<dependency>\n <groupId>org.springframework</groupId>\n <artifactId>spring-test</artifactId>\n <version>${org.springframework-version}</version>\n <scope>provided</scope>\n</dependency> \n\n<!-- Lombok -->\n<dependency>\n <groupId>org.projectlombok</groupId>\n <artifactId>lombok</artifactId>\n <version>1.18.0</version>\n <scope>provided</scope>\n</dependency> \n\t\t\n```\n\n- *pom.xml 에 `log4j` , `junit` 버전 `변경` 하기*\n\n```xml\n<dependency>\n <groupId>log4j</groupId>\n <artifactId>log4j</artifactId>\n <version>1.2.17</version>\n <!-- 생략 -->\n</dependency>\n<!-- Test -->\n<dependency>\n <groupId>junit</groupId>\n <artifactId>junit</artifactId>\n <!-- <version>4.7</version> -->\n <version>4.12</version>\n <scope>test</scope>\n</dependency> \n```\n\n\n\n## <font color='blue'>4. 의존성 주입을 위한 ConponentScan 설정</font>\n\n**(1) XML 이용한 의존성 주입**\n- root-context.xml 클릭 -> 아랫쪽 NameSpaces 탭에서 'context' 체크 -> 소스 추가\n\n```xml\n<!-- root-context.xml -->\n<context:component-scan base-package=\"org.test.sample\">\n</context:component-scan>\n```\n\n**(2) JavaConfig 이용한 의존성 주입**\n\n - `RootConfig.java` 와 `@ComponentScan` 어노테이션 이용\n - ApplicationContext가 @ComponentScan 을 통해 지정된 패키지를 스캔하면서 @Component 가 붙은 클래스들의 인스턴스를 생성함.\n\n ```java\npackage org.example.config;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ComponentScan(basePackages = {\"org.test.sample\"})\npublic class RootConfig {\n\n}\n ```\n\n## <font color='blue'>5. 의존성 주입 테스트</font>\n\n- org.example.sample.Chef.java\n\n```java\npackage org.example.sample;\n\nimport org.springframework.stereotype.Component;\n\nimport lombok.Data;\n\n@Component\n@Data\npublic class Chef {\n\n}\n\n```\n- @Data : Chef(), canEqual(Object), equals(Objectl), hashCode(), toString() 함수를 자동 생성함\n\n------------------------------------------\n\n- org.example.sample.Restaurant.java\n\n```java\npackage org.example.sample;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport lombok.Data;\nimport lombok.Setter;\n\n@Component\n@Data\npublic class Restaurant {\n\n\t@Setter(onMethod = @__({@Autowired}) )\n\tprivate Chef chef;\n}\n\n```\n- @Component : Bean으로 등록하고, 스프링이 인스턴스를 자동 생성한다.\n- @Data : Restaurant(), chef, setChef(Chef), getChef(), toString() 등의 메소드를 자동 생성한다.\n\n-------------------------------------------\n\n- org.example.sample.SampleTests.java\n\n```java\npackage org.example.sample;\n\nimport static org.junit.Assert.assertNotNull;\n\nimport org.example.config.RootConfig;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport lombok.Setter;\nimport lombok.extern.log4j.Log4j;\n\n@RunWith (SpringJUnit4ClassRunner.class)\n@ContextConfiguration(classes = {RootConfig.class} )\n@Log4j\npublic class SampleTests {\n\n\t@Setter(onMethod = @__({@Autowired}) )\n\tprivate Restaurant restaurant;\n\t\n\t@Test\n\tpublic void testExist() {\n\t\t\n\t\tassertNotNull(restaurant);\n\t\t\n\t\tlog.info(restaurant);\n\t\tlog.info(\"-------------------------------------------\");\n\t\tlog.info(restaurant.getChef());\n\t\t\n\t}\n}\n\n```\n- @RunWith(SpringJUnit4ClassRunner.class) : 현재 코드가 `스프링을 실행하는 역할` 이라는 것을 표시\n- @ContextConfiguration : `ComponentScan` 이 지정되어 있는 설정파일을 셋팅함으로써, 필요한 객체를 Bean으로 등록\n - xml 설정일 경우 : @ContextConfiguration(\"file:src/main/webapp/WEB-INF/spring/root-context.xml\")\n - java 설정일 경우: @ContextConfiguration(classes = {RootConfig.class})\n- @Log4j : Lombok 을 이용해서 로그를 기록. 별도의 Logger 객체 선언 없이 사용하면 됨\n- @Setter(onMethod = @__({@Autowired}) ) : setRestaurant(Restaurant) 메소드를 생성할 때, 해당 인스턴스(Restaurant)를 자동으로 생성해서 주입해 달라는 표시\n\n## <font color='blue'>6. 코드에 사용된 어노테이션</font>\n\n**(1) Lombok 관련 어노테이션**\n\n- @Setter : setter 메서드를 만들어주는 역할\n - @Setter 의 세가지 속성\n - value: 접근 제한 속성, 기본값은 lombok.AccessLevel.PUBLIC \n - onMethod: setter 생성 시, setter 메서드에 붙일 어노테이션을 지정하는 역할\n - onParam: setter 메서드 생성 시, 메서드의 파라미터에 어노테이션을 사용할 경우 적용\n- @Data\n - @ToString, @EqualsAndHashCode, @Getter/@Setter, @RequiredArgsConstructor를 모두 생성해주는 Lombok 어노테이션\n- @Log4j\n- @AllArgsConstructor : 모든 인스턴스 변수를 파라미터로 받는 생성자를 자동 생성 (ex. Restaurant(Chef))\n- @RequiredArgsConstructor : @NonNull 이나 final이 붙은 인스턴스 변수에 대한 생성자 생성\n\n**(2) Sprint 관련 어노테이션**\n\n- @Autowired : 자신에게 해당 타입의 빈을 주입해주라는 표시(주입: 해당 타입의 빈 인스턴스를 생성해 달라는 의미)\n- @Component : 해당 클래스가 스프링에서 객체로 만들어 관리하는 대상임을 명시, @ComponentScan을 통해 @Component가 있는 객체들을 조사함.\n\n**(3) Test 관련 어노테이션**\n\n- @RunWith : 테스트시 필요한 클래스 지정\n- @ContextConfiguration : 어떤 설정정보를 읽어들여야 할지 명시\n- @Test : 단위테스트 대상에 붙여줌\n","dir":"/spring5/1_env/","name":"di_lombok.md","path":"spring5/1_env/di_lombok.md","url":"/spring5/1_env/di_lombok.html"},{"sort":2,"layout":"default","title":"개발 뼈대 세우기","content":"<h1 id=\"개발-뼈대-세우기\">개발 뼈대 세우기</h1>\n\n<p><br /></p>\n\n<h2 id=\"1-프로젝트-생성\">1. 프로젝트 생성</h2>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">source</span> /home/centos/VENV/venv/bin/activate\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span><span class=\"nb\">cd</span> /home/centos/projectDir/\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>django-admin startproject mysite\n<span class=\"c\"># 베이스디렉토리명 변경</span>\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span><span class=\"nb\">mv </span>mysite myPrj \n</code></pre>  </div></div>\n<ul>\n <li>베이스디렉토리(루트디렉토리) mysite와 하위의 프로젝트 관리용 디렉토리 mysite 2개가 생성됨</li>\n <li>베이스디렉토리명은 변경해도 아무 영향이 없으므로, 프로젝트명으로 변경</li>\n</ul>\n\n<h2 id=\"2-설정파일-settingspy--파일-변경-mysitesettingspy\">2. 설정파일 settings.py 파일 변경 (mysite/settings.py)</h2>\n\n<h4 id=\"1-allowed_hosts\">(1) <strong>ALLOWED_HOSTS</strong></h4>\n\n<ul>\n <li>서버의 IP나 도메인 등록</li>\n <li><code class=\"language-plaintext highlighter-rouge\">ALLOWED_HOSTS = ['192.168.111.100','localhost','127.0.0.1']</code>\n <h4 id=\"2-installed_apps\">(2) <strong>INSTALLED_APPS</strong></h4>\n </li>\n <li>startapp 명령으로 신규 앱을 생성 후, INSTALLED_APPS 에 등록\n <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py startapp bookmark\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span><span class=\"nb\">cat</span> /bookmark/apps.py\n<span class=\"o\">(</span>생략<span class=\"o\">)</span>\nclass BookmarkConfig<span class=\"o\">(</span>AdminConfig<span class=\"o\">)</span>\n<span class=\"o\">(</span>생략<span class=\"o\">)</span>\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span><span class=\"nb\">cd</span> ..\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>vim mysite/settings.py\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># 앱  추가\n</span><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[..(</span><span class=\"n\">생략</span><span class=\"p\">),</span>\n<span class=\"n\">bookmark</span><span class=\"p\">.</span><span class=\"n\">apps</span><span class=\"p\">.</span><span class=\"n\">BookmarkConfig</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h4 id=\"3-templates의-dirs-항목\">(3) <strong>TEMPLATES의 ‘DIRS’ 항목</strong></h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">...</span>\n    <span class=\"s\">'DIRS'</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'templates'</span><span class=\"p\">)],</span>\n    <span class=\"p\">...</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h4 id=\"4-데이트베이스-엔진-기본은-sqlite3\">(4) <strong>데이트베이스 엔진 (기본은 sqlite3)</strong></h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s\">'django.db.backends.sqlite3'</span> <span class=\"c1\"># 이부분 내가 사용코저 하는 DB 엔진으로 변경. 오라클, mysql 등..\n</span>    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h4 id=\"5-time_zone\">(5) <strong>TIME_ZONE</strong></h4>\n\n<ul>\n <li>한국시간으로 변경</li>\n <li><code class=\"language-plaintext highlighter-rouge\">TIME_ZONE = 'Asia/Seoul'</code></li>\n</ul>\n\n<h4 id=\"6-static_url-staticfiles_dirs\">(6) <strong>STATIC_URL, STATICFILES_DIRS</strong></h4>\n\n<ul>\n <li>정적파일들을 모아둘 경로를 지정\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">STATIC_URL</span> <span class=\"o\">=</span> <span class=\"s\">'/static/'</span>\n<span class=\"n\">STATICFILES_DIRS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'static'</span><span class=\"p\">)]</span>   <span class=\"c1\">#추가\n</span></code></pre>  </div> </div>\n </li>\n</ul>\n\n<h4 id=\"7-media_url-media_root\">(7) <strong>MEDIA_URL, MEDIA_ROOT</strong></h4>\n\n<ul>\n <li>파일 업로드 기능을 개발할 때 필요한 설정\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">MEDIA_URL</span> <span class=\"o\">=</span> <span class=\"s\">'/media/'</span>\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s\">'media'</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h4 id=\"8-use_tz\">(8) <strong>USE_TZ</strong></h4>\n\n<ul>\n <li>한국 시간대만 사용하는 프로젝트의 경우, 아래와 같이 설정하면 DB에 저장되는 시간도 한국시간으로 저장되어 편리함</li>\n <li><code class=\"language-plaintext highlighter-rouge\">USE_TZ = False</code></li>\n</ul>\n\n<h4 id=\"9-language_code\">(9) <strong>LANGUAGE_CODE</strong></h4>\n\n<ul>\n <li>Admin 사이트 화면의 메뉴 및 설명이나, 날짜/시간에 대한 표현이 달라지므로 주의</li>\n <li>아래와 같이 설정하면 한국어로 표현됨</li>\n <li><code class=\"language-plaintext highlighter-rouge\">LANGUAGE_CODE = 'ko-kr'</code></li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"3-기본테이블-생성-user-group\">3. 기본테이블 생성 (User, Group)</h2>\n\n<h4 id=\"1-장고가-기본적으로-제공하는-user-group-테이블을-생성하는-과정\">(1) <strong>장고가 기본적으로 제공하는 User, Group 테이블을 생성하는 과정</strong></h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span><span class=\"nv\">$ </span>python3 manage.py migrate\n</code></pre>  </div></div>\n<p><br /></p>\n\n<h2 id=\"4-슈퍼유저-생성\">4. 슈퍼유저 생성</h2>\n\n<h4 id=\"1-장고가-제공하는-admin-사이트에-접속할-관리자슈퍼유저-생성-과정\">(1) <strong>장고가 제공하는 Admin 사이트에 접속할 관리자(슈퍼유저) 생성 과정</strong></h4>\n<h4 id=\"2-username-email-password-passwordagain-을-입력-해야-함\">(2) Username, Email, Password, Password(again) 을 입력 해야 함</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py createsuperuser\n</code></pre>  </div></div>\n<p><br /></p>\n\n<h2 id=\"5-애플리케이션-생성\">5. 애플리케이션 생성</h2>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py startapp bookmark\n</code></pre>  </div></div>\n\n<p><br /></p>\n\n<h2 id=\"6-애플리케이션-등록\">6. 애플리케이션 등록</h2>\n\n<h4 id=\"1-bookmark-앱-생성시-자동으로-생성된-appspy에-정의된-bookmarkconfig를-settingspy에-등록해야-함\">(1) <strong>bookmark 앱 생성시 자동으로 생성된 apps.py에 정의된 BookmarkConfig를 settings.py에 등록해야 함</strong></h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">....</span>\n    <span class=\"s\">'bookmark.apps.BookmarkConfig'</span><span class=\"p\">,</span> <span class=\"c1\"># 추가\n</span><span class=\"p\">]</span>\n</code></pre>  </div></div>\n","dir":"/python/developBookmark/","name":"2_makeBorn.md","path":"python/developBookmark/2_makeBorn.md","url":"/python/developBookmark/2_makeBorn.html"},{"sort":2,"layout":"default","title":"Ajax 댓글 달기 예제","content":"<h1 id=\"ajax-댓글-달기-예제\">Ajax 댓글 달기 예제</h1>\n\n<h2 id=\"1-영속계층-개발\"><font color=\"blue\">1. 영속계층 개발</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-0. tbl_reply DB 테이블 생성</font></strong></p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"nv\">`tbl_reply`</span> <span class=\"p\">(</span>\n  <span class=\"nv\">`rno`</span> <span class=\"nb\">int</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span> <span class=\"n\">AUTO_INCREMENT</span><span class=\"p\">,</span>\n  <span class=\"nv\">`bno`</span> <span class=\"nb\">int</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`reply`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`replyer`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`replyDate`</span> <span class=\"nb\">datetime</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"nv\">`updateDate`</span> <span class=\"nb\">datetime</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"nv\">`rno`</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> \n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. ReplyVO 클래스 생성</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Date</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Data</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Data</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReplyVO</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">reply</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">replyer</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">replyDate</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">updateDate</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. ReplyMapper 인터페이스와 XML 처리</font></strong></p>\n\n<ul>\n <li>\n <p><strong>Mapper 인터페이스 작성</strong></p>\n\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">기억할 점! @Param으로 전달한 파라미터는, MyBatis 에서 #{} 형태로 사용할 수 있어서 여러개의 파라미터를 전달할 때 유용합니다.</code></li>\n </ul>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">package</span> <span class=\"nn\">org.example.mapper</span><span class=\"o\">;</span>\n\n  <span class=\"kn\">import</span> <span class=\"nn\">java.util.List</span><span class=\"o\">;</span>\n\n  <span class=\"kn\">import</span> <span class=\"nn\">org.apache.ibatis.annotations.Param</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.Criteria</span><span class=\"o\">;</span>\n  <span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.ReplyVO</span><span class=\"o\">;</span>\n\n  <span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">ReplyMapper</span> <span class=\"o\">{</span>\n\n      <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">insert</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n        \n      <span class=\"kd\">public</span> <span class=\"nc\">ReplyVO</span> <span class=\"nf\">read</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">);</span>\n        \n      <span class=\"c1\">//@Param으로 전달한 파라미터는 MyBatis 에서 #{} 형태로 사용할 수 있다.</span>\n      <span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getListWithPage</span><span class=\"o\">(</span><span class=\"nd\">@Param</span><span class=\"o\">(</span><span class=\"s\">\"cri\"</span><span class=\"o\">)</span> <span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nd\">@Param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n        \n      <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">);</span>\n\n      <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">update</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><strong>Mapper XML 작성</strong></p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n  <span class=\"cp\">&lt;!DOCTYPE mapper\n      PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n      \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span>\n\n  <span class=\"nt\">&lt;mapper</span> <span class=\"na\">namespace=</span><span class=\"s\">\"org.example.mapper.ReplyMapper\"</span><span class=\"nt\">&gt;</span>\t\n        \n      <span class=\"nt\">&lt;insert</span> <span class=\"na\">id=</span><span class=\"s\">\"insert\"</span><span class=\"nt\">&gt;</span>\n          insert into tbl_reply (bno, reply, replyer)\n          values (#{bno}, #{reply}, #{replyer})\n      <span class=\"nt\">&lt;/insert&gt;</span>\n\n\n      <span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"read\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"org.example.domain.ReplyVO\"</span><span class=\"nt\">&gt;</span>\n          select * from tbl_reply \n          where rno = #{rno}\n      <span class=\"nt\">&lt;/select&gt;</span>\t\n        \n        \n      <span class=\"nt\">&lt;delete</span> <span class=\"na\">id=</span><span class=\"s\">\"delete\"</span><span class=\"nt\">&gt;</span>\n      delete from tbl_reply\n      where rno = #{rno}\n      <span class=\"nt\">&lt;/delete&gt;</span>\n        \n        \n      <span class=\"nt\">&lt;update</span> <span class=\"na\">id=</span><span class=\"s\">\"update\"</span><span class=\"nt\">&gt;</span>\n      update tbl_reply set\n      reply = #{reply}\n      ,updatedate = CURRENT_TIMESTAMP\n      where rno = #{rno}\n      <span class=\"nt\">&lt;/update&gt;</span>\n        \n        \n      <span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"getListWithPage\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"org.example.domain.ReplyVO\"</span><span class=\"nt\">&gt;</span>\n      select * from tbl_reply\n      where bno = #{bno}\n      limit #{cri.rowindex}, #{cri.amount}\n      <span class=\"nt\">&lt;/select&gt;</span>\n  <span class=\"nt\">&lt;/mapper&gt;</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. ReplyMapper 테스트</font></strong></p>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">src/test/java</code> &gt; <code class=\"language-plaintext highlighter-rouge\">org.exxample.mapper</code> &gt; ReplyMapperTest.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.mapper</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.stream.IntStream</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.Criteria</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.ReplyVO</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.junit.Test</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.junit.runner.RunWith</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.beans.factory.annotation.Autowired</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.context.ContextConfiguration</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.test.context.junit4.SpringJUnit4ClassRunner</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Setter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.extern.log4j.Log4j</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReplyMapperTest</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">ReplyMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testMapper</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testInsert</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">IntStream</span><span class=\"o\">.</span><span class=\"na\">range</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span>\n\t\t<span class=\"o\">{</span>\n\t\t\t<span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ReplyVO</span><span class=\"o\">();</span>\n\t\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setBno</span><span class=\"o\">(</span><span class=\"mi\">9L</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setReply</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"s\">\"_이것은 테스트를 위한 댓글입니다.\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setReplyer</span><span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span><span class=\"s\">\"_sera\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">});</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRead</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"mi\">1L</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n<span class=\"c1\">//\t@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testDelete</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"결과:\"</span> <span class=\"o\">+</span> <span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"mi\">1L</span><span class=\"o\">)==</span><span class=\"mi\">1</span><span class=\"o\">?</span><span class=\"s\">\"성공\"</span> <span class=\"o\">:</span> <span class=\"s\">\"실패\"</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n<span class=\"c1\">//\t@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testUpdate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ReplyVO</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setRno</span><span class=\"o\">(</span><span class=\"mi\">2L</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setReply</span><span class=\"o\">(</span><span class=\"s\">\"2_이것은 업데이트 테스트를 위한 댓글입니다.\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setReplyer</span><span class=\"o\">(</span><span class=\"s\">\"2_sera\"</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"업데이트 결과 : \"</span> <span class=\"o\">+</span> <span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">update</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">?</span> <span class=\"s\">\"성공\"</span> <span class=\"o\">:</span> <span class=\"s\">\"실패\"</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGetListWithPage</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">Criteria</span> <span class=\"n\">cri</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Criteria</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getListWithPage</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">,</span><span class=\"mi\">9L</span><span class=\"o\">).</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">vo</span> <span class=\"o\">-&gt;{</span>\n\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">});</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-4. @Param으로 여러개 파라미터 MyBatis로 전달하기</font></strong></p>\n<ul>\n <li>예시</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">ReplyMapper</span> <span class=\"o\">{</span>\n\n        <span class=\"c1\">//@Param으로 전달한 파라미터는 MyBatis 에서 #{} 형태로 사용할 수 있다.</span>\n        <span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getListWithPage</span><span class=\"o\">(</span><span class=\"nd\">@Param</span><span class=\"o\">(</span><span class=\"s\">\"cri\"</span><span class=\"o\">)</span> <span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nd\">@Param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n <span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"getListWithPage\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"org.example.domain.ReplyVO\"</span><span class=\"nt\">&gt;</span>\n    select * from tbl_reply\n    where bno = #{bno}\n    limit #{cri.rowindex}, #{cri.amount}\n<span class=\"nt\">&lt;/select&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-서비스-영역과-contoller-개발\"><font color=\"blue\">2. 서비스 영역과 Contoller 개발</font></h2>\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-1. ReplyContoller 설계</font></strong></p>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\">작업</th>\n <th style=\"text-align: left\">URL</th>\n <th style=\"text-align: left\">HTTP 전송방식</th>\n <th style=\"text-align: left\">리턴 타입</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">등록</td>\n <td style=\"text-align: left\">/reply/new</td>\n <td style=\"text-align: left\">Post(json)</td>\n <td style=\"text-align: left\">ResponseEntity(String)</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">조회</td>\n <td style=\"text-align: left\">/reply/{rno}</td>\n <td style=\"text-align: left\">Get</td>\n <td style=\"text-align: left\">&lt;%raw%&gt;ResponseEntity(ReplyVO)</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">삭제</td>\n <td style=\"text-align: left\">/reply/{rno}</td>\n <td style=\"text-align: left\">Delete</td>\n <td style=\"text-align: left\">&lt;%raw%&gt;ResponseEntity(String)</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">수정</td>\n <td style=\"text-align: left\">/reply/{rno}</td>\n <td style=\"text-align: left\">Put,Fatch</td>\n <td style=\"text-align: left\">&lt;%raw%&gt;ResponseEntity(String)</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">페이지</td>\n <td style=\"text-align: left\">/reply/{bno}/{page}</td>\n <td style=\"text-align: left\">Get</td>\n <td style=\"text-align: left\">&lt;%raw%&gt;ResponseEntity(ReplyPageDTO)</td>\n </tr>\n </tbody>\n</table>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-2. 코딩</font></strong></p>\n\n<ul>\n <li>ReplyController.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@RestController</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/reply\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReplyCotroller</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">ReplyService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\t\t\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"/new\"</span><span class=\"o\">,</span> \n\t\t\t\t<span class=\"n\">consumes</span> <span class=\"o\">=</span> <span class=\"s\">\"application/json\"</span> <span class=\"o\">,</span> <span class=\"c1\">//화면에서 보낼 때, 데이터 타입</span>\n\t\t\t\t<span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span> <span class=\"c1\">//화면으로 보낼때 데이터 타입</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">){</span> \n\t\t<span class=\"c1\">//@RequestBody : 화면에서 Json 으로 넘어온 파라미터를 ReplyVO 객체로 변환</span>\n        <span class=\"c1\">//ResponseEntity&lt;String&gt; : 메시지(데이터) 타입을 'String' 으로 하여, Header 와 status 를 함께 보내기 위해 사용</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n    \t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/page/{bno}/{page}\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyPageDTO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"page\"</span><span class=\"o\">)</span> <span class=\"kt\">int</span> <span class=\"n\">page</span><span class=\"o\">,</span> <span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">){</span>\n\t\t\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getListWithPage</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"nc\">Criteria</span><span class=\"o\">(</span><span class=\"n\">page</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">),</span> <span class=\"n\">bno</span><span class=\"o\">),</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">\"/{rno}\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"rno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">){</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">),</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@DeleteMapping</span><span class=\"o\">(</span> <span class=\"n\">value</span> <span class=\"o\">=</span><span class=\"s\">\"/{rno}\"</span><span class=\"o\">,</span>\n\t\t\t\t\t<span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"rno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">){</span>\n\t\t\n\t\t<span class=\"k\">return</span>  <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span> \n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span> <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">PATCH</span><span class=\"o\">,</span> <span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">PUT</span><span class=\"o\">},</span>\n\t\t\t\t\t <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">\"/{rno}\"</span><span class=\"o\">,</span>\n\t\t\t\t\t <span class=\"n\">consumes</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">},</span>\n\t\t\t\t\t <span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"rno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">,</span> <span class=\"nd\">@RequestBody</span> <span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">){</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setRno</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>ReplyService.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.service</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">ReplyService</span> <span class=\"o\">{</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nc\">ReplyVO</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nc\">ReplyPageDTO</span> <span class=\"nf\">getListWithPage</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>ReplyServiceImpl.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">ReplyMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">?</span> <span class=\"kc\">true</span> <span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ReplyVO</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">update</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">?</span> <span class=\"kc\">true</span> <span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">?</span> <span class=\"kc\">true</span> <span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ReplyPageDTO</span> <span class=\"nf\">getListWithPage</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"nc\">ReplyPageDTO</span> <span class=\"n\">dto</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">ReplyPageDTO</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getTotal</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">),</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getListWithPage</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"n\">bno</span><span class=\"o\">));</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">dto</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<ul>\n <li>ReplyPageDTO.java : pagination을 위해 추가한 객체</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Getter</span>\n<span class=\"nd\">@ToString</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReplyPageDTO</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">startPage</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">endPage</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">pre</span><span class=\"o\">,</span> <span class=\"n\">next</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">total</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">;</span>\n\t\n    <span class=\"c1\">// dto에 댓글목록 속성을 추가함.</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyVO</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span><span class=\"o\">;</span> \n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">ReplyPageDTO</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">total</span><span class=\"o\">,</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">ReplyVO</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span> <span class=\"o\">=</span> <span class=\"n\">cri</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">total</span> <span class=\"o\">=</span> <span class=\"n\">total</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">ceil</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">()</span> <span class=\"o\">/</span> <span class=\"o\">(</span><span class=\"kt\">float</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()))</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">();</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">startPage</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">-</span> <span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()-</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n\t\t<span class=\"kt\">int</span> <span class=\"n\">realEnd</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">ceil</span><span class=\"o\">((</span><span class=\"n\">total</span> <span class=\"o\">*</span> <span class=\"mf\">1.0</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()));</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">realEnd</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">=</span> <span class=\"n\">realEnd</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pre</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">startPage</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">next</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">&lt;</span> <span class=\"n\">realEnd</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">list</span> <span class=\"o\">=</span> <span class=\"n\">list</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>pagination 을 위해 총갯수 쿼리 추가</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">'getTotal'</span> <span class=\"na\">resultType=</span><span class=\"s\">\"int\"</span><span class=\"nt\">&gt;</span>\n\tselect count(*) from tbl_reply\n\twhere bno = #{bno}\n\t<span class=\"nt\">&lt;/select&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2-3 테스트</font></strong></p>\n\n<ul>\n <li>테스트 : 탐캣을 실행하고, 크롬 확장프로그램 RestClient 사용하여 테스트</li>\n</ul>\n\n<ol>\n <li>입력\n<img src=\"/assets/images/reply_insert.png\" alt=\"댓글입력테스트\" /></li>\n <li>수정\n<img src=\"/assets/images/reply_modify.png\" alt=\"댓글입력테스트\" /></li>\n <li>삭제\n<img src=\"/assets/images/reply_delete.png\" alt=\"댓글입력테스트\" /></li>\n <li>조회\n<img src=\"/assets/images/reply_get.png\" alt=\"댓글입력테스트\" /></li>\n <li>목록조회\n<img src=\"/assets/images/reply_getList.png\" alt=\"댓글입력테스트\" /></li>\n</ol>\n\n<h2 id=\"3-javascript-작성--replyjs-모듈\"><font color=\"blue\">3. JavaScript 작성 : reply.js 모듈</font></h2>\n<ul>\n <li>모듈패턴 사용 : 관련 함수들을 하나의 모듈처럼 묶음</li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. JavaScript 모듈화</font></strong></p>\n<ul>\n <li>메서드를 가지는 객체를 구성</li>\n <li>즉시실행함수와 {}를 이용, 실행함수는 () 안에 함수를 선언하고, 리턴하여 바깥쪽에서 실행 할 수 있음</li>\n <li>기본툴</li>\n</ul>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">service</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n    <span class=\"kd\">function</span> <span class=\"nx\">a</span><span class=\"p\">(){</span>\n        <span class=\"c1\">// 코드작성</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"na\">a</span><span class=\"p\">:</span><span class=\"nx\">a</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})();</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. Ajax로 서비스 처리</font></strong></p>\n<ul>\n <li>/resources/js/reply.js</li>\n</ul>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cm\">/**\n * 댓글달기 Ajax 모듈\n */</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">replyService</span> <span class=\"o\">=</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t\n\t\n\t<span class=\"c1\">//등록</span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">add</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n\t\t\t<span class=\"na\">type</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">post</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">url</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/reply/new</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">contentType</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">application/json;charset=utf-8</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">data</span> <span class=\"p\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">),</span>\n\t\t\t<span class=\"na\">success</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">error</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">}</span>\n\t\n\t\n\t<span class=\"c1\">//댓글 목록 </span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">getList</span><span class=\"p\">(</span><span class=\"nx\">param</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">getJSON</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/reply/page/</span><span class=\"dl\">'</span><span class=\"o\">+</span><span class=\"nx\">param</span><span class=\"p\">.</span><span class=\"nx\">bno</span><span class=\"o\">+</span><span class=\"dl\">'</span><span class=\"s1\">/</span><span class=\"dl\">'</span><span class=\"o\">+</span><span class=\"p\">(</span><span class=\"nx\">param</span><span class=\"p\">.</span><span class=\"nx\">page</span><span class=\"o\">||</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"dl\">'</span><span class=\"s1\">.json</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">);</span>\n\t\t\n\t\t<span class=\"p\">}).</span><span class=\"nx\">fail</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span> <span class=\"nx\">status</span><span class=\"p\">,</span> <span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">}</span>\n\t\n\t\n\t<span class=\"c1\">//댓글삭제</span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">remove</span><span class=\"p\">(</span><span class=\"nx\">param</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n\t\t\t<span class=\"na\">url</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/reply/</span><span class=\"dl\">'</span><span class=\"o\">+</span><span class=\"nx\">param</span><span class=\"p\">.</span><span class=\"nx\">rno</span><span class=\"p\">,</span>\n\t \t\t<span class=\"na\">type</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">delete</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">success</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">error</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">}</span>\n\t\n\t\n\t<span class=\"c1\">//댓글수정 </span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">modify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n\t\t\t<span class=\"na\">url</span><span class=\"p\">:</span><span class=\"dl\">'</span><span class=\"s1\">/reply/</span><span class=\"dl\">'</span><span class=\"o\">+</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">rno</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">type</span><span class=\"p\">:</span><span class=\"dl\">'</span><span class=\"s1\">put</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">contentType</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">application/json; charset=utf-8</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">data</span> <span class=\"p\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">),</span>\n\t\t\t<span class=\"na\">success</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">error</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">}</span>\n\t\n\t \n\t<span class=\"c1\">//댓글조회</span>\n\t<span class=\"kd\">function</span> <span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"nx\">param</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">({</span>\n\t\t\t<span class=\"na\">url</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/reply/</span><span class=\"dl\">'</span><span class=\"o\">+</span><span class=\"nx\">param</span><span class=\"p\">.</span><span class=\"nx\">rno</span><span class=\"o\">+</span><span class=\"dl\">'</span><span class=\"s1\">.json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t\t\t<span class=\"c1\">//dataType : 'application/json; charset=utf-8',</span>\n\t\t\t<span class=\"na\">success</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">error</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">};</span>\n\t\n\t\n\t<span class=\"c1\">//시간 처리 : Json 으로 넘어오는 Date 객체는 38049203 같은 숫자로 넘어오므로, 적절한 포맷으로 변경해야 함</span>\n    <span class=\"c1\">//보통 댓글은, 1일이 안지난 댓글은 시간을, 하루 이상된 댓글은 날짜를 표기함</span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">displayTime</span><span class=\"p\">(</span><span class=\"nx\">timeValue</span><span class=\"p\">){</span>\n\t\t<span class=\"kd\">var</span> <span class=\"nx\">today</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">();</span>\n\t\t\n\t\t<span class=\"kd\">var</span> <span class=\"nx\">gap</span> <span class=\"o\">=</span> <span class=\"nx\">today</span><span class=\"p\">.</span><span class=\"nx\">getTime</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"nx\">timeValue</span><span class=\"p\">;</span>\n\t\t<span class=\"kd\">var</span> <span class=\"nx\">dateObj</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"nx\">timeValue</span><span class=\"p\">);</span>\n\t\t<span class=\"kd\">var</span> <span class=\"nx\">str</span> <span class=\"o\">=</span> <span class=\"dl\">\"\"</span><span class=\"p\">;</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">gap</span> <span class=\"o\">&lt;</span> <span class=\"p\">(</span><span class=\"mi\">1000</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">60</span> <span class=\"o\">*</span> <span class=\"mi\">24</span><span class=\"p\">)){</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">hh</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getHours</span><span class=\"p\">();</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">mi</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getMinutes</span><span class=\"p\">();</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">ss</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getSeconds</span><span class=\"p\">();</span>\n\t\t\t\n\t\t\t<span class=\"k\">return</span> <span class=\"p\">[</span> <span class=\"p\">(</span><span class=\"nx\">hh</span> <span class=\"o\">&gt;</span> <span class=\"mi\">9</span> <span class=\"p\">?</span> <span class=\"dl\">\"\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0</span><span class=\"dl\">\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">hh</span><span class=\"p\">,</span><span class=\"dl\">\"</span><span class=\"s2\">:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span> <span class=\"nx\">mi</span> <span class=\"o\">&gt;</span> <span class=\"mi\">9</span> <span class=\"p\">?</span> <span class=\"dl\">\"\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0</span><span class=\"dl\">\"</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"nx\">mi</span><span class=\"p\">,</span><span class=\"dl\">\"</span><span class=\"s2\">:</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">mi</span> <span class=\"o\">&gt;</span> <span class=\"mi\">9</span> <span class=\"p\">?</span> <span class=\"dl\">\"\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0</span><span class=\"dl\">\"</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"nx\">ss</span> <span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\t\t<span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">yy</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getFullYear</span><span class=\"p\">();</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">mm</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getMonth</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n\t\t\t<span class=\"kd\">var</span> <span class=\"nx\">dd</span> <span class=\"o\">=</span> <span class=\"nx\">dateObj</span><span class=\"p\">.</span><span class=\"nx\">getDate</span><span class=\"p\">();</span>\n\t\t\t\n\t\t\t<span class=\"k\">return</span> <span class=\"p\">[</span> <span class=\"nx\">yy</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">mm</span> <span class=\"o\">&gt;</span> <span class=\"mi\">9</span> <span class=\"p\">?</span> <span class=\"dl\">\"\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0</span><span class=\"dl\">\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">mm</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">dd</span> <span class=\"o\">&gt;</span> <span class=\"mi\">9</span> <span class=\"p\">?</span> <span class=\"dl\">\"\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">0</span><span class=\"dl\">\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">dd</span> <span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\t\t\t<span class=\"c1\">//return [ yy, '01', (dd &gt; 9 ? \"\" : \"0\") + dd ].join('\\/');</span>\n\t\t<span class=\"p\">}</span>\n\t<span class=\"p\">};</span>\n\t\n\t<span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"na\">add</span><span class=\"p\">:</span><span class=\"nx\">add</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">getList</span><span class=\"p\">:</span><span class=\"nx\">getList</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">remove</span><span class=\"p\">:</span><span class=\"nx\">remove</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">modify</span><span class=\"p\">:</span><span class=\"nx\">modify</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">get</span><span class=\"p\">:</span><span class=\"kd\">get</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">displayTime</span><span class=\"p\">:</span><span class=\"nx\">displayTime</span><span class=\"p\">};</span>\n<span class=\"p\">})();</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>get.jsp 에서 reply.js 를 include 함 : <code class=\"language-plaintext highlighter-rouge\">&lt;script type=\"text/javascript\" src=\"/resources/js/reply.js\"&gt;&lt;/script&gt;</code></li>\n</ul>\n\n<h2 id=\"4-html-처리와-이벤트-처리\"><font color=\"blue\">4. HTML 처리와 이벤트 처리</font></h2>\n\n<ul>\n <li>get.jsp</li>\n</ul>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"c\">&lt;!-- 댓글처리 START--&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12 mt-3\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fa fa-comments fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>Reply\n            <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'addReplyBtn'</span> <span class=\"na\">class=</span><span class=\"s\">'btn btn-primary btn-sm float-right'</span><span class=\"nt\">&gt;</span>New Reply<span class=\"nt\">&lt;/button&gt;</span>\n        <span class=\"nt\">&lt;/div&gt;</span>\n        \n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-body\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"list-group\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"c\">&lt;!-- 댓글목록 부분 --&gt;</span>\n            <span class=\"nt\">&lt;/ul&gt;</span>\n        <span class=\"nt\">&lt;/div&gt;</span>\n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'mr-3'</span> <span class=\"na\">id=</span><span class=\"s\">'pageMaker'</span><span class=\"nt\">&gt;</span>\n            <span class=\"c\">&lt;!-- 페이지네이션 --&gt;</span>\n            <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"pagination justify-content-end\"</span> <span class=\"na\">style=</span><span class=\"s\">\"margin:20px 0\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;/ul&gt;</span>\n        <span class=\"nt\">&lt;/div&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"c\">&lt;!-- 댓글처리 END --&gt;</span>\n<span class=\"c\">&lt;!-- Modal Start --&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal fade\"</span> <span class=\"na\">id = </span><span class=\"s\">\"replyModal\"</span> <span class=\"na\">tabindex=</span><span class=\"s\">\"-1\"</span> <span class=\"na\">role=</span><span class=\"s\">\"dialog\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"myModalLabel\"</span> <span class=\"na\">aria-hidden=</span><span class=\"s\">'true'</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'modal-dialog'</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'modal-content'</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'modal-header'</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">'button'</span> <span class=\"na\">class=</span><span class=\"s\">'close'</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">'modal'</span> <span class=\"na\">aria-hidden=</span><span class=\"s\">'true'</span><span class=\"nt\">&gt;</span><span class=\"ni\">&amp;times;</span><span class=\"nt\">&lt;/button&gt;</span>\n                <span class=\"nt\">&lt;h4</span> <span class=\"na\">class=</span><span class=\"s\">'modal-title'</span> <span class=\"na\">id=</span><span class=\"s\">'myModalLabel'</span><span class=\"nt\">&gt;</span>REPLY MODAL<span class=\"nt\">&lt;/h4&gt;</span>\n            <span class=\"nt\">&lt;/div&gt;</span>\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'modal-body'</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'form-group'</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;label&gt;</span>Reply<span class=\"nt\">&lt;/label&gt;</span>\n                    <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">'form-control'</span> <span class=\"na\">name=</span><span class=\"s\">'reply'</span> <span class=\"na\">value=</span><span class=\"s\">'New Reply!'</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'form-group'</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;label&gt;</span>Replyer<span class=\"nt\">&lt;/label&gt;</span>\n                    <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">'form-control'</span> <span class=\"na\">name=</span><span class=\"s\">'replyer'</span> <span class=\"na\">value=</span><span class=\"s\">'replyer'</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'form-group'</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;label&gt;</span>Reply Date<span class=\"nt\">&lt;/label&gt;</span>\n                    <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">'form-control'</span> <span class=\"na\">name=</span><span class=\"s\">'replyDate'</span> <span class=\"na\">value=</span><span class=\"s\">''</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n            <span class=\"nt\">&lt;/div&gt;</span>\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">'modal-footer'</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'modalModBtn'</span> <span class=\"na\">type=</span><span class=\"s\">'button'</span> <span class=\"na\">class=</span><span class=\"s\">'btn-warning'</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n                <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'modalRegisterBtn'</span> <span class=\"na\">type=</span><span class=\"s\">'button'</span> <span class=\"na\">class=</span><span class=\"s\">'btn-danger'</span><span class=\"nt\">&gt;</span>Register<span class=\"nt\">&lt;/button&gt;</span>\n                <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'modalRemoveBtn'</span> <span class=\"na\">type=</span><span class=\"s\">'button'</span> <span class=\"na\">class=</span><span class=\"s\">'btn-danger'</span><span class=\"nt\">&gt;</span>Remove<span class=\"nt\">&lt;/button&gt;</span>\n                <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'modalCloseBtn'</span> <span class=\"na\">type=</span><span class=\"s\">'button'</span> <span class=\"na\">class=</span><span class=\"s\">'btn-primary'</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">'modal'</span><span class=\"nt\">&gt;</span>Close<span class=\"nt\">&lt;/button&gt;</span>\n            <span class=\"nt\">&lt;/div&gt;</span>\n        <span class=\"nt\">&lt;/div&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"c\">&lt;!-- Modal End --&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/js/reply.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n <span class=\"nt\">&lt;script&gt;</span>\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t <span class=\"kd\">const</span> <span class=\"nx\">bno</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"nt\">&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">bno</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글을</span> <span class=\"nx\">담을</span> <span class=\"nx\">컨테이너</span> <span class=\"o\">--&gt;</span>\n     <span class=\"kd\">const</span> <span class=\"nx\">replyUL</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.list-group</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">페이지표시를</span> <span class=\"nx\">담을</span> <span class=\"nx\">컨테이너</span> <span class=\"o\">--&gt;</span>\n     <span class=\"kd\">const</span> <span class=\"nx\">pagination</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.pagination</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">최초</span> <span class=\"nx\">페이지</span> <span class=\"nx\">로드시</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"nx\">페이지를</span> <span class=\"nx\">호출함</span> <span class=\"o\">--&gt;</span>\n     <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t \n\t <span class=\"kd\">function</span> <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"nx\">page</span><span class=\"p\">){</span>\n\t\t \n         <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글목록</span> <span class=\"nx\">서비스</span> <span class=\"nx\">호출</span> <span class=\"o\">--&gt;</span>\n\t\t<span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">getList</span><span class=\"p\">({</span><span class=\"na\">bno</span><span class=\"p\">:</span><span class=\"nx\">bno</span><span class=\"p\">,</span> <span class=\"na\">page</span><span class=\"p\">:</span><span class=\"nx\">page</span><span class=\"o\">||</span><span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">){</span>\n\t\t\t<span class=\"nx\">replyUL</span><span class=\"p\">.</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">list</span> <span class=\"o\">==</span> <span class=\"kc\">null</span> <span class=\"o\">||</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\t<span class=\"o\">&lt;!--</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;div/</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">test</span><span class=\"dl\">\"</span><span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"nx\">식으로</span><span class=\"p\">,</span> <span class=\"nx\">요소를</span> <span class=\"nx\">생성할</span> <span class=\"nx\">수</span> <span class=\"nx\">있음</span><span class=\"p\">.</span> <span class=\"o\">--&gt;</span>\n            <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글목록</span> <span class=\"nx\">표시</span> <span class=\"o\">--&gt;</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">each</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">list</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">,</span> <span class=\"nx\">vo</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$strong</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;strong/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">primary-font float-left</span><span class=\"dl\">\"</span><span class=\"p\">}).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"nx\">vo</span><span class=\"p\">.</span><span class=\"nx\">replyer</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$small</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;small/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">text-muted float-right</span><span class=\"dl\">\"</span><span class=\"p\">}).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">displayTime</span><span class=\"p\">(</span><span class=\"nx\">vo</span><span class=\"p\">.</span><span class=\"nx\">updateDate</span><span class=\"p\">));</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$div</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;div/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,{</span><span class=\"dl\">'</span><span class=\"s1\">class</span><span class=\"dl\">'</span><span class=\"p\">:</span><span class=\"dl\">'</span><span class=\"s1\">header clearfix</span><span class=\"dl\">'</span><span class=\"p\">}).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$strong</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$small</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$p</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;p/&gt;</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"nx\">vo</span><span class=\"p\">.</span><span class=\"nx\">reply</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$reply_body</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;div/&gt;</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$div</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$p</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$li_item</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;li/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,{</span><span class=\"dl\">'</span><span class=\"s1\">class</span><span class=\"dl\">'</span><span class=\"p\">:</span><span class=\"dl\">'</span><span class=\"s1\">list-group-item</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">data-rno</span><span class=\"dl\">'</span><span class=\"p\">:</span><span class=\"nx\">vo</span><span class=\"p\">.</span><span class=\"nx\">rno</span><span class=\"p\">}).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$reply_body</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"nx\">replyUL</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$li_item</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">})</span>\n\t\t\t<span class=\"o\">&lt;!--</span> <span class=\"nx\">페이지네이션</span> <span class=\"nx\">표시</span> <span class=\"o\">--&gt;</span>\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">pre</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$a</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;a/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">page-link</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">href</span><span class=\"dl\">\"</span><span class=\"p\">:(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">startPage</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)}).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Previous</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$li</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;li/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">page-item</span><span class=\"dl\">\"</span><span class=\"p\">});</span>\n\t\t\t\t\n\t\t\t\t<span class=\"nx\">$li</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$a</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"nx\">pagination</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$li</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\t<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">startPage</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;=</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">endPage</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$a</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;a/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">page-link</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">href</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"nx\">i</span><span class=\"p\">}).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"nx\">i</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$li</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;li/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">page-item</span><span class=\"dl\">\"</span><span class=\"p\">});</span>\n\t\t\t\t<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">cri</span><span class=\"p\">.</span><span class=\"nx\">pageNumber</span> <span class=\"o\">==</span> <span class=\"nx\">i</span><span class=\"p\">){</span>\n\t\t\t\t\t<span class=\"nx\">$li</span><span class=\"p\">.</span><span class=\"nx\">addClass</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">active</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"p\">}</span>\n\t\t\t\t<span class=\"nx\">$li</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$a</span><span class=\"p\">);</span>\t\t\t\t\n\t\t\t\t<span class=\"nx\">pagination</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$li</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$a</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;a/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span><span class=\"p\">:</span><span class=\"dl\">\"</span><span class=\"s2\">page-link</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">href</span><span class=\"dl\">\"</span><span class=\"p\">:(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">endPage</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)}).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Next</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">$li</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;li/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"dl\">\"</span><span class=\"s2\">class</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">page-item</span><span class=\"dl\">\"</span><span class=\"p\">});</span>\n\t\t\t\t<span class=\"nx\">$li</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$a</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"nx\">pagination</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">$li</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t <span class=\"p\">}</span>\n\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">페이지</span> <span class=\"nx\">변경</span> <span class=\"nx\">시</span><span class=\"p\">,</span> <span class=\"nx\">변경된</span> <span class=\"nx\">데이터</span> <span class=\"nx\">목록</span> <span class=\"nx\">호출</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">pagination</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">a</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"nx\">pagination</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">page</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">href</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"nx\">page</span><span class=\"p\">);</span>\n\t <span class=\"p\">});</span>\n\t \n     <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글</span>  <span class=\"nx\">조회</span><span class=\"o\">/</span> <span class=\"nx\">입력</span><span class=\"o\">/</span> <span class=\"nx\">수정</span><span class=\"o\">/</span> <span class=\"nx\">삭제를</span> <span class=\"nx\">위한</span> <span class=\"nx\">모달사용을</span> <span class=\"nx\">위해</span> <span class=\"nx\">공통으로</span> <span class=\"nx\">사용되는</span> <span class=\"nx\">요소를</span> <span class=\"nx\">밖으로</span> <span class=\"nx\">빼놓음</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modal</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#replyModal</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modalInputReply</span> <span class=\"o\">=</span> <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"reply\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modalInputReplyer</span> <span class=\"o\">=</span> <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"replyer\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modalInputReplyDate</span> <span class=\"o\">=</span> <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"replyDate\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t \n\t <span class=\"kd\">var</span> <span class=\"nx\">modalModBtn</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#modalModBtn</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modalRemoveBtn</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#modalRemoveBtn</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t <span class=\"kd\">var</span> <span class=\"nx\">modalRegisterBtn</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#modalRegisterBtn</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t \n     <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글</span> <span class=\"nx\">등록</span> <span class=\"nx\">이벤트</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#addReplyBtn</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"dl\">''</span><span class=\"p\">);</span>\n\t\t <span class=\"nx\">modalInputReplyDate</span><span class=\"p\">.</span><span class=\"nx\">closest</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">div</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button[id != \"modalCloseBtn\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n\t\t \n\t\t <span class=\"nx\">modalRegisterBtn</span><span class=\"p\">.</span><span class=\"nx\">show</span><span class=\"p\">();</span>\n\t\t \n\t\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#replyModal</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">show</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"p\">})</span>\n\t \n\t <span class=\"o\">&lt;!--</span><span class=\"nx\">작성한</span> <span class=\"nx\">댓글</span> <span class=\"nx\">저장</span> <span class=\"nx\">이벤트</span>  <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">modalRegisterBtn</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t \n\t\t <span class=\"kd\">var</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t <span class=\"na\">reply</span><span class=\"p\">:</span><span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">(),</span>\n\t\t\t\t <span class=\"na\">replyer</span><span class=\"p\">:</span><span class=\"nx\">modalInputReplyer</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">(),</span>\n\t\t\t\t <span class=\"na\">bno</span><span class=\"p\">:</span><span class=\"nx\">bno</span>\n\t\t <span class=\"p\">}</span>\n\t\t \n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">add</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n\t\t\t \n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t \n\t\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">});</span>\n\t <span class=\"p\">});</span>\n\t \n     <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글</span> <span class=\"nx\">리스트</span> <span class=\"nx\">항목</span> <span class=\"nx\">클릭</span> <span class=\"nx\">시</span><span class=\"p\">,</span> <span class=\"nx\">조회</span> <span class=\"nx\">이벤트</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">replyUL</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">li</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"kd\">var</span> <span class=\"nx\">rno</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">({</span><span class=\"na\">rno</span><span class=\"p\">:</span><span class=\"nx\">rno</span><span class=\"p\">},</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">rno</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">reply</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modalInputReplyer</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">replyer</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modalInputReplyDate</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">displayTime</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">updateDate</span><span class=\"p\">));</span>\n\t\t\t \n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button[id != \"modalCloseBtn\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">modalModBtn</span><span class=\"p\">.</span><span class=\"nx\">show</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">modalRemoveBtn</span><span class=\"p\">.</span><span class=\"nx\">show</span><span class=\"p\">();</span> \n\t\t\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#replyModal</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">show</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">});</span>\n\t <span class=\"p\">})</span>\n\t \n     <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글</span> <span class=\"nx\">수정</span> <span class=\"nx\">이벤트</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">modalModBtn</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">()){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글을 입력하세요.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t <span class=\"na\">rno</span><span class=\"p\">:</span><span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n\t\t\t\t <span class=\"na\">reply</span><span class=\"p\">:</span><span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">(),</span>\n\t\t\t\t <span class=\"na\">replyer</span><span class=\"p\">:</span><span class=\"nx\">modalInputReplyer</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">()};</span>\n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">modify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글이 수정되었습니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">});</span>\n\t <span class=\"p\">});</span>\n\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">댓글삭제</span> <span class=\"nx\">이벤트</span> <span class=\"o\">--&gt;</span>\n\t <span class=\"nx\">modalRemoveBtn</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">remove</span><span class=\"p\">({</span><span class=\"na\">rno</span><span class=\"p\">:</span><span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">)},</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\t\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"o\">===</span><span class=\"dl\">'</span><span class=\"s1\">success</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글이 삭제되었습니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">})</span>\n\t <span class=\"p\">})</span>\n<span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n\n</code></pre>  </div></div>\n","dir":"/spring5/4_rest_ajsx_reply/","name":"2_reply_example.md","path":"spring5/4_rest_ajsx_reply/2_reply_example.md","url":"/spring5/4_rest_ajsx_reply/2_reply_example.html"},{"sort":2,"layout":"default","title":"자료형","content":"# 자료형\n\n#### 자료형 확인 : type() 함수 \n\n```python\n>>> print(type(\"안녕하세요?\"))\n<class 'str'>\n```\n\n## [ 1 ] 문자열\n#### 1. 큰 따옴표, 작은 따옴표 모두 사용 가능 \n#### 2. 이스케이프 문자 사용하여 특수문자 표현 가능\n#### 3. 여러줄 문자열\n- '\\n' 을 사용\n- \"\"\"~\"\"\", '''~'''\n```python\n>>>print(\"\"\"줄바꿈이 있는\n문자열\n출력\"\"\")\n줄바꿈이 있는\n문자열\n출력\n```\n\n#### 4. 줄바꿈 없이 문자열 만들기\n\n```python\n>>> print(\"\"\"\n줄바꿈이 있는\n문자열\n출력\n\"\"\") # 시작과 끝의 줄바꿈이 발생됨\n(줄바꿈 발생)\n줄바꿈이 있는\n문자열\n출력\n(줄바꿈 발생)\n\n>>>print(\"\"\"\\\n줄바꿈이 있는 \n문자열\n출력\\\n\"\"\") # 줄바꿈 없이 바로 출력 되어짐\n줄바꿈이 있는\n문자열\n출력\n```\n\n#### 5. 문자열의 연산자\n1. \\+ \n- 문자열의 연결\n- 문자열은 무조건 문자열끼리 \\+로 연결\n```python\n>>>print(\"안녕\" + \"하세요\")\n안녕하세요\n```\n2. \\*\n- 문자열 * 숫자\n- 문자열을 숫자만큼 반복\n```python\n>>>print('안녕!'*3)\n안녕!안녕!안녕!\n```\n3. [숫자]\n- 인덱싱\n- 문자선택 연산자 \n```python\n>>>print(\"안녕하세요\"[0])\n안\n>>>print(\"안녕하세요\"[-1])\n요\n```\n4. [숫자:숫자]\n- 슬라이싱\n- 문자열 범위 선택 연산자\n- 마지막 숫자의 문자는 포함하지 않음 \n```python\n>>>print('안녕하세요'[1:3])\n녕하\n```\n5. IndexError 예외 \n- 리스트/문자열의 수를 벗어나는 요소/글자를 선택할 때 발생\n\n#### 6. 문자열 길이 구하기 : len(\"문자열\") \n```python\n>>>print(len(\"안녕하세요\"))\n5\n```\n\n## [ 2 ] 숫자\n\n#### 1. 숫자의 종류\n\n1. 정수, 실수 \n\n```python\n>>>print(type(52))\n<class 'int'>\n>>>print(type(52.344))\n<class 'float'>\n```\n\n#### 2. 숫자 연산자\n\n1. 사칙연산 : +, -, *, /\n2. **정수나누기 연산자 : //**\n3. 나머지 연산자 : %\n4. 제곱 연산자 : ** \n\n```python\n>>>print(3/2)\n1.5\n>>>print(3//2)\n1\n>>>print(3**3)\n27\n```\n\n#### 3. TypeError 예외\n1. 서로 다른 자료를 연산하면 TypeError 예외 발생\n\n## [ 3 ] 변수와 입력\n- KEY: `#변수선언 #변수할당 #변수참조 #input() #int() #float() #str()`\n- 파이썬은 변수타입을 쓰지않음\n```python\na = '문자열'\n```\n\n#### 3-1. 복합 대입 연산자\n1. +=, -=, *=, /=, %=, **=\n2. 문자열도 사용 가능\n\n#### 3-2. input()\n\n1. 사용자 입력 받는 함수\n2. 프롬프트 문자열\n3. input() 은 무조건 문자열 타입을 반환 \n\n```python\n>>>string = input(\"문자를 입력하세요:\")\n문자를 입력하세요:문자\n>>>print(type(string))\n< class 'str' >\n>>>number = input(\"숫자를 입력하세요 :\")\n숫자를 입력하세요 : 1234\n>>>print(type(number))\n< class 'str' >\n# 불값도 마찬가지로 문자열을 반환\n```\n\n#### 3-3. 문자열을 숫자로 바꾸기\n\n1. int()\n2. float()\n3. ValueError 예외 : 숫자가 아닌 것을 숫자로 변환 하려고 할 때 발생하는 에러, 실수를 int 형으로 변환하려고 할 때\n\n#### 3-4. 숫자를 문자열로 바꾸기\n\n1. str()\n\n## [ 4 ] 숫자와 문자열의 다양한 함수 및 기능\n- KEY: `#format() upper() lower() strip() find() in split()`\n\n#### 4-1. 문자열의 format()\n\n```python\n\"{}\".format(10)\n\"{}과 {}\".format(10, 20)\n\"{0},{1},{3}\".format(101,202,303)\n```\n\n1. 정수 출력의 다양한 쓰임\n- 정수 : `output_a = '{:d}'.format(52)`\n- 특정 칸에 출력 : `output_b=\"{:5d}\".format(53)` \n- 빈칸을 0으로 채우기 : `output_b=\"{:05d}\".format(52)`\n- 양수/음수 부호와 함께 출력 : `output_c=\"{:+d}\".format(-52)` 또는 `output_c=\"{:+d}\".format(52)`\n- 부호부분 빈칸으로 비우고 출력 : `output_d=\"{: d}\".format(-52)` 또는 `output_d=\"{: d}\".format(52)`\n- 부호와 빈칸을 조합 할 때 = 기호를 앞에 붙일 수 있음\n- 다양한 형태로 조합해 보기 \n\n ```python\n # 조합하기\n output_h = \"{:+5d}\".format(52) # 기호를 뒤로 밀기 : 양수\n output_i = \"{:+5d}\".format(-52) # 기호를 뒤로 밀기 : 음수\n output_j = \"{:=+5d}\".format(52) # 기호를 앞으로 밀기 : 양수\n output_k = \"{:=+5d}\".format(-52) # 기호를 앞으로 밀기 : 음수\n output_l = \"{:+05d}\".format(52) # 기호를 붙이고 0으로 채우기 : 양수\n output_m = \"{:+05d}\".format(-52) # 기호를 붙이고 0으로 채우기 : 음수\n print(output_h)\n print(output_i)\n print(output_j)\n print(output_k)\n print(output_l)\n print(output_m)\n # 출력\n +52\n -52\n + 52\n - 52\n +0052\n -0052\n ```\n\n2. 부동 소수점 출력의 다양한 쓰임 \n- float의 기본형\n```python\noutput_a = \"{:f}\".format(52.273) \noutput_b = \"{:15f}\".format(52.273) # 15칸 만들기\noutput_c = \"{:+15f}\".format(52.273) # 15칸에 부호 추가\noutput_d = \"{:+015f}\".format(52.273) # 15칸에 부호 추가하고 0으로 채우기\nprint(output_a)\nprint(output_b)\nprint(output_c)\nprint(output_d)\n# 실행결과\n52.273000\n 52.273000\n +52.273000\n+0000052.273000 \n```\n- 소수점 아래 지정하기 \n```python\noutput_a = \"{:15.3f}\".format(52.273) # 총 15칸을 차지하고, 소수점 아래 3자리\noutput_b = \"{:15.2f}\".format(52.273)\noutput_c = \"{:15.1f}\".format(52.273)\nprint(output_a)\nprint(output_b)\nprint(output_c)\n# 실행결과\n 52.273\n 52.27\n 52.3\n```\n- 의미없는 소수점 제거하기 : 소수점 아래 0 제거\n```python\noutput_a = 52.0\noutput_b = \"{:g}\".format(output_a)\nprint(output_a)\nprint(output_b)\n# 실행결과\n52.0\n52\n```\n\n#### 4-2. 대소문자 바꾸기 \n- **upper()**\n- **lower()**\n```python\na = 'Hello'\nprint(a.upper())\nprint(a.lower())\n# 실행결과\nHELLO\nhello\n```\n#### 4-3. 문자열 공백 제거\n1. 양옆 공백 제거 : **strip()**\n2. 왼쪽 공백 제거 : **lstrip()**\n3. 오른쪽공백제거 : **rstrip()**\n\n#### 4-4. 문자열 구성 파악 : isXX()\n1. **isalnum()** : 문자열이 숫자와 알파벳으로만 구성되었는지\n2. **isalpha()**\n3. **isdentifier()** : 문자열이 식별자로 사용 할 수 있는지\n4. **isdecimal()**\n5. **isdigit()**\n6. **isspace()**\n7. **islower()**\n8. **isupper()**\n\n#### 4-5. 문자열 찾기 : find(), rfind() ( 0부터 시작)\n1. **find()** : 왼쪽부터 찾아서 처음 등작하는 위치\n2. **rfind()** : 오른쪽부터 찾아서 처음 등장하는 위치 \n\n#### 4-6. 문자열과 in 연산자\n1. 문자열 내부에 어떤 문자열이 있는지 확인\n2. 결과는 **불**로 반환\n```python\nprint(\"안녕\" in \"안녕하세요?\")\n# 실행 결과\nTrue\n```\n\n#### 4-7. 문자열 자르기 : split()\n- 결과는 **리스트**로 반환\n```python\na = \"10 20 30 40 50\".split(\" \")\nprint(a)\n# 실행 결과\n['10', '20', '30', '40', '50']\n```","dir":"/python-grammar/","name":"dataType.md","path":"python-grammar/dataType.md","url":"/python-grammar/dataType.html"},{"sort":2,"permalink":"/spring5/2_mvc/","layout":"default","title":"스프링 MVC 설정","content":"<h1 id=\"스프링-mvc--설정\">스프링 MVC 설정</h1>\n\n<p>. 나중에 상세한 리스트를 정리해서 업로드 예정.</p>\n","dir":"/spring5/2_mvc/","name":"README.md","path":"spring5/2_mvc/README.md","url":"/spring5/2_mvc/"},{"sort":2,"permalink":"/python-grammar/","layout":"default","title":"파이썬 기본문법","content":"<h1 id=\"파이썬-기본문법\">파이썬 기본문법</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [시작하기](/python-grammar/gettingStart.html)\n- [자료형](/python-grammar/dataType.html)\n- [조건문](/python-grammar/condition.html)\n- [반복문](/python-grammar/loop.html)\n- [함수](/python-grammar/function.html)\n- [예외처리](/python-grammar/exeption.html)\n- [모듈](/python-grammar/module.html)\n- [클래스](/python-grammar/class.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/python-grammar/gettingStart.html\">시작하기</a></li>\n <li><a href=\"/python-grammar/dataType.html\">자료형</a></li>\n <li><a href=\"/python-grammar/condition.html\">조건문</a></li>\n <li><a href=\"/python-grammar/loop.html\">반복문</a></li>\n <li><a href=\"/python-grammar/function.html\">함수</a></li>\n <li><a href=\"/python-grammar/exeption.html\">예외처리</a></li>\n <li><a href=\"/python-grammar/module.html\">모듈</a></li>\n <li><a href=\"/python-grammar/class.html\">클래스</a></li>\n</ul>\n","dir":"/python-grammar/","name":"README.md","path":"python-grammar/README.md","url":"/python-grammar/"},{"sort":3,"layout":"default","title":"조건문","content":"<h1 id=\"조건문\">조건문</h1>\n\n<h2 id=\"-1--if\">[ 1 ] if</h2>\n\n<h4 id=\"1-1-if-문법\">1-1. if 문법</h4>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">if</span> <span class=\"n\">조건식</span><span class=\"p\">:</span>\n    <span class=\"n\">참</span> <span class=\"n\">일때</span><span class=\"p\">,</span> <span class=\"n\">실행문</span>\n</code></pre>  </div></div>\n<h4 id=\"1-2-비교연산자\">1-2. 비교연산자</h4>\n<ul>\n <li>==, !=, &lt;, &gt;,&lt;=, &gt;=</li>\n <li>\n <font color=\"blue\">범위구하기</font>\n <p>: 파이썬은 다음과 같은 연산을 허용함</p>\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">&lt;</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"c1\"># 실행 결과\n</span><span class=\"bp\">True</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h4 id=\"1-3-논리연산자\">1-3. 논리연산자</h4>\n<ul>\n <li>not, and, or</li>\n</ul>\n\n<h2 id=\"-2--ifelse-elif\">[ 2 ] if~else, elif</h2>\n\n<h4 id=\"2-1-ifelse-구문\">2-1. if~else 구문</h4>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">if</span> <span class=\"n\">조건문</span> <span class=\"p\">:</span>\n    <span class=\"n\">조건문이</span> <span class=\"n\">참일</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n<span class=\"k\">else</span> <span class=\"p\">:</span>\n    <span class=\"n\">조건문이</span> <span class=\"n\">거짓일</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n</code></pre>  </div></div>\n\n<h4 id=\"2-2-elif-구문\">2-2. elif 구문</h4>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">if</span> <span class=\"n\">조건문</span> <span class=\"n\">A</span> <span class=\"p\">:</span>\n    <span class=\"n\">A가</span> <span class=\"n\">참일</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n<span class=\"k\">elif</span> <span class=\"n\">조건문</span> <span class=\"n\">B</span> <span class=\"p\">:</span>\n    <span class=\"n\">B가</span> <span class=\"n\">참일</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n<span class=\"k\">elif</span> <span class=\"n\">조건문</span> <span class=\"n\">C</span> <span class=\"p\">:</span>\n    <span class=\"n\">C가</span> <span class=\"n\">참일</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n<span class=\"k\">else</span> <span class=\"p\">:</span>\n    <span class=\"n\">모든</span> <span class=\"n\">조건에</span> <span class=\"n\">해당하지</span> <span class=\"n\">않을</span> <span class=\"n\">때</span> <span class=\"n\">실행문</span>\n</code></pre>  </div></div>\n\n<h4 id=\"2-3-false로-변환되는-값들\">2-3. False로 변환되는 값들</h4>\n<ul>\n <li>None, 숫자 0 과 0.0, 빈 컨테이너 (빈 문자열, 빈 바이트열, 빈 리스트, 빈 튜플, 빈 딕셔너리 등)</li>\n</ul>\n\n<h4 id=\"2-4-pass-키워드\">2-4. pass 키워드</h4>\n<ol>\n <li>파이썬은 java 처럼 조건문의 실행문 부분을 ‘미구현’으로 할 수 없음</li>\n <li>조건문의 실행문을 ‘미구현’상태로 두고 싶을 때 <strong>pass</strong> 키워드 사용</li>\n</ol>\n\n<h4 id=\"2-5-raise-notimplementederror\">2-5. raise NotImplementedError</h4>\n<ul>\n <li>미구현 상태로 두었을 때, pass 키워드를 사용하지 않고 상태를 인식할 수 있도록 강제로 error를 발생시킬 수 있음\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">if</span> <span class=\"n\">조건문</span> <span class=\"p\">:</span>\n  <span class=\"c1\"># 미구현 상태\n</span>  <span class=\"k\">raise</span> <span class=\"nb\">NotImplementedError</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n","dir":"/python-grammar/","name":"condition.md","path":"python-grammar/condition.md","url":"/python-grammar/condition.html"},{"sort":3,"permalink":"/spring5/3_webDev/","layout":"default","title":"게시판 개발","content":"<h1 id=\"게시판-개발\">게시판 개발</h1>\n\n","dir":"/spring5/3_webDev/","name":"README.md","path":"spring5/3_webDev/README.md","url":"/spring5/3_webDev/"},{"sort":3,"layout":"default","title":"JDBC의 인증/권한 데이터와 시큐리티 연결하기","content":"<h1 id=\"jdbc의-인증권한-데이터와-시큐리티-연결하기\">JDBC의 인증/권한 데이터와 시큐리티 연결하기</h1>\n<blockquote>\n <p>인증과 권한 처리 : Authentication Manager <br />\n인증/권한 정보 제공 : Provider &lt;- UserDetailsService 인터페이스 구현체 <br />\nUserDetailsService 구현체 API : CachingUserDetailsService, InMemoryUserDetailsManager, JdbcDaoImpl, JdbcUserDetailsManager, LdapUserDetailsManager, LdapUserDetailsService 등</p>\n</blockquote>\n\n<h2 id=\"1-스프링-시큐리티가-jdbc를-이용하기-위한-테이블-설정\"><font color=\"blue\">1. 스프링 시큐리티가 JDBC를 이용하기 위한 테이블 설정</font></h2>\n<blockquote>\n <p>JdbcUserDetailsManager 클래스 이용 <br />\n스프링 시큐리티가 미리 정해놓은 인증/권한 관련 쿼리 :<a href=\"https://github.com/spring-projects/spring-security/blob/master/core/src/main/java/org/springframework/security/provisioning/JdbcUserDetailsManager.java\">참조</a></p>\n</blockquote>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. 스프링 시큐리티가 정해놓은 테이블 스키마를 생성해서 사용하는 방법</font></strong></p>\n\n<p><strong><font color=\"DarkOrange\">지정된 테이블 스키마 작성</font></strong></p>\n\n<p>. MySql 기준</p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">users</span><span class=\"p\">(</span>\n\t<span class=\"n\">username</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">enabled</span> <span class=\"nb\">char</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"k\">default</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span>\n    <span class=\"k\">primary</span> <span class=\"k\">key</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">));</span>\n    \n<span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">authorities</span><span class=\"p\">(</span>\n\t<span class=\"n\">username</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">authority</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">);</span>\n\n<span class=\"c1\">-- 테스트를 위한 dump 데이터를 입력</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span> <span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'user00'</span><span class=\"p\">,</span><span class=\"s1\">'pw00'</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span> <span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'member00'</span><span class=\"p\">,</span><span class=\"s1\">'pw00'</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span> <span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'admin00'</span><span class=\"p\">,</span><span class=\"s1\">'pw00'</span><span class=\"p\">);</span>\n\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">authorities</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">authority</span><span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'user00'</span><span class=\"p\">,</span> <span class=\"s1\">'ROLE_USER'</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">authorities</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">authority</span><span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'member00'</span><span class=\"p\">,</span> <span class=\"s1\">'ROLE_MANAGER'</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">authorities</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">authority</span><span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'admin00'</span><span class=\"p\">,</span> <span class=\"s1\">'ROLE_MANAGER'</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">authorities</span> <span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">authority</span><span class=\"p\">)</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'admin00'</span><span class=\"p\">,</span> <span class=\"s1\">'ROLE_ADMIN'</span><span class=\"p\">);</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">security-context.xml 설정</font></strong></p>\n\n<p>authentication-provider 하위에 <code class=\"language-plaintext highlighter-rouge\">jdbc-user-service</code> 를 설정한다.</p>\n\n<p>data-source-ref의 값인 ‘dataSource’ 가 root-context.xml에 등록되어 있어야 한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n\t\t<span class=\"nt\">&lt;security:authentication-provider&gt;</span>\n\t\t\t<span class=\"nt\">&lt;security:jdbc-user-service</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n\t<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">로그인 테스트</font></strong></p>\n\n<p>탐캣을 실행하고 http://localhost:8080/sample/admin 으로 접속하여 ‘admin00’, ‘pw00’ 으로 로그인 한다.</p>\n\n<p>console에 아래와 같이 쿼리가 실행되는 것을 확인한다.</p>\n\n<p>아직, PasswordEncoder를 등록하지 않아서 에러가 발생하지만 쿼리 결과가 실행되는 것을 확인 할 수 있다.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jdbc.sqltiming - select username,password,enabled from users where username = 'admin00' \nINFO : jdbc.resultsettable - \n|---------|-------------|\n|username |authority    |\n|---------|-------------|\n|[unread] |ROLE_MANAGER |\n|[unread] |ROLE_ADMIN   |\n|---------|-------------|\n\n(..생략..)\n\n// PasswordEncoder 없다는 에러 발생, spring5는 반드시 있어야 함.\njava.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id \"null\"\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. 기존에 작성된 테이블 스키마를 사용하는 방법</font></strong></p>\n\n<p><strong><font color=\"DarkOrange\">기존의 테이블 스키마</font></strong></p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">tbl_member</span><span class=\"p\">(</span>\n\t<span class=\"n\">userid</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span> <span class=\"k\">primary</span> <span class=\"k\">key</span><span class=\"p\">,</span>\n    <span class=\"n\">userpw</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">regdate</span> <span class=\"nb\">timestamp</span> <span class=\"k\">default</span> <span class=\"k\">current_timestamp</span><span class=\"p\">,</span>\n    <span class=\"n\">updatedate</span> <span class=\"nb\">timestamp</span> <span class=\"k\">default</span> <span class=\"k\">current_timestamp</span><span class=\"p\">,</span>\n    <span class=\"n\">enabled</span> <span class=\"nb\">char</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">default</span> <span class=\"s1\">'1'</span>\n<span class=\"p\">);</span>\n\n\n<span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">tbl_member_auth</span><span class=\"p\">(</span>\n\t<span class=\"n\">userid</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">auth</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span>\n<span class=\"p\">);</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">BCryptPasswordEncoder 사용하여 PasswordEncoder 등록하기</font></strong></p>\n\n<blockquote>\n <p><strong>BCryptPasswordEncoder</strong> : 태생자체가 패스워드를 저장하는 용도로 설계됨, 암호화는 가능하지만 복호화는 안됨. <br />\nBCryptPasswordEncoder는 스프링 시큐리티 API 에 이미 정의되어 있음.</p>\n</blockquote>\n\n<p>security-context.xml 에 스프링 시큐리티 API 인 BCryptPasswordEncoder 를 빈으로 등록하고, password-encoder 로 추가한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"bcryptPasswordEncoder\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n    <span class=\"nt\">&lt;security:authentication-provider&gt;</span>\n        <span class=\"nt\">&lt;security:password-encoder</span> <span class=\"na\">ref=</span><span class=\"s\">\"bcryptPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">PasswordEncoder 구현하여 사용자 PasswordEncoder를 만들어보기</font></strong></p>\n\n<p>encode()와 matches() 만 구현하면 되는데, 하기 예제는 인코딩을 하지 않는 로직이다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.security.crypto.password.PasswordEncoder</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CustomNoOpPasswordEncoder</span> <span class=\"kd\">implements</span> <span class=\"nc\">PasswordEncoder</span><span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">encode</span><span class=\"o\">(</span><span class=\"nc\">CharSequence</span> <span class=\"n\">rawPassword</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">rawPassword</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">matches</span><span class=\"o\">(</span><span class=\"nc\">CharSequence</span> <span class=\"n\">rawPassword</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">encodedPassword</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">rawPassword</span><span class=\"o\">.</span><span class=\"na\">toString</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">encodedPassword</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>작성한 사용자 passwordEncoder 를 Bean 으로 등록하고, security 설정에 적용한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customNoOpPasswordEncoder\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomNoOpPasswordEncoder\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\t<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n\t\t<span class=\"nt\">&lt;security:authentication-provider&gt;</span>\n \t\t\t<span class=\"nt\">&lt;security:password-encoder</span> <span class=\"na\">ref=</span><span class=\"s\">\"customNoOpPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n\t<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">스프링 시큐리티 기본 스키마에 맞추어 인증/권한 쿼리 등록하기</font></strong></p>\n\n<p>security-context.xml 에 <code class=\"language-plaintext highlighter-rouge\">user-by-username-query</code> 와 <code class=\"language-plaintext highlighter-rouge\">authorities-by-username-query</code> 속성에 스프링 시큐리티에서 필요로 하는 인증/권한 정보를 가져 올 수 있는 쿼리를 등록한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n\t\t<span class=\"nt\">&lt;security:authentication-provider&gt;</span>\n\t\t\t<span class=\"nt\">&lt;security:password-encoder</span> <span class=\"na\">ref=</span><span class=\"s\">\"bcryptPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"nt\">&lt;security:jdbc-user-service</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span> \n            <span class=\"na\">users-by-username-query=</span><span class=\"s\">\"select userid, userpw, enabled from tbl_member where userid = ?\"</span>\n\t\t\t<span class=\"na\">authorities-by-username-query=</span><span class=\"s\">\"select userid, auth from tbl_member_auth where userid = ?\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n\t<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"DarkOrange\">테스트 하기</font></strong></p>\n\n<p>Junit Test 를 이용해 사용자 정보와 권한 정보의 덤프 데이터를 등록한다. 그러면 패스워드가 인코딩된 사용자 정보가 입력될 것이다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">({</span> <span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">,</span>\n\t\t\t\t\t  \t<span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/security-context.xml\"</span> <span class=\"o\">})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MapperTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod_</span> <span class=\"o\">=</span> <span class=\"nd\">@Autowired</span><span class=\"o\">)</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">PasswordEncoder</span> <span class=\"n\">pwencoder</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod_</span> <span class=\"o\">=</span> <span class=\"nd\">@Autowired</span><span class=\"o\">)</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">DataSource</span> <span class=\"n\">dataSource</span><span class=\"o\">;</span>\n\t\n<span class=\"c1\">//\t@Test</span>\n<span class=\"c1\">//  사용자 정보 등록 </span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testInsertMember</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">String</span> <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s\">\"insert into tbl_member(userid, userpw, username) values (?, ?, ?);\"</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n\t\t\t\n\t\t\t<span class=\"nc\">Connection</span> <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t\t<span class=\"nc\">PreparedStatement</span> <span class=\"n\">psmt</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t\t<span class=\"k\">try</span> <span class=\"o\">{</span>\n\t\t\t\t<span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">dataSource</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">();</span>\n\t\t\t\t<span class=\"n\">psmt</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"na\">prepareStatement</span><span class=\"o\">(</span><span class=\"n\">sql</span><span class=\"o\">);</span>\n\t\t\t\t\n\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">pwencoder</span><span class=\"o\">.</span><span class=\"na\">encode</span><span class=\"o\">(</span><span class=\"s\">\"pw\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">));</span>\n\t\t\t\t\n\t\t\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"mi\">80</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"user\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"s\">\"일반사용자\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t<span class=\"o\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"mi\">90</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"manager\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"s\">\"운영자\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t<span class=\"o\">}</span><span class=\"k\">else</span> <span class=\"o\">{</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"admin\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"s\">\"관리자\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t<span class=\"o\">}</span>\n\t\t\t\t\n\t\t\t\t<span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">executeUpdate</span><span class=\"o\">();</span>\n\t\t\t\t\n\t\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t<span class=\"c1\">// TODO Auto-generated catch block</span>\n\t\t\t\t<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n\t\t\t<span class=\"o\">}</span><span class=\"k\">finally</span> <span class=\"o\">{</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">psmt</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"k\">try</span> <span class=\"o\">{</span><span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();}</span> <span class=\"k\">catch</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{}}</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">con</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"k\">try</span> <span class=\"o\">{</span><span class=\"n\">con</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();}</span><span class=\"k\">catch</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{}}</span>\n\t\t\t<span class=\"o\">}</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n\t\n\n    <span class=\"c1\">// 권한 정보 등록 </span>\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testInsertAuth</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">String</span> <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s\">\"insert into tbl_member_auth (userid, auth) values(?, ?);\"</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">for</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n\t\t\t\n\t\t\t<span class=\"nc\">Connection</span> <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t\t<span class=\"nc\">PreparedStatement</span> <span class=\"n\">psmt</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t\t<span class=\"k\">try</span> <span class=\"o\">{</span>\n\t\t\t\t <span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">dataSource</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">();</span>\n\t\t\t\t <span class=\"n\">psmt</span> <span class=\"o\">=</span> <span class=\"n\">con</span><span class=\"o\">.</span><span class=\"na\">prepareStatement</span><span class=\"o\">(</span><span class=\"n\">sql</span><span class=\"o\">);</span>\n\t\t\t\t \n\t\t\t\t <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"mi\">80</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"user\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"s\">\"ROLE_USER\"</span><span class=\"o\">);</span>\n\t\t\t\t <span class=\"o\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"mi\">90</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"manager\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"s\">\"ROLE_MEMBER\"</span><span class=\"o\">);</span>\n\t\t\t\t <span class=\"o\">}</span><span class=\"k\">else</span> <span class=\"o\">{</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">\"admin\"</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"o\">);</span>\n\t\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">setString</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"s\">\"ROLE_ADMIN\"</span><span class=\"o\">);</span>\n\t\t\t\t <span class=\"o\">}</span>\n\t\t\t\t \n\t\t\t\t <span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">executeUpdate</span><span class=\"o\">();</span>\n\t\t\t\t \n\t\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\t<span class=\"c1\">// TODO Auto-generated catch block</span>\n\t\t\t\t<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n\t\t\t<span class=\"o\">}</span><span class=\"k\">finally</span> <span class=\"o\">{</span>\n\t\t\t\t<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">psmt</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"k\">try</span><span class=\"o\">{</span><span class=\"n\">psmt</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();}</span><span class=\"k\">catch</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{}}</span>\n\t\t\t\t<span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">con</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"k\">try</span><span class=\"o\">{</span><span class=\"n\">con</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();}</span><span class=\"k\">catch</span><span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{}}</span>\n\t\t\t<span class=\"o\">}</span>\n\t\t<span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<p>탐캣을 실행 시키고, http://localhost:8080/sample/admin 으로 접속하여 유효한 ID와 PW로 로그인한다. <br />\nadmin 페이지이므로, ‘admin90’, ‘pw90’ 으로 로그인하면 될것이다. \n로그인이 성공하면, 콘솔에 아래와 같이 정상적으로 조회된 정보가 보여진다.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>INFO : jdbc.sqltiming - select userid, userpw, enabled from tbl_member where userid = 'admin90' \n...\nINFO : jdbc.resultsettable - \n|--------|-------------------------------------------------------------|--------|\n|userid  |userpw                                                       |enabled |\n|--------|-------------------------------------------------------------|--------|\n|admin90 |$2a$10$P42FSZc7yaZBkgrH0HwKyOBzUqiS7aVt2FyFuBPCUcQ/JDsSklKcK |true    |\n|--------|-------------------------------------------------------------|--------|\n...\nINFO : jdbc.sqltiming - select userid, auth from tbl_member_auth where userid = 'admin90' \n...\nINFO : jdbc.resultsettable - \n|---------|-----------|\n|userid   |auth       |\n|---------|-----------|\n|[unread] |ROLE_ADMIN |\n|---------|-----------|\n</code></pre>  </div></div>\n","dir":"/spring5/7_security/","name":"3_authWithJdbc.md","path":"spring5/7_security/3_authWithJdbc.md","url":"/spring5/7_security/3_authWithJdbc.html"},{"sort":3,"layout":"default","title":"모델 개발","content":"<h1 id=\"모델-개발\">모델 개발</h1>\n\n<p><br /></p>\n\n<h2 id=\"1-bookmarkmodelspy-에-테이블-정의\">1. bookmark/models.py 에 테이블 정의</h2>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Bookmark</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"s\">'TITLE'</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"s\">'URL'</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">title</span>\n</code></pre>  </div></div>\n\n<p><br /></p>\n\n<h2 id=\"2-admin-사이트에-테이블-반영\">2. Admin 사이트에 테이블 반영</h2>\n\n<ul>\n <li>models.py 에서 정의한 테이블을 bookmark/admin.py 파일에 등록</li>\n <li>admin.site.register(Bookmark, BookmarkAdmin) 함수 호출대신 데코레이션 <code class=\"language-plaintext highlighter-rouge\">@admin.register(Bookmark)</code> 사용하면 편리함</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bookmark.models</span> <span class=\"kn\">import</span> <span class=\"n\">Bookmark</span>\n\n<span class=\"o\">@</span><span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Bookmark</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">BookmarkAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">'id'</span><span class=\"p\">,</span> <span class=\"s\">'title'</span><span class=\"p\">,</span> <span class=\"s\">'url'</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p><br /></p>\n\n<h2 id=\"3-데이터베이스-변경-사항-반영\">3. 데이터베이스 변경 사항 반영</h2>\n\n<ul>\n <li><strong>새로 생성한 bookmark 에 대한 DB 변경 사항을 추출하여, 반영하는 작업</strong></li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py makemigrations bookmark <span class=\"c\">#bookmark 생략 가능</span>\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py migrate\n</code></pre>  </div></div>\n\n<ul>\n <li><strong>테이블 모습 확인하기</strong></li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span><span class=\"nv\">$ </span>python manage.py runserver\n</code></pre>  </div></div>\n<ul>\n <li>http://localhost/admin 에서 bookmark 테이블 확인</li>\n</ul>\n","dir":"/python/developBookmark/","name":"3_model.md","path":"python/developBookmark/3_model.md","url":"/python/developBookmark/3_model.html"},{"sort":3,"permalink":"/spring5/","layout":"default","title":"스프링5","content":"<h1 id=\"스프링5\">스프링5</h1>\n<ul>\n <li>스프링 5.x</li>\n <li>intellij</li>\n <li>xml, java Configration, 어노테이션</li>\n <li>oracle</li>\n <li>Lombok : getter/setter</li>\n <li>myBatis</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [개발환경 구축](/spring5/1_env/)\n    - [스프링 개발환경 구축](/spring5/1_env/env.html)\n    - [의존성 주입 / Lombok](/spring5/1_env/di_lombok.html)\n- [스프링 MVC 설정](/spring5/2_mvc/)\n    - [스프링 MVC 기본 설정](/spring5/2_mvc/architect.html)\n    - [스프링 MVC의 Controller](/spring5/2_mvc/controller.html)\n- [게시판 개발](/spring5/3_webDev/)\n    - [프로젝트 패키지 구성, 네이밍, 설계](/spring5/3_webDev/1_architect.html)\n    - [xml 을 이용한 프로젝트 뼈대 설정](/spring5/3_webDev/2_xmlSetting.html)\n    - [Java Configuration 을 이용한 프로젝트 뼈대 설정](/spring5/3_webDev/3_javaSetting.html)\n    - [영속계층(DB, Mapper) 구현](/spring5/3_webDev/4_persistence.html)\n    - [비지니스 계층 (Service) 구현](/spring5/3_webDev/5_business.html)\n    - [프레젠테이션 계층(Controller) 구현](/spring5/3_webDev/6_presentation.html)\n    - [화면 처리](/spring5/3_webDev/7_ui.html)\n    - [페이징 처리](/spring5/3_webDev/8_paging.html)\n    - [검색 처리](/spring5/3_webDev/9_search.html)\n    - [테스트](/spring5/3_webDev/11_test.html)\n- [REST 방식과 Ajax 를 이용하는 댓글 처리](/spring5/4_rest_ajsx_reply/)\n    - [REST 방식](/spring5/4_rest_ajsx_reply/1_rest_anotation.html)\n    - [Ajax 댓글 달기 예제](/spring5/4_rest_ajsx_reply/2_reply_example.html)\n- [AOP와 트랜젝션](/spring5/5_aop_transaction/)\n- [파일 업로드 처리](/spring5/6_fileUpload/)\n- [스프링 웹 시큐리티](/spring5/7_security/)\n    - [Spring Security 설정](/spring5/7_security/1_setting.html)\n    - [로그인과 로그아웃 처리 (security-context 설정과 로그인 관련 Handler 사용법)](/spring5/7_security/2_loginlogout.html)\n    - [JDBC의 인증/권한 데이터와 시큐리티 연결하기](/spring5/7_security/3_authWithJdbc.html)\n    - [커스텀 UserDetailsService 활용(최종적으로 사용해야 할 인증방식)](/spring5/7_security/4_authWithUserDetailsService.html)\n    - [JSP 에서 시큐리티 태그 사용하기](/spring5/7_security/5_jspWithSecurityTaglib.html)\n    - [자동로그인 (remember-me)](/spring5/7_security/6_remember_me.html)\n    - [스프링 시큐리티 설정 요약](/spring5/7_security/7_summary.html)\n    - [기존 프로젝트에 시큐리티 접목](/spring5/7_security/8_applySecurityExistProject.html)\n- [Intellij와 gradle을 이용하는 스프링 환경 구축](/spring5/8_intellij_gradle/)\n    - [설치](/spring5/8_intellij_gradle/1_install.html)\n    - [프로젝트 생성](/spring5/8_intellij_gradle/2_project.html)\n- [Q &amp;amp; A](/spring5/9_QNA/)\n    - [어노테이션](/spring5/9_QNA/1_annotation.html)\n    - [Q&amp;amp;A](/spring5/9_QNA/2_qna.html)\n- [MyBatis](/spring5/10_mybatis/)\n    - [마이바티스 동적 SQL](/spring5/10_mybatis/1_myBatis.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/spring5/1_env/\">개발환경 구축</a>\n <ul>\n <li><a href=\"/spring5/1_env/env.html\">스프링 개발환경 구축</a></li>\n <li><a href=\"/spring5/1_env/di_lombok.html\">의존성 주입 / Lombok</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/2_mvc/\">스프링 MVC 설정</a>\n <ul>\n <li><a href=\"/spring5/2_mvc/architect.html\">스프링 MVC 기본 설정</a></li>\n <li><a href=\"/spring5/2_mvc/controller.html\">스프링 MVC의 Controller</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/3_webDev/\">게시판 개발</a>\n <ul>\n <li><a href=\"/spring5/3_webDev/1_architect.html\">프로젝트 패키지 구성, 네이밍, 설계</a></li>\n <li><a href=\"/spring5/3_webDev/2_xmlSetting.html\">xml 을 이용한 프로젝트 뼈대 설정</a></li>\n <li><a href=\"/spring5/3_webDev/3_javaSetting.html\">Java Configuration 을 이용한 프로젝트 뼈대 설정</a></li>\n <li><a href=\"/spring5/3_webDev/4_persistence.html\">영속계층(DB, Mapper) 구현</a></li>\n <li><a href=\"/spring5/3_webDev/5_business.html\">비지니스 계층 (Service) 구현</a></li>\n <li><a href=\"/spring5/3_webDev/6_presentation.html\">프레젠테이션 계층(Controller) 구현</a></li>\n <li><a href=\"/spring5/3_webDev/7_ui.html\">화면 처리</a></li>\n <li><a href=\"/spring5/3_webDev/8_paging.html\">페이징 처리</a></li>\n <li><a href=\"/spring5/3_webDev/9_search.html\">검색 처리</a></li>\n <li><a href=\"/spring5/3_webDev/11_test.html\">테스트</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/4_rest_ajsx_reply/\">REST 방식과 Ajax 를 이용하는 댓글 처리</a>\n <ul>\n <li><a href=\"/spring5/4_rest_ajsx_reply/1_rest_anotation.html\">REST 방식</a></li>\n <li><a href=\"/spring5/4_rest_ajsx_reply/2_reply_example.html\">Ajax 댓글 달기 예제</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/5_aop_transaction/\">AOP와 트랜젝션</a></li>\n <li><a href=\"/spring5/6_fileUpload/\">파일 업로드 처리</a></li>\n <li><a href=\"/spring5/7_security/\">스프링 웹 시큐리티</a>\n <ul>\n <li><a href=\"/spring5/7_security/1_setting.html\">Spring Security 설정</a></li>\n <li><a href=\"/spring5/7_security/2_loginlogout.html\">로그인과 로그아웃 처리 (security-context 설정과 로그인 관련 Handler 사용법)</a></li>\n <li><a href=\"/spring5/7_security/3_authWithJdbc.html\">JDBC의 인증/권한 데이터와 시큐리티 연결하기</a></li>\n <li><a href=\"/spring5/7_security/4_authWithUserDetailsService.html\">커스텀 UserDetailsService 활용(최종적으로 사용해야 할 인증방식)</a></li>\n <li><a href=\"/spring5/7_security/5_jspWithSecurityTaglib.html\">JSP 에서 시큐리티 태그 사용하기</a></li>\n <li><a href=\"/spring5/7_security/6_remember_me.html\">자동로그인 (remember-me)</a></li>\n <li><a href=\"/spring5/7_security/7_summary.html\">스프링 시큐리티 설정 요약</a></li>\n <li><a href=\"/spring5/7_security/8_applySecurityExistProject.html\">기존 프로젝트에 시큐리티 접목</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/8_intellij_gradle/\">Intellij와 gradle을 이용하는 스프링 환경 구축</a>\n <ul>\n <li><a href=\"/spring5/8_intellij_gradle/1_install.html\">설치</a></li>\n <li><a href=\"/spring5/8_intellij_gradle/2_project.html\">프로젝트 생성</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/9_QNA/\">Q &amp; A</a>\n <ul>\n <li><a href=\"/spring5/9_QNA/1_annotation.html\">어노테이션</a></li>\n <li><a href=\"/spring5/9_QNA/2_qna.html\">Q&amp;A</a></li>\n </ul>\n </li>\n <li><a href=\"/spring5/10_mybatis/\">MyBatis</a>\n <ul>\n <li><a href=\"/spring5/10_mybatis/1_myBatis.html\">마이바티스 동적 SQL</a></li>\n </ul>\n </li>\n</ul>\n","dir":"/spring5/","name":"README.md","path":"spring5/README.md","url":"/spring5/"},{"sort":3,"layout":"default","title":"Java Configuration 을 이용한 프로젝트 뼈대 설정","content":"<h1 id=\"java-configuration-을-이용한-프로젝트-뼈대-설정\">Java Configuration 을 이용한 프로젝트 뼈대 설정</h1>\n\n<blockquote>\n <p>pom.xml 수정 <br />\n데이터베이스 설정 <br />\n스프링 MVC 처리</p>\n</blockquote>\n\n<h2 id=\"1-pomxml-설정\">1. pom.xml 설정</h2>\n<ol>\n <li>java 버전, 스프링 버전 변경\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;properties&gt;</span>\n     <span class=\"nt\">&lt;java-version&gt;</span>1.8<span class=\"nt\">&lt;/java-version&gt;</span>\n     <span class=\"nt\">&lt;org.springframework-version&gt;</span>5.2.12.RELEASE<span class=\"nt\">&lt;/org.springframework-version&gt;</span>\n     <span class=\"nt\">&lt;org.aspectj-version&gt;</span>1.6.10<span class=\"nt\">&lt;/org.aspectj-version&gt;</span>\n     <span class=\"nt\">&lt;org.slf4j-version&gt;</span>1.6.6<span class=\"nt\">&lt;/org.slf4j-version&gt;</span>\n <span class=\"nt\">&lt;/properties&gt;</span>\n <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n  <span class=\"nt\">&lt;plugin&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.apache.maven.plugins<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>maven-compiler-plugin<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.5.1<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;configuration&gt;</span>\n         <span class=\"nt\">&lt;source&gt;</span>1.8<span class=\"nt\">&lt;/source&gt;</span>\n         <span class=\"nt\">&lt;target&gt;</span>1.8<span class=\"nt\">&lt;/target&gt;</span>\n         <span class=\"nt\">&lt;compilerArgument&gt;</span>-Xlint:all<span class=\"nt\">&lt;/compilerArgument&gt;</span>\n         <span class=\"nt\">&lt;showWarnings&gt;</span>true<span class=\"nt\">&lt;/showWarnings&gt;</span>\n         <span class=\"nt\">&lt;showDeprecation&gt;</span>true<span class=\"nt\">&lt;/showDeprecation&gt;</span>\n     <span class=\"nt\">&lt;/configuration&gt;</span>\n <span class=\"nt\">&lt;/plugin&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>스프링 관련 추가 라이브러리\n <ul>\n <li>spring-tx, spring-jdbc, spring-test</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-jdbc<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>   \n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-tx<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- spring-test --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.springframework<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>spring-test<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>${org.springframework-version}<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>DB 연결 관련 라이브러리 추가\n <ul>\n <li>HikariCP, MyBatis, mysql-connector-java, mybatis-spring, Log4jdbc</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!--DB 관련 추가 라이브러 --&gt;</span>\n <span class=\"c\">&lt;!-- MySQL --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>mysql<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mysql-connector-java<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>8.0.22<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n     <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>com.zaxxer<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>HikariCP<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.4.5<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- MyBatis 3.4.1 --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.mybatis<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mybatis<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.5.4<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n <span class=\"c\">&lt;!-- MyBatis-Spring --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.mybatis<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>mybatis-spring<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.0.3<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n     <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.bgee.log4jdbc-log4j2<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>log4jdbc-log4j2-jdbc4<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>1.16<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>\n <p>Lombox 추가</p>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- lombok --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>org.projectlombok<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>lombok<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>1.18.0<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>jUnit 버전 변경\n <ul>\n <li>4.7 -&gt; 4.12</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- Test --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>junit<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>junit<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>4.12<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>test<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span> \n</code></pre>  </div> </div>\n </li>\n <li>Servlet 버전 변경\n <ul>\n <li>2.5 -&gt; 3.0 이상</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- Servlet --&gt;</span>\n <span class=\"c\">&lt;!-- &lt;dependency&gt;\n     &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n     &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;\n     &lt;version&gt;2.5&lt;/version&gt;\n     &lt;scope&gt;provided&lt;/scope&gt;\n &lt;/dependency&gt; --&gt;</span>\n <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>javax.servlet<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>javax.servlet-api<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>3.1.0<span class=\"nt\">&lt;/version&gt;</span>\n     <span class=\"nt\">&lt;scope&gt;</span>provided<span class=\"nt\">&lt;/scope&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>Controller 객체를 json으로 변환하는 라이브러리 추가\n <ul>\n <li>jackson-binder</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span>\n <span class=\"nt\">&lt;dependency&gt;</span>\n     <span class=\"nt\">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class=\"nt\">&lt;/groupId&gt;</span>\n     <span class=\"nt\">&lt;artifactId&gt;</span>jackson-databind<span class=\"nt\">&lt;/artifactId&gt;</span>\n     <span class=\"nt\">&lt;version&gt;</span>2.11.3<span class=\"nt\">&lt;/version&gt;</span>\n <span class=\"nt\">&lt;/dependency&gt;</span>\t\t\t\t\n</code></pre>  </div> </div>\n </li>\n <li>Maven Project Update\n <ul>\n <li>프로젝트 우클릭 &gt; Maven &gt; Update Project…</li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"2-테이블-생성과-더미-데이터-생성\">2. 테이블 생성과 더미 데이터 생성</h2>\n<ul>\n <li>mysqlWorkbench로 ‘book_ex’/’book_ex’로 접속한다. (기본 DB는 testdb로 정하였었다.)</li>\n <li>\n <p>아래의 스키마를 실행하여 테이블을 생성한다.</p>\n\n <div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"nv\">`testdb`</span><span class=\"p\">.</span><span class=\"nv\">`tbl_board`</span> <span class=\"p\">(</span>\n  <span class=\"nv\">`bno`</span> <span class=\"nb\">INT</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span> <span class=\"n\">AUTO_INCREMENT</span><span class=\"p\">,</span>\n  <span class=\"nv\">`title`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`content`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`writer`</span> <span class=\"n\">NVARCHAR</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n  <span class=\"nv\">`regdate`</span> <span class=\"nb\">TIMESTAMP</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"nv\">`updatedate`</span> <span class=\"nb\">TIMESTAMP</span> <span class=\"k\">DEFAULT</span> <span class=\"k\">CURRENT_TIMESTAMP</span><span class=\"p\">,</span>\n  <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"nv\">`bno`</span><span class=\"p\">));</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>더미 데이터를 5건 정도 입력한다.</p>\n\n <div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">tbl_board</span> <span class=\"p\">(</span> <span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">writer</span><span class=\"p\">)</span>\n  <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"s1\">'테스트제목'</span><span class=\"p\">,</span><span class=\"s1\">'테스트내용'</span><span class=\"p\">,</span><span class=\"s1\">'user00'</span><span class=\"p\">);</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"3-데이터베이스-설정\">3. 데이터베이스 설정</h2>\n<ol>\n <li>\n <p>DataSource, sqlSession, log4jdbc, MyBatis 설정</p>\n\n <ul>\n <li>RootConfig.java</li>\n </ul>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@Configuration</span>\n <span class=\"nd\">@MapperScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.mapper\"</span><span class=\"o\">})</span>\n <span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RootConfig</span> <span class=\"o\">{</span>\n     <span class=\"nd\">@Bean</span>\n     <span class=\"kd\">public</span> <span class=\"nc\">DataSource</span> <span class=\"nf\">dataSource</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n         <span class=\"nc\">HikariConfig</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HikariConfig</span><span class=\"o\">();</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setDriverClassName</span><span class=\"o\">(</span><span class=\"s\">\"net.sf.log4jdbc.sql.jdbcapi.DriverSpy\"</span><span class=\"o\">);</span>\n         <span class=\"c1\">//config.setDriverClassName(\"com.mysql.cj.jdbc.Driver\");</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setJdbcUrl</span><span class=\"o\">(</span><span class=\"s\">\"jdbc:log4jdbc:mysql://localhost:3306/testDb\"</span><span class=\"o\">);</span>\n         <span class=\"c1\">//config.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setUsername</span><span class=\"o\">(</span><span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setPassword</span><span class=\"o\">(</span><span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"serverTimezone\"</span><span class=\"o\">,</span> <span class=\"s\">\"UTC\"</span><span class=\"o\">);</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"cachePrepStmts\"</span><span class=\"o\">,</span> <span class=\"s\">\"true\"</span><span class=\"o\">);</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"prepStmtCacheSize\"</span><span class=\"o\">,</span> <span class=\"s\">\"250\"</span><span class=\"o\">);</span>\n         <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"prepStmtCacheSqlLimit\"</span><span class=\"o\">,</span> <span class=\"s\">\"2048\"</span><span class=\"o\">);</span>\n\n         <span class=\"nc\">HikariDataSource</span> <span class=\"n\">dataSource</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HikariDataSource</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span>\n         <span class=\"k\">return</span> <span class=\"n\">dataSource</span><span class=\"o\">;</span>\n     <span class=\"o\">}</span>\n        \n     <span class=\"nd\">@Bean</span>\n     <span class=\"kd\">public</span> <span class=\"nc\">SqlSessionFactory</span> <span class=\"nf\">sqlSessionFactory</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n         <span class=\"nc\">SqlSessionFactoryBean</span> <span class=\"n\">sqlSessionFactory</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SqlSessionFactoryBean</span><span class=\"o\">();</span>\n         <span class=\"n\">sqlSessionFactory</span><span class=\"o\">.</span><span class=\"na\">setDataSource</span><span class=\"o\">(</span><span class=\"n\">dataSource</span><span class=\"o\">());</span>\n         <span class=\"k\">return</span> <span class=\"o\">(</span><span class=\"nc\">SqlSessionFactory</span><span class=\"o\">)</span> <span class=\"n\">sqlSessionFactory</span><span class=\"o\">.</span><span class=\"na\">getObject</span><span class=\"o\">();</span>\n     <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p><code class=\"language-plaintext highlighter-rouge\">log4jdbc.log4j2.properties</code> 파일 추가</p>\n\n <ul>\n <li>src/main/resource 폴더하위</li>\n </ul>\n\n <div class=\"language-properties highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"py\">log4jdbc.spylogdelegator.name</span><span class=\"p\">=</span><span class=\"s\">net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator</span>\n <span class=\"c\">#log4jdbc.auto.load.popular.drivers = false\n</span></code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"4-jdbc-test\">4. JDBC TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지 생성</li>\n <li>JDBCTest.java 생성 후 테스트코드 작성</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">JDBCTest</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">static</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">try</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"nc\">Class</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">try</span><span class=\"o\">{</span>\n\t\t\t<span class=\"n\">conn</span> <span class=\"o\">=</span> \n\t\t\t\t<span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"s\">\"jdbc:mysql://localhost/testDb?characterEncoding=UTF-8&amp;serverTimezone=UTC\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\n\t\t\t<span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span> \n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n\n<h2 id=\"5-datasource--connectionpool-test\">5. DataSource &amp; ConnectionPool TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지</li>\n <li>DataSourceTest.java 생성 후 테스트코드 작성\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"n\">classes</span><span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">RootConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">DataSourceTest</span> <span class=\"o\">{</span>\n\n  <span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n  <span class=\"kd\">private</span> <span class=\"nc\">DataSource</span> <span class=\"n\">ds</span><span class=\"o\">;</span> \n\t\n  <span class=\"nd\">@Test</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n      <span class=\"k\">try</span><span class=\"o\">{</span>\n          <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">();</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n\n<h2 id=\"6-javaconfiguration-임을-pomxml-에-설정\">6. JavaConfiguration 임을 pom.xml 에 설정</h2>\n\n<ul>\n <li>pom.xml</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- xml config 사용안함  --&gt;</span>\n<span class=\"nt\">&lt;plugin&gt;</span>\n<span class=\"nt\">&lt;groupId&gt;</span>org.apache.maven.plugins<span class=\"nt\">&lt;/groupId&gt;</span>\n<span class=\"nt\">&lt;artifactId&gt;</span>maven-war-plugin<span class=\"nt\">&lt;/artifactId&gt;</span>\n<span class=\"nt\">&lt;version&gt;</span>3.2.0<span class=\"nt\">&lt;/version&gt;</span>\n<span class=\"nt\">&lt;configuration&gt;</span>\n    <span class=\"nt\">&lt;failOnMissingWebXml&gt;</span>false<span class=\"nt\">&lt;/failOnMissingWebXml&gt;</span>\n<span class=\"nt\">&lt;/configuration&gt;</span>\n<span class=\"nt\">&lt;/plugin&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"7-rootconfigjava\">7. RootConfig.java</h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.config</code> 패키지 하위</li>\n <li>MapperScan 설정</li>\n <li>데이터베이스 설정</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Configuration</span>\n<span class=\"nd\">@MapperScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.mapper\"</span><span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RootConfig</span> <span class=\"o\">{</span>\n\t<span class=\"nd\">@Bean</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">DataSource</span> <span class=\"nf\">dataSource</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">HikariConfig</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HikariConfig</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setDriverClassName</span><span class=\"o\">(</span><span class=\"s\">\"net.sf.log4jdbc.sql.jdbcapi.DriverSpy\"</span><span class=\"o\">);</span>\n\t\t<span class=\"c1\">//config.setDriverClassName(\"com.mysql.cj.jdbc.Driver\");</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setJdbcUrl</span><span class=\"o\">(</span><span class=\"s\">\"jdbc:log4jdbc:mysql://localhost:3306/testDb\"</span><span class=\"o\">);</span>\n\t\t<span class=\"c1\">//config.setJdbcUrl(\"jdbc:mysql://localhost:3306/testDb\");</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setUsername</span><span class=\"o\">(</span><span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">setPassword</span><span class=\"o\">(</span><span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"serverTimezone\"</span><span class=\"o\">,</span> <span class=\"s\">\"UTC\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"cachePrepStmts\"</span><span class=\"o\">,</span> <span class=\"s\">\"true\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"prepStmtCacheSize\"</span><span class=\"o\">,</span> <span class=\"s\">\"250\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"na\">addDataSourceProperty</span><span class=\"o\">(</span><span class=\"s\">\"prepStmtCacheSqlLimit\"</span><span class=\"o\">,</span> <span class=\"s\">\"2048\"</span><span class=\"o\">);</span>\n\n\t\t<span class=\"nc\">HikariDataSource</span> <span class=\"n\">dataSource</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">HikariDataSource</span><span class=\"o\">(</span><span class=\"n\">config</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">dataSource</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Bean</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">SqlSessionFactory</span> <span class=\"nf\">sqlSessionFactory</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">SqlSessionFactoryBean</span> <span class=\"n\">sqlSessionFactory</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">SqlSessionFactoryBean</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">sqlSessionFactory</span><span class=\"o\">.</span><span class=\"na\">setDataSource</span><span class=\"o\">(</span><span class=\"n\">dataSource</span><span class=\"o\">());</span>\n\t\t<span class=\"k\">return</span> <span class=\"o\">(</span><span class=\"nc\">SqlSessionFactory</span><span class=\"o\">)</span> <span class=\"n\">sqlSessionFactory</span><span class=\"o\">.</span><span class=\"na\">getObject</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"8-servletconfigjava\">8. ServletConfig.java</h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.config</code> 패키지 하위</li>\n <li>MVC 설정임을 지정</li>\n <li>ComponentScan 설정</li>\n <li>ViewResolver 설정</li>\n <li>ResourceHandler 설정</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@EnableWebMvc</span>\n<span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.controller\"</span><span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ServletConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">WebMvcConfigurer</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">configureViewResolvers</span><span class=\"o\">(</span><span class=\"nc\">ViewResolverRegistry</span> <span class=\"n\">registry</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"nc\">InternalResourceViewResolver</span> <span class=\"n\">bean</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">InternalResourceViewResolver</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setViewClass</span><span class=\"o\">(</span><span class=\"nc\">JstlView</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setPrefix</span><span class=\"o\">(</span><span class=\"s\">\"/WEB-INF/views/\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">bean</span><span class=\"o\">.</span><span class=\"na\">setSuffix</span><span class=\"o\">(</span><span class=\"s\">\".jsp\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"na\">viewResolver</span><span class=\"o\">(</span><span class=\"n\">bean</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">addResourceHandlers</span><span class=\"o\">(</span><span class=\"nc\">ResourceHandlerRegistry</span> <span class=\"n\">registry</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"na\">addResourceHandler</span><span class=\"o\">(</span><span class=\"s\">\"/resources/**\"</span><span class=\"o\">).</span><span class=\"na\">addResourceLocations</span><span class=\"o\">(</span><span class=\"s\">\"/resources/\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<h2 id=\"9-webconfigjava\">9. WebConfig.java</h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.config</code> 패키지 하위</li>\n <li>Was 기동시, RootConfig.class, ServletConfig.class 로드되도록 설정</li>\n <li>Context root 지정</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">WebConfig</span> <span class=\"kd\">extends</span>\n<span class=\"nc\">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getRootConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">RootConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getServletConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">ServletConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"nf\">getServletMappings</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"s\">\"/\"</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">customizeRegistration</span><span class=\"o\">(</span><span class=\"nc\">Dynamic</span> <span class=\"n\">registration</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">registration</span><span class=\"o\">.</span><span class=\"na\">setInitParameter</span><span class=\"o\">(</span><span class=\"s\">\"throwExceptionIfNoHandlerFound\"</span><span class=\"o\">,</span> <span class=\"s\">\"true\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/3_webDev/","name":"3_javaSetting.md","path":"spring5/3_webDev/3_javaSetting.md","url":"/spring5/3_webDev/3_javaSetting.html"},{"sort":3,"layout":"default","title":"CGI/WSGI 라이브러리","content":"<h1 id=\"cgiwsgi-라이브러리\">CGI/WSGI 라이브러리</h1>\n\n<blockquote>\n <p>CGI/WSGI는 웹서버로 들어오는 요청을 웹어플리케이션으로 처리를 위임하여 결과를 반환받을 때 웹서버와 웹 어플리케이션 사이의 규약을 준수한 라이브러리 <br />\nCGI의 단점을 업그레이드 시킨것이 WSGI 임 <br />\nDjango 는 WSGI를 사용함</p>\n</blockquote>\n\n<h2 id=\"cgi-관련-모듈-현재에-와서-사용빈도-낮음\">CGI 관련 모듈 (현재에 와서 사용빈도 낮음)</h2>\n<ul>\n <li>cgi 모듈 : FieldStorage 클래스 정의 ( post 요청으로 들어온 파라미터를 처리하기 위한 클래스 )</li>\n <li>cgitb 모듈 : 에러 발생 시, 에러에 대한 상세 정보를 제공하기 위한 모듈</li>\n</ul>\n\n<h2 id=\"wsgi\">WSGI</h2>\n<ul>\n <li>WSGI 서버 (mod_wsgi, uWSGI, Gunicorn) : 범용 웹서버인 apache나 NginX는 wsgi 처리 기능이 없으므로, 그러한 웹서버와의 통신 규격을 처리해 주는 파이썬 모듈</li>\n <li>Django도 wsgi 규격을 처리해 줌으로 WSGI 서버라 할 수 있다</li>\n</ul>\n\n<h2 id=\"wsgi의-애플리케이션-처리-과정\">WSGI의 애플리케이션 처리 과정</h2>\n<ol>\n <li>웹서버가 요청을 받음 : url 분석 / 필요시 WSGI에 처리 위임</li>\n <li>WSGI 서버가 파라미터 전달받음 : wsgi.py 실행 / application(environ, start_response) 함수 호출 / console 출력\n <ul>\n <li>environ : 프레임워크에 정의되어 있음, HTTP_HOST, HTTP_USER_AGENT, SERVER_PROTOCOL 등의 HTTP 환경변수</li>\n <li>start_response(status, headers) : 반드시 호출해야 하며, 인자가 이미 정해져 있음. 그냥 사용하면 됨</li>\n </ul>\n </li>\n <li>application 이 실행됨 : environ 환경변수 처리 / 뷰 처리 / HTTPRequest 객체 생성 / start_response() 함수 호출 / HTTPResponse 리턴\n <ul>\n <li>application 함수의 리턴값은 iterable 타입이어야 함</li>\n </ul>\n </li>\n</ol>\n\n<h2 id=\"wsgirefsimple_server-모듈\">wsgiref.simple_server 모듈</h2>\n<blockquote>\n <p>웹 프레임워크가 제공하는 wsgi 서버<br />\nWSGIServer 클래스, WSGIRequestHandler 클래스 제공<br />\n장고의 runserver 도 wsgiref.simple_server 로 만듦</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">wsgiref.simple_server</span> <span class=\"kn\">import</span> <span class=\"n\">make_server</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">application</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">,</span> <span class=\"n\">start_response</span><span class=\"p\">):</span>\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s\">'200 OK'</span>\n    <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s\">'Content-Type'</span><span class=\"p\">,</span><span class=\"s\">'text/plain'</span><span class=\"p\">)]</span>\n    <span class=\"n\">start_response</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">b'This is a simple WSGI Application'</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'Started WSGI Server on port 8888'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># wsgi API 규격 : make_server(), serve_forever()\n</span>    <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">make_server</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span><span class=\"mi\">8888</span><span class=\"p\">,</span><span class=\"n\">application</span><span class=\"p\">)</span>\n    <span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">serve_forever</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n<ul>\n <li>웹브라우저에 ‘http://localhost:8888’ 실행하여 확인</li>\n</ul>\n","dir":"/python/webStandardLibrary/","name":"CgiWsgiLibrary.md","path":"python/webStandardLibrary/CgiWsgiLibrary.md","url":"/python/webStandardLibrary/CgiWsgiLibrary.html"},{"sort":3,"permalink":"/python/DjangoCoreFunction/","layout":"default","title":"Django 핵심기능","content":"<h1 id=\"django-핵심기능\">Django 핵심기능</h1>\n\n<blockquote>\n <p>Admin 사이트 꾸미기\n장고 파이썬 쉘로 데이터 조작하기\n템플릿 시스템\n폼 처리하기\n클래스형 뷰 <br />\n로그 남기기</p>\n</blockquote>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/DjangoCoreFunction/README.md</code></p>\n","dir":"/python/DjangoCoreFunction/","name":"README.md","path":"python/DjangoCoreFunction/README.md","url":"/python/DjangoCoreFunction/"},{"sort":3,"layout":"default","title":"템플릿 시스템","content":"# 템플릿 시스템\n> 템플릿 코드 : 렌더링 하기 전의 템플릿 파일 \n> 템플릿 파일 : 렌더링을 마친 후 html 등의 문서파일로 해석된 파일 \n\n## 1. 템플릿 변수\n\n1. 변수의 표현식\n\n```\n{% raw %}\n{{variable}}\n{{variable.prop}}\n{% endraw %}\n```\n\n2. 정의되어 있지 않은 변수일 경우, '' 빈 문자열로 채워줌. 이 값을 변경하려면 settings.py 파일의 다음과 같은 속성을 지정해 주면 됨\n\n `TEMPLATE_STRING_IF_INVALID`\n\n## 2. 템플릿 필터 \n> 필터 참고하기 : <https://docs.djangoproject.com/en/2.1/ref/templates/builtins>\n\n1. 파이프(\\|) 문자 사용\n{%raw%}\n `{{ name:lower}}` : name 변수값을 소문자로 변경해 주는 필터\n{%endraw%}\n2. 필터를 체인으로 연결 할 수 있음\n{%raw%}\n `{{text|escape|linebreaks}}` : text 문자열의 특수문자를 escape 해주고, 그 결과를 <p> 태그로 감싸줌\n{%endraw%}\n3. 몇가지 필터는 인자를 가진 경우도 있음\n - bio 변수값 중 앞에 30개의 단어만 보여주고, 줄바꿈 문자는 모두 없애는 필터\n {%raw%}\n `{{bio|truncatewords:30}}`\n {%endraw%}\n - 인자에 빈칸이 있는 경우 따옴표로 감싸줌\n {%raw%}\n `{{list|join:\" // \"}}` : list 요소를 ' // '로 연결해 줌. list가 ['a','b','c'] 라면 'a // b // c' 가 됨\n {%endraw%}\n - value 값이 False 이거나 없는 경우, \"nothing\"으로 보여줌\n {%raw%}\n `{{value|default:\"nothing\"}}`\n {%endraw%}\n - value 변수값의 길이를 반환\n {%raw%}\n `{{value|length}}` : value 변수는 문자열이나 리스트도 가능함\n {%endraw%}\n - value 변수값에서 HTML 태그를 모두 없애 줌\n {%raw%}\n `{{value|striptags}}`\n {%endraw%}\n - value 값이 복수이면 복수 접미사를 붙여줌\n {%raw%}\n `{{value|pluralize}}` : value가 복수이면 's'를 붙여줌 \n `{{value|pluralize:'es'}}`: value가 복수이면 'es'를 붙여줌 \n `{{value|pluralize:'ies'}}` : value가 복수이면 'ies'를 붙여줌 \n {%endraw%}\n - value에 2를 더하기를 해줌\n {%raw%}\n `{{value|add:'2'}}`\n {%endraw%}\n - 예시\n {%raw%}\n `{{'python'|add:'django'}}` => 'pythondjango' \n `{{[1,2,3]|add:[4,5,6]}}` => [1,2,3,4,5,6] \n `{{'5'|add:'10'}}` => 15 \n {%endraw%}\n\n## 3. 템플릿 태그\n\n### (1) {%raw%}{% for %} 태그{%endraw%}\n- 예시\n\n```html\n{%raw%}\n{% for athlete in athlete_list %}\n <li>{{ athlete.name }}</li>\n{% endfor %}\n{%endraw%}\n```\n\n- loop 시 사용할 수 있는 여러가지 변수\n\n|변수명 |설명 |\n|-------|-------|\n|forloop.counter |1부터 카운트 |\n|forloop.counter0 |0부터 카운트 |\n|forloop.revcounter |역순으로 1부터 카운트 |\n|forloop.revcounter0 |역순으로 0부터 카운트 |\n|forloop.first |루프 첫번째 실행이면 True |\n|forloop.last |루프 마지막 실행이면 True |\n|forloop.parentloop |중첩 루프에서 바로 상위의 루프를 의미함 |\n\n### (2) {%raw%}{% if %} 태그{%endraw%}\n- 예시\n\n```html\n{%raw%}\n{% if athlete_list %}\n Number of athletes: {{ athlete_list|length }}\n{% elif athlete_in_locker_room_list %}\n Athletes should be out of the locker room soon!\n{% else %}\n No athletes.\n{% endif %}\n{%endraw%}\n```\n\n- {%raw%}`{{if athlete_list|length > 1 }}` : {% if %} 태그에 필터와 연산자를 사용 할 수 있다.{%endraw%}\n- {%raw%}and, or, not, and not, ==, !=, <, >, <=, >=, in, not in : {% if %} 태그에 불린 연산자를 사용 할 수 있다.{%endraw%}\n\n### (3) {%raw%}{% csrf_token %} 태그{%endraw%}\n\n- POST 방식의 폼을 사용하는 템플릿 코드에서 csrf_token을 사용 해야 함\n- 위치는, <form> 엘리먼트 첫줄에 넣어줌 \n- CSRF 토큰값 검증 실행하면,403 에러를 보여줌\n- 외부 URL로는 보내지 말것\n- 예시\n\n```\n{%raw%}\n <form action='.' method='post'>{% csrf_token %}\n{%endraw%}\n```\n\n### (4) {%raw%}{% url %} 태그{%endraw%}\n> 소스에 url 하드코딩을 방지하기 위해 사용\n\n- 형식 \n ```\n {%raw%}\n {% url 'namespace:view-name' arg1 arg2 %}\n {%endraw%}\n ```\n\n + namespace : urls.py 파일의 include()함수 또는 app_name 변수에 정의한 이름공간\n + view-nme : urls.py 파일에서 정의한 URL 패턴이름\n + argN : 뷰 함수에서 사용하는 인자로, PathParameter. 빈칸으로 구분함\n\n- 예시 \n ```\n {%raw%}\n <form action=\"{% url 'polls:vote' question.id %}\" method=\"post\">\n {%endraw%}\n ```\n\n### (5) {%raw%}{% with %} 태그{%endraw%}\n> 특정 값을 변수에 저장해 두는 기능 \n\n- 예시\n ```\n {%raw%}\n {% with total=business.employees.count %}\n {{ total }} people works at business\n {% endwith %}\n\n // 또는\n\n {% with business.employees.count as total %}\n {{ total }} people works at business\n {% endwith %}\n {%endraw%}\n ```\n\n\n### (6) {%raw%}{% load %} 태그{%endraw%}\n> 사용자 정의 태그 및 필터를 로딩 \n> 참고 : <https://docs.djangoproject.com/en/2.1/ref/templates/builtins/>\n\n- 예시 : somelibrary.py 와 package.otherlibrary.py 에 있는 사용자 정의 태그 및 필터를 로딩 해 줌\n ```\n {%raw%}{% load somelibrary package.otherlibrary %}{%endraw%}\n ```\n\n## 4. 템플릿 주석\n\n1. 한줄 주석 : {# #}\n ```\n {%raw%}{# greeting #}hello \n {# {% if foo %}bar{% else %} #}{%endraw%}\n ```\n2. 여러줄 주석 :{%raw%} {% comment %} ~ {% endcomment %} {%endraw%}\n\n- {%raw%}{% comment %} 태그는 중첩해서 사용할 수 없다.{%endraw%}\n\n ```\n {%raw%}\n {%comment \"Optional note\" %}\n <p>Commented out text here</p>\n {% endcomment %}\n {%endraw%}\n ```\n\n## 5. HTML 이스케이프\n> django 는 탬플릿으로 변수를 넘겨 줄 때, HTML 태그에 사용되는 몇몇 문자를 자동으로 이스케이프 한다. \n\n1. 자동 이스케이프 하는 문자들\n - &lt; : &amp;lt; 으로 변경\n - &gt; : &amp;gt; 으로 변경\n - ' : &amp;39; 으로 변경\n - \" : &amp;quot;으로 변경\n - &amp; : &amp;amp; 으로 변경\n\n2. 자동 이스케이프를 방지하는 방법 ( HTML 태그를 입력한 그대로 태그로 이용하고 싶을 때)\n\n - safe 필터를 사용하는 방법\n ```\n {% raw %}\n # data = \"<b>data\" 라고 가정할 때,\n This will not be escaped: {% data:safe %}\n {% endraw %}\n ```\n\n - {%raw%} **{% autoescape %}** 태그를 사용하는 방법 {%endraw%}, <font color='red'>autoescape 태그를 사용하는 것을 권장</font>\n ```\n {%raw%}\n {% autoescape off %}\n Hello {{ name }}\n {% endautoescape %}\n {%endraw%}\n ```\n\n## 6. 템플릿 상속\n> block 태그 이용\n\n### 예제 : 부모 템플릿 base.html\n\n```\n{%raw%}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <link rel=\"stylesheet\" href=\"style.css\"/>\n <title>{% block title %}My amazing site{% endblock %}</title>\n</head>\n\n<body>\n <div id=\"sidebar\">\n {% block sidebar %}\n <ul>\n <li><a href=\"/\">HOME</li>\n <li><a href=\"/blog/\">Blog</a></li>\n </ul>\n {% endblock %}\n </div>\n <div id=\"content\">\n {% block content %}{% endblock %}\n </div>\n</body>\n</html>\n{%endraw%}\n```\n\n### 예제 : 자식 템플릿\n\n```\n{%raw%}\n{% extends \"base.html\" %} \n\n{% block title %}My amazing blog{% endblock %}\n{% block content %}\n{% for entry in blog_entries %}\n <h2>{{ entry.title }}</h2>\n <p>{{ entry.body }}</p>\n{% endfor %}\n{% endblock %}\n{%endraw%}\n```\n\n+ 부모 템플릿을 extends 키워드로 상속함\n+ 부모 템플릿 block 중, title 과 content 만 다시 작성하였으므로, sidebar 는 부모의 코드를 그대로 재사용함\n\n\n### 템플릿 상속은 3단계를 권장\n\n+ 1 단계 : 사이트 전체의 룩앤필을 담고 있는 base.html\n+ 2 단계 : base.html 을 상속받는 하위 섹션별 템플릿, base_news.html, base_sports.html 등..\n+ 3 단계 : 적절한 2단계 템플릿을 상속받는 개별 페이지\n\n### 템플릿 상속을 정의할 때 유의사항\n\n+ extends 태그는 가장 먼저 나와야 함\n+ 1 단계 부모템플릿에 공통된 부분을 많이 코딩하는게 좋음\n+ 부모 템플릿의 bock을 그대로 사용하고 싶다면, 자식 템플릿에서 {{block.super}} 를 사용. 부모 템플릿을 사용하면서 내용을 추가 할 때 사용\n+ endblock content 처럼 endblock 뒤에 block 이름을 명시 해 주어도 됨","dir":"/python/DjangoCoreFunction/","name":"templateSystem.md","path":"python/DjangoCoreFunction/templateSystem.md","url":"/python/DjangoCoreFunction/templateSystem.html"},{"sort":3,"layout":"default","title":"프로젝트 뼈대 만들기","content":"<h1 id=\"프로젝트-뼈대-만들기\">프로젝트 뼈대 만들기</h1>\n<blockquote>\n <p>프로젝트를 위해 필요한 디렉토리 및 파일을 구성하기 <br />\n설정파일 셋팅하기 <br />\n기본 테이블 생성하기 <br />\n슈퍼유저 생성하기 <br />\n프로젝트 하위에 애플리케이션 개발을 위한 디렉토리와 파일을 구성하기</p>\n</blockquote>\n\n<h2 id=\"1-프로젝트-디렉토리-및-파일의-구성\">1. 프로젝트 디렉토리 및 파일의 구성</h2>\n\n<ul>\n <li>프로젝트 뼈대가 완성된 디렉토리 체계 + templetes 디렉토리, static 디렉토리, logs 디렉토리등 필요한 디렉토리 추가</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[ch3] ------db.sqlite3\n      |---manage.py\n      |---[mysite]------__init__.py\n      |             |---settings.py\n      |             |---urls.py\n      |             |---wsgi.py\n      |---[polls]-------__init__.py\n                    |---admin.py\n                    |---apps.py\n                    |---[migrations]------__init__.py\n                    |---models.py\n                    |---tests.py\n                    |---views.py\n      \n</code></pre>  </div></div>\n<ul>\n <li>뼈대 디렉토리에 대한 설명</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\">항목명</th>\n <th style=\"text-align: left\">설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">ch3 디렉토리 </font></td>\n <td style=\"text-align: left\">최상위 루트 디렉토리. 그냥 디렉토리일 뿐임. <br /> settings.py 파일에서 BASE_DIR 항목으로 지정됨</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">db.sqlite3</td>\n <td style=\"text-align: left\">데이터베이스 파일, 테이블이 들어 있음</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">manage.py</td>\n <td style=\"text-align: left\">장고 명령어 처리하는 파일</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">mysite 디렉토리</font></td>\n <td style=\"text-align: left\">프로젝트명으로 만들어진 디렉토리, 프로젝트의 최상위<br />프로젝트 관련 파일들이 들어 있음</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">__init__.py</td>\n <td style=\"text-align: left\">디렉토리에 있으면, 패키지로 인식함</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">settings.py</td>\n <td style=\"text-align: left\">프로젝트 설정파일</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">urls.py</td>\n <td style=\"text-align: left\">최상위 URLconf 파일</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">wsgi.py</td>\n <td style=\"text-align: left\">웹서버와 연동하기 위한 WSGI 연동 파일</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">polls 디렉토리</font></td>\n <td style=\"text-align: left\">애플리케이션명으로 생성된 디렉토리<br />해당 애플리케이션 파일들이 들어 있음</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">__init__.py</td>\n <td style=\"text-align: left\">이 파일이 있으면 파이썬 패키지로 인식함</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">admin.py</td>\n <td style=\"text-align: left\">Admin 사이트에 모델을 등록해주는 파일</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">apps.py</td>\n <td style=\"text-align: left\">어플리케이션의 설정 클래스를 정의</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">migrations 디렉토리</font></td>\n <td style=\"text-align: left\">데이터베이스 변경사항 관리하기 위한 디렉토리</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">models.py</td>\n <td style=\"text-align: left\">데이터베이스 모델 클래스 정의</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">tests.py</td>\n <td style=\"text-align: left\">단위테스트용 파일. 없어도 됨</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">views.py</td>\n <td style=\"text-align: left\">뷰 함수 정의</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">templetes 디렉토리</font></td>\n <td style=\"text-align: left\">프로젝트별 템플릿과 어플리케이션별 템플릿을 위한 디렉토리를 생성함<br />mysite/templetes 및 polls/templetes 위치에 생성됨</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">static 디렉토리</font></td>\n <td style=\"text-align: left\">정적파일들을 저장(CSS, javascript파일, image 등)<br />프로젝트 레벨과 어플리케이션 레벨에 생성됨<br />mysite/static 및 polls/static 위치에 생성될 수 있음</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><font color=\"skyblue\">logs 디렉토리</font></td>\n <td style=\"text-align: left\">로그파일들이 생성되는 디렉토리<br />settings.py 파일에 LOGGING 항목으로 위치가 지정됨</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"2-프로젝트-뼈대-생성하기\">2. 프로젝트 뼈대 생성하기</h2>\n<blockquote>\n <p>프로젝트는 django-admin startproject 명령어로 생성함\n어플리케이션은 python manage.py startapp 명령어를 이용하여 생성함</p>\n</blockquote>\n\n<ul>\n <li>전체 작업 미리보기</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;django-admin startproject mysite   //mysite라는 프로젝트 생성,base_dir(root 디렉토리) 도 mysite로 생성됨, 후에 mysite 라는 이름은 추후 원하는 이름으로 변경해도 됨. \n&gt; mv mysite rootdir                 //하위의 프로젝트 디렉토리와 햇깔릴 수 있으므로, base 디렉토리를 다른 이름으로 변경함\n&gt; cd mysite                         // base 디렉토리 안으로 이동\n&gt;python manage.py startapp polls    //manage.py 파일은 장고 명령어를 처리하는 파일임. polls 이라는 어플리케이션을 생성\n&gt; cd mysite                         // 프로젝트 관리 디렉토리로 이동\n&gt;notepad settings.py    //settings.py 파일을 열어 설정을 확인함\n&gt; cd ..                 //base 디렉토리로 이동, manage.py 파일이 base 디렉토리 하위에 있기 때문에...\n&gt;python manage.py migrate   //데이터베이스에 기본테이블 생성, db.sqlite3 파일이 생성됨\n&gt;python manage.py runserver //현재까지 생성된 작업을 테스트용 서버에서 확인, 웹 브라우저에서 http://localhost:8000 으로 확인함.\n</code></pre>  </div></div>\n<h3 id=\"1--프로젝트-생성하기\">(1) 프로젝트 생성하기</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ &gt; django-admin startproject mysite\n$ &gt; cd mv mysite dootdir\n</code></pre>  </div></div>\n<ul>\n <li>mysite base 디렉토리와 하위에 mysite 프로젝트 관리 디렉토리가 생성됨</li>\n <li>base 디렉토리와 프로젝트 디렉토리 이름이 같으면 햇깔리므로 base 디렉토리 이름을 변경함</li>\n <li>mysite 프로젝트 디렉토리 하위에 <strong>init</strong>.py, wsgi.py, asgi.py, urls.py, settings.py 파일이 생성됨</li>\n</ul>\n\n<h3 id=\"2-어플리케이션-생성하기\">(2) 어플리케이션 생성하기</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ &gt; cd rootdir\n$rootdir &gt; python manage.py startapp polls\n</code></pre>  </div></div>\n<ul>\n <li>polls 디렉토리 생성</li>\n <li>polls 하위에 admin.py, apps.py, migrations, models.py, tests.py views.py, <strong>init</strong>.py 생성됨</li>\n</ul>\n\n<h3 id=\"3-프로젝트-설정파일-확인-및-변경\">(3) 프로젝트 설정파일 확인 및 변경</h3>\n<blockquote>\n <p>mysite 프로젝트 디렉토리 하위의 settings.py 파일을 변경. <br />\n각종 디렉토리 위치, 로그 형식, 프로젝트에 포함된 어플리케이션들의 이름등이 정의되어 있음.</p>\n</blockquote>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ mysite &gt; vim settings.py\n</code></pre>  </div></div>\n<h4 id=\"ㄱ-allowed_hosts-항목\">ㄱ. ALLOWED_HOSTS 항목</h4>\n<blockquote>\n <p>DEBUG=True 면 개발모드, false 면 운영모드 <br />\n운영모드의 경우, 반드시 ALLOWED_HOSTS에 서버의 IP나 도메인을 지정해야 함</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'localhost'</span><span class=\"p\">,</span><span class=\"s\">'127.0.0.1'</span><span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h4 id=\"ㄴ-installed_apps-항목\">ㄴ. INSTALLED_APPS 항목</h4>\n<blockquote>\n <p>프로젝트에 포함되는 어플리케이션을 모두 설정파일에 등록 <br />\n간단하게 어플리케이션 이름 (polls)을 등록해도 되지만, 어플리케이션의 설정 클래스를 등록하는 것이 더 정확함 <br />\npolls 의 어플리케이션 설정 클래스는 polls 하단의 apps.py 파일내에 있음</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s\">'django.contrib.admin'</span><span class=\"p\">,</span>\n    <span class=\"s\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"s\">'django.contrib.contenttypes'</span><span class=\"p\">,</span>\n    <span class=\"s\">'django.contrib.sessions'</span><span class=\"p\">,</span>\n    <span class=\"s\">'django.contrib.messages'</span><span class=\"p\">,</span>\n    <span class=\"s\">'django.contrib.staticfiles'</span><span class=\"p\">,</span>\n    <span class=\"s\">'polls.apps.AppConfig'</span>\n<span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n<h4 id=\"ㄷ-databases-항목\">ㄷ. DATABASES 항목</h4>\n<blockquote>\n <p>장고는 default로 SQLite3 데이터베이스 엔진을 사용하도록 설정됨 <br />\n다른 데이터베이스 엔진으로 변경 할 수도 있음</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s\">'django.db.backends.sqlite3'</span><span class=\"p\">,</span>\n        <span class=\"s\">'NAME'</span><span class=\"p\">:</span> <span class=\"n\">BASE_DIR</span> <span class=\"o\">/</span> <span class=\"s\">'db.sqlite3'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h4 id=\"ㄹ-타임존-항목-지정\">ㄹ. 타임존 항목 지정</h4>\n<blockquote>\n <p>‘UTC’(섹계표준시)로 되어 있는 것을 ‘Asia/Seoul’로 변경</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># TIME_ZONE = 'UTC'\n</span><span class=\"n\">TIME_ZONE</span> <span class=\"o\">=</span> <span class=\"s\">'Asia/Seoul'</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>USE_TZ 항목\n <ul>\n <li>USE_TZ=True 로 설정하면, DB는 UTC 시간으로 저장되고 UI 처리시에는 TIME_ZONE 항목에 설정된 시간대를 반영하여 처리</li>\n <li>USE_TZ=False 로 하면, DB와 UI 모두 TIME_ZONE 항목에 설정된 시간대로 반영됨</li>\n <li>USE_TZ=True 로 하면, 일광절약시간제를 반영하여 알아서 계산해 줌</li>\n <li>우리나라의 경우, <strong>일광절약시간제를 사용하지 않기 때문에, USE_TZ을 False로 설정하는 것이 더 편리함</strong></li>\n </ul>\n </li>\n</ul>\n\n<h3 id=\"4-기본-테이블-생성하기\">(4) 기본 테이블 생성하기</h3>\n<blockquote>\n <p><strong>사용자 및 그룹 테이블등을 기본적으로 생성해주는 작업</strong><br />\nmigrate 명령을 실행하면 db.SQLite3 파일이 자동 생성됨</p>\n</blockquote>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ rootdir&gt; python manage.py migrate\n</code></pre>  </div></div>\n<h3 id=\"5-지금까지-작업한-것-확인하기\">(5) 지금까지 작업한 것 확인하기</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ rootdir&gt; python manage.py runserver 0.0.0.0:8000 // 주소 0.0.0.0 의 의미는, 현재 명령을 실행하는 서버의 ip와 무관하게 웹 접속을 받겠다는 의미\n</code></pre>  </div></div>\n\n<ul>\n <li>runserver 사용법\n <ol>\n <li>\n <blockquote>\n <p>python manage.py runserver : 디폴트로 127.0.0.1:8000 을 사용함</p>\n </blockquote>\n </li>\n <li>\n <blockquote>\n <p>python manage.py runserver 8888 : 127.0.0.1:8888 을 사용함</p>\n </blockquote>\n </li>\n <li>\n <blockquote>\n <p>python manage.py runserver 0.0.0.0:8000&amp; : &amp;를 명령 끝에 추가하면, 백그라운드에서 실행함</p>\n </blockquote>\n </li>\n </ol>\n </li>\n</ul>\n\n<h3 id=\"6-자동생성된-관리자-화면-확인하기\">(6) 자동생성된 관리자 화면 확인하기</h3>\n\n<ul>\n <li>http://127.0.0.1:8000/admin 으로 접속</li>\n</ul>\n\n<ol>\n <li>id, pw 입력창 보여짐 : 관리자(superUser) 생성이 필요함</li>\n</ol>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$&gt;python manage.py createsuperuser\n</code></pre>  </div></div>\n<ol>\n <li>console 화면의 지시에 따라 Username, Email, Password, Password(again) 을 입력하여 관리자 계정 생성</li>\n <li>http://127.0.0.1:8000/admin 으로 접속하여 생성한 계정으로 로그인 함</li>\n <li>Users와 Groups 테이블이 보임 =&gt; django.contrib.auth 애플리케이션에 User와 Group 이 미리 정의되어 있기 때문에 보여짐</li>\n</ol>\n\n<h3 id=\"7-생성된-프로젝트-뼈대-확인하기\">(7) 생성된 프로젝트 뼈대 확인하기</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># window\n$ C:&gt; tree /F rootdir\n# macos\n&gt; brew install tree\n&gt; tree rootdir\n</code></pre>  </div></div>\n\n<p><img src=\"../../../assets/images/project_tree.png\" alt=\"project tree\" /></p>\n","dir":"/python/DjangoWebFramework/","name":"applicationArchithect.md","path":"python/DjangoWebFramework/applicationArchithect.md","url":"/python/DjangoWebFramework/applicationArchithect.html"},{"sort":4,"permalink":"/springBoot/","layout":"default","title":"스프링 부트","content":"<h1 id=\"스프링-부트\">스프링 부트</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n</code></pre>  </div></div>\n\n","dir":"/springBoot/","name":"README.md","path":"springBoot/README.md","url":"/springBoot/"},{"sort":4,"layout":"default","title":"커스텀 UserDetailsService 활용(최종적으로 사용해야 할 인증방식)","content":"<h1 id=\"커스텀-userdetailsservice-활용최종적으로-사용해야-할-인증방식\">커스텀 UserDetailsService 활용(최종적으로 사용해야 할 인증방식)</h1>\n\n<blockquote>\n <p>앞에서 다룬 과정들이 모두 이번 챕터를 구현하기 위해 알아본 정보였다. <br />\n궁극적으로 커스텀 UserDetailsService 를 활용하여 인증/권한 Provider 를 구성하는 것이 좋다.</p>\n</blockquote>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[ Authentication Manager ]\n        ↑\n       상속\n        ⎮\n   [ Provider ]\n        ↑\n       상속\n        ⎮\n[ UserDetailsService ] &lt;-- 구현 -- [ CustomUserDetailsService ]\n                                         ⎮\n                                        리턴\n                                         ↓ \n                                   [ UserDetails ]&lt;-- 구현 --[ Users ]\n                                                             ↑\n                                                ↖︎            상속\n                                                상속         ⎮\n                                                    ↖︎  [ CustomUsers ]\n\n</code></pre>  </div></div>\n\n<h2 id=\"1-영속계층-개발하기\"><font color=\"blue\">1. 영속계층 개발하기</font></h2>\n\n<p><strong><font color=\"red\">중요한 것은, 스프링 시큐리티에서 username은 사용자의 ID를 의미한다.</font></strong></p>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">테이블스키마</font></strong></p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">tbl_member</span><span class=\"p\">(</span>\n\t<span class=\"n\">userid</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span> <span class=\"k\">primary</span> <span class=\"k\">key</span><span class=\"p\">,</span>\n    <span class=\"n\">userpw</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">regdate</span> <span class=\"nb\">timestamp</span> <span class=\"k\">default</span> <span class=\"k\">current_timestamp</span><span class=\"p\">,</span>\n    <span class=\"n\">updatedate</span> <span class=\"nb\">timestamp</span> <span class=\"k\">default</span> <span class=\"k\">current_timestamp</span><span class=\"p\">,</span>\n    <span class=\"n\">enabled</span> <span class=\"nb\">char</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">default</span> <span class=\"s1\">'1'</span>\n<span class=\"p\">);</span>\n\n\n<span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">tbl_member_auth</span><span class=\"p\">(</span>\n\t<span class=\"n\">userid</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">auth</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span>\n<span class=\"p\">);</span>\n\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">VO 객체 생성</font></strong></p>\n\n<p>. MemberVO</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.Date</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">java.util.List</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Data</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Data</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MemberVO</span> <span class=\"o\">{</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">userid</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">userpw</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">userName</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">enabled</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">regDate</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">updateDate</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">AuthVO</span><span class=\"o\">&gt;</span> <span class=\"n\">authList</span><span class=\"o\">;</span>\n\t\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>. AuthVO</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Data</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Data</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">AuthVO</span> <span class=\"o\">{</span>\n\t\n\t\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">userid</span><span class=\"o\">;</span>\n\t\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">auth</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">MemberMapper 인터페이스 작성</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.mapper</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.example.domain.MemberVO</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">MemberMapper</span> <span class=\"o\">{</span>\n\t\n\t <span class=\"kd\">public</span> <span class=\"nc\">MemberVO</span> <span class=\"nf\">read</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">userid</span><span class=\"o\">);</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">MemberMapper.xml 작성</font></strong></p>\n\n<p>tbl_member 와 tbl_member_auth 는 1:N 관계이다. <br />\n1:N 관계를 처리할 때는 아래 예제와 같이 <strong>resultMap</strong>을 사용하면 쉽다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE mapper\n\tPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n\t\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span>\n\n<span class=\"nt\">&lt;mapper</span> <span class=\"na\">namespace=</span><span class=\"s\">\"org.example.mapper.MemberMapper\"</span><span class=\"nt\">&gt;</span>\t\n\t\n\t<span class=\"nt\">&lt;resultMap</span> <span class=\"na\">type=</span><span class=\"s\">\"org.example.domain.MemberVO\"</span> <span class=\"na\">id=</span><span class=\"s\">\"memberMap\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;id</span> <span class=\"na\">property=</span><span class=\"s\">\"userid\"</span> <span class=\"na\">column=</span><span class=\"s\">\"userid\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"userid\"</span> <span class=\"na\">column=</span><span class=\"s\">\"userid\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"userpw\"</span> <span class=\"na\">column=</span><span class=\"s\">\"userpw\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"userName\"</span> <span class=\"na\">column=</span><span class=\"s\">\"username\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"regDate\"</span> <span class=\"na\">column=</span><span class=\"s\">\"regdate\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"updateDate\"</span> <span class=\"na\">column=</span><span class=\"s\">\"updatedate\"</span><span class=\"nt\">/&gt;</span>\n\t\t <span class=\"nt\">&lt;collection</span> <span class=\"na\">property=</span><span class=\"s\">\"authList\"</span> <span class=\"na\">resultMap=</span><span class=\"s\">\"authMap\"</span> <span class=\"nt\">&gt;&lt;/collection&gt;</span>\n\t<span class=\"nt\">&lt;/resultMap&gt;</span>\n\t\n\t<span class=\"nt\">&lt;resultMap</span> <span class=\"na\">type=</span><span class=\"s\">\"org.example.domain.AuthVO\"</span> <span class=\"na\">id=</span><span class=\"s\">\"authMap\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"userid\"</span> <span class=\"na\">column=</span><span class=\"s\">\"userid\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;result</span> <span class=\"na\">property=</span><span class=\"s\">\"auth\"</span> <span class=\"na\">column=</span><span class=\"s\">\"auth\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/resultMap&gt;</span>\n\t\n\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"read\"</span> <span class=\"na\">resultMap=</span><span class=\"s\">\"memberMap\"</span><span class=\"nt\">&gt;</span>\n\tSELECT\tMEM.USERID, USERPW, USERNAME, ENABLED, REGDATE, UPDATEDATE, AUTH\n\tFROM\tTBL_MEMBER AS MEM\n\tLEFT OUTER JOIN\tTBL_MEMBER_AUTH AS AUTH \n\tON\t\tMEM.USERID = AUTH.USERID\n\tWHERE\tMEM.USERID = #{userid}\n\t<span class=\"nt\">&lt;/select&gt;</span>\n<span class=\"nt\">&lt;/mapper&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">TEST 코드 작성</font></strong></p>\n\n<p>. MemberMapperTests <br />\n. Run Junit 실행 하여, 결과를 확인한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.mapper</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MemberMapperTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod_</span><span class=\"o\">=</span> <span class=\"nd\">@Autowired</span> <span class=\"o\">)</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">MemberMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRead</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">MemberVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"s\">\"admin90\"</span><span class=\"o\">);</span>\n\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getAuthList</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">auth</span> <span class=\"o\">-&gt;</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">auth</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-customuserdetailsservice-구성하기\"><font color=\"blue\">2. CustomUserDetailsService 구성하기</font></h2>\n<blockquote>\n <p>MemberMapper 를 CustomUserDetailsService 에 주입한다. <br />\nCustomUserDetailsService의 유일한 메소드 ‘loadUserByUsername(String username)’ 는 ‘UserDetails’ 객체를 리턴하므로, <br />\n우리는 ‘UserDetails’ 인터페이스를 구현한 User 객체를 상속한 CustomUser 에 MemberVO를 담아서 리턴하도록 구현한다.</p>\n</blockquote>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">CustomUser 클래스 작성</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security.domain</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CustomUser</span> <span class=\"kd\">extends</span> <span class=\"nc\">User</span><span class=\"o\">{</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"kd\">final</span> <span class=\"kt\">long</span> <span class=\"n\">serialVersionUID</span> <span class=\"o\">=</span> <span class=\"mi\">1L</span><span class=\"o\">;</span>\n\t\n\t<span class=\"c1\">// MemberVO 를 주입한다.</span>\n    <span class=\"kd\">private</span> <span class=\"nc\">MemberVO</span> <span class=\"n\">member</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// 상속을 받기 위해서는 상속자의 생성자를 호출하여야 한다.</span>\n\t<span class=\"kd\">public</span> <span class=\"nf\">CustomUser</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">username</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">password</span><span class=\"o\">,</span> <span class=\"nc\">Collection</span><span class=\"o\">&lt;?</span> <span class=\"kd\">extends</span> <span class=\"nc\">GrantedAuthority</span><span class=\"o\">&gt;</span> <span class=\"n\">authorities</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"kd\">super</span><span class=\"o\">(</span><span class=\"n\">username</span><span class=\"o\">,</span> <span class=\"n\">password</span><span class=\"o\">,</span> <span class=\"n\">authorities</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">CustomUser</span><span class=\"o\">(</span><span class=\"nc\">MemberVO</span> <span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"kd\">super</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getUserid</span><span class=\"o\">(),</span> <span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getUserpw</span><span class=\"o\">(),</span> <span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getAuthList</span><span class=\"o\">().</span><span class=\"na\">stream</span><span class=\"o\">().</span>\n\t\t\t\t<span class=\"n\">map</span><span class=\"o\">(</span><span class=\"n\">auth</span> <span class=\"o\">-&gt;</span> <span class=\"k\">new</span> <span class=\"nc\">SimpleGrantedAuthority</span><span class=\"o\">(</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">getAuth</span><span class=\"o\">())).</span><span class=\"na\">collect</span><span class=\"o\">(</span><span class=\"nc\">Collectors</span><span class=\"o\">.</span><span class=\"na\">toList</span><span class=\"o\">()));</span>\n\t\t\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">member</span> <span class=\"o\">=</span> <span class=\"n\">vo</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n<p><strong><font color=\"green\" style=\"font-size:large;\">CustomUserDetailsService 클래스 작성</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.security</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CustomUserDetailsService</span> <span class=\"kd\">implements</span> <span class=\"nc\">UserDetailsService</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">MemberMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">UserDetails</span> <span class=\"nf\">loadUserByUsername</span><span class=\"o\">(</span><span class=\"nc\">String</span> <span class=\"n\">username</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">UsernameNotFoundException</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">warn</span><span class=\"o\">(</span><span class=\"s\">\"Load User By UserName:\"</span> <span class=\"o\">+</span> <span class=\"n\">username</span> <span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"nc\">MemberVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"n\">username</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"n\">vo</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">?</span> <span class=\"kc\">null</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">CustomUser</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">테스트</font></strong></p>\n\n<p>탐캣을 실행하고 http://localhost:8080/sample/admin 으로 접속한다. admin 권한이 있는 사용자가 로그인 하면 admin 화면으로 가고 권한이 없는 사용자가 로그인 하면 홈화면(http://lacalhost:8080/)으로 이동한다.</p>\n","dir":"/spring5/7_security/","name":"4_authWithUserDetailsService.md","path":"spring5/7_security/4_authWithUserDetailsService.md","url":"/spring5/7_security/4_authWithUserDetailsService.html"},{"sort":4,"layout":"default","title":"반복문","content":"# 반복문\n\n## [ 1 ] 리스트의 반복문\n#### 1-1. 리스트\n1. [요소, 요소, 요소,...,요소]\n2. 각 요소는 여러 자료형으로 구성 할 수 있다.\n\n#### 1-2. 리스트 연산자 : 연결(+), 반복(*), len()\n```python\n# 리스트\nlist_a = [1,2,3]\nlist_b = [4,5,6]\n# (+) : 연결\nprint(list_a + list_b) # [1,2,3,4,5,6]\n# (*) : 반복\nprint(list_a * 3) # [1,2,3,1,2,3,1,2,3]\n# len() : 길이구하기\nprint(len(list_a)) # 3\n```\n\n#### 1-3. 리스트에 요소 추가 : append, insert, extend\n1. append() : `리스트명.append(요소)`\n2. insert() : `리스트명.insert(위치, 요소)`\n3. extend() : `리스트명A.extend(리스트명B)` \n\n```python\nlist_a = [1,2,3]\n# 리스트 요소 추가\nlist_a.append(4) \nprint(list_a) # [1,2,3,4] \nlist_a.insert(0, 10)\nprint(list_a) # [10,1,2,3,4]\nlist_a.extend([4,5,6]) \nprint(list_a) # [10,2,3,4,5,6,7]\n```\n\n#### 1-4. 리스트에 요소 제거하기 : del,pop/remove/clear\n1. 인덱스로 제거하기 : del, pop\n- del 키워드 : `del 리스트명[인텍스]`\n- pop 함수 : `리스트명.pop(인덱스)`\n2. 값으로 제거하기 : remove\n- remove 함수 : `리스트명.remove(값)`\n3. 모두 제거하기 : clear\n- clear함수 : `리스트명.clear()`\n\n```python\nlist_a = [0,1,2,3,4,5]\n\n# del 키워드\ndel list_a[1] \nprint(list_a) # [0,2,3,4,5]\n# pop(인덱스)\nlist_a.pop(2)\nprint(list_a) # [0,2,4,5]\n# remove(값) : 일치하는 값이 여러개라도 가장 먼저 찾은 것만 제거 \nlist_b = [1,2,1,2]\nlist_b.remove(2)\nprint(list_b) # [1,1,2]\n# clear()\nlist_b.clear()\nprint(list_b) # []\n```\n\n#### 1-5. 리스트 내부에 있는지 확인 : in/not in 연산자\n`값 in 리스트`\n\n```python\nlist_a = [1,2,3,4,5]\nprint(6 in list_a) # False\nprint(6 not in list_a) # True\n```\n\n#### 1-6. for 반복문\n1. range()를 사용한 반복문\n```python\nfor i in range(5) :\n print(i)\n# 실행 결과\n1\n2\n3\n4\n5\n```\n\n2. 리스트와 함께 사용하는 반복문\n- 문법 \n```python\nfor 반복자 in 리스트 :\n 실행문\n```\n- 예시\n```python\nlist = [1,2,3,4,5]\n# for 반복문\nfor el in list :\n print(el)\n# 실행 결과\n1\n2\n3\n4\n5\n```\n\n## [ 2 ] 딕셔너리의 반복문\n#### 2-1. 딕셔너리??\n1. 키와 값의 쌍으로 저장되는 형태\n2. {} 를 사용하여 선언 (리스트는 []를 사용하는 것과는 다름)\n\n#### 2-2. 딕셔너리 선언하기\n1. **키로 문자열을 사용할 때는 꼭 따옴표/홑따옴표를 붙여야 함**\n```python\ndict = {\n 키:값,\n 키:값,\n 키:값,\n .....\n 키:값\n}\n```\n\n#### 2-3. 딕셔너리 요소 접근 : 딕셔너리[키]\n```python\ndict_a {\n 'A':'에이',\n 'B':'비',\n 'C':'씨'\n}\n# 딕셔너리 출력\nprint(dict_a) # {'A':'에이','B':'삐','C':'씨'}\n# 딕셔너리 요소 접근\nprint(dict_a['A']) # '에이'\n```\n\n#### 2-4. 에러\n1. NameError : 딕셔너리의 키 이름을 따옴표 없이 선언했을 때, NameError 가 발생\n2. KeyError : 존재하지 않는 키에 접근할 때 발생\n\n#### 2-5. 딕셔너리에 값 추가하기/삭제하기\n1. 추가하기 문법\n```\n딕셔너리[새로운 키] = 새로운 값\n```\n2. 제거하기 문법 : del 키워드 사용\n```python\ndel dict_a['키']\n```\n3. 딕셔너리 내부에 키가 있는지 확인\n- in 키워드\n```python\nkey = 'A'\nif key in dict_a:\n 실행문\n```\n- get() 함수 : 키가 없을 지라도 error 발생하지 않고 None 을 출력함\n```python\nvalue = dict_a.get(\"존재하지 않는 키\")\nprint(value) # None\nif value == None :\n print(\"잘못된 키에 접근했습니다.\")\n```\n4. 딕셔너리의 for 반복문\n- 문법\n```python\nfor Key in dictionary :\n 실행문\n```\n\n## [ 3 ] 범위 자료형 : range()\n1. 매개변수로 숫자 한개\n`range(n)` : 0 ~ n-1까지\n2. 매개변수로 숫자 두개\n`range(n,m)` : n ~ m-1 까지\n3. 매개변수가 숫자 3개\n`range(n, m, k)` :n ~ m-1 의 범위, 앞뒤 정수가 k 만큼 차이를 가짐\n4. range()를 list 로 변환\n```python\nprint(list(range(10)))\n# 실행 결과\n[0,1,2,3,4,5,6,7,8,9]\n```\n\n#### 3-1. for 문과 range() 함께 사용하기\n```python\nfor 숫자변수 in range(n,m) :\n #실행문 : n ~ m-1 번 반복\n```\n\n#### 3-2. for 문과 list, range() 를 조합하여 사용하기\n```python\nlist = [0,1,2,3,4,5]\nfor i in range(len(list))\n print(\"{}번째 반복: 값은 {}\".format(i, list[i]))\n```\n\n#### 3-3. 반대로 반복하기 : 역반복문\n1. range()의 매개변수 3개 이용하기\n```python\nfor i in range(4,0-1,-1) :\n print(\"현재 반복 변수: {}\".format(i))\n# 실행 결과\n현재 반복 변수 : 4\n현재 반복 변수 : 3\n현재 반복 변수 : 2\n현재 반복 변수 : 1\n현재 반복 변수 : 0\n```\n2. reversed() 함수 이용하기\n```python\nfor i in reversed(range(5)) :\n print(\"현재반복 변수: {}\".format(i))\n# 실행 결과\n현재 반복 변수 : 4\n현재 반복 변수 : 3\n현재 반복 변수 : 2\n현재 반복 변수 : 1\n현재 반복 변수 : 0\n```\n\n## [ 4 ] while 반복문\n#### 4-1. 상태 기반 while 반복문\n```python\nlist_a = [1,2,1,2]\nvalue = 2\n# 리스트에 value가 있다면 반복\nwhile value in list_a :\n list_a.remove(value)\n```\n#### 4-2. 시간 기반 while 반복문\n```python\nimport time\nnumber = 0\n# 5초 동안 반복 \ntarget_tick = time.time() + 5\nwhile time.time() < target_tick :\n number += 1\n# 출력\nprint(\"5초동안 {}번 반복했습니다.\".format(number))\n# 실행결과\n5초 동안 142830405번 반복 했습니다.\n```\n\n## [ 5 ] 문자열, 리스트, 딕셔너리 관련 기본 함수\n#### 5-1. 리스트 관련 함수\n1. min(), max(), sum()\n```python\nlist = [102, 52, 273, 32, 77]\nprint(min(list)) # 32\nprint(max(list)) # 273\nprint(sum(list)) # 537\n# 꼭 리스트 객체를 쓰지 않고, 숫자를 나열해서 최솟값,최댓값을 구할 수 있다.\nprint(min(1,2,3)) # 1\nprint(max(1,2,3)) # 3\n```\n2. reversed()\n- 기본 사용법\n```python\nlist_a = [1,2,3,4,5]\nlist_reversed = reversed(list_a)\nprint(list(list_reversed))\n# 실행 결과\n[5,4,3,2,1]\n```\n- <font color='red'>reversed()를 이용하여 for 문을 쓸 때는, for문 안에서 reversed()를 써야 함</font>\n```python\nlist_a = [1,2,3,4,5]\nfor i in reversed(list_a) :\n # 실행문\n print(\"-\", i)\n# 실행 결과\n-5\n-4\n-3\n-2\n-1\n```\n3. <font color='red'>확장슬라이싱 [::-1]</font>\n- reversed()와 같은 기능으로, 리스트를 뒤짚는 방법\n```python\nlist_a = [1,2,3,4,5]\nprint(list_a[::-1])\n# 실행 결과\n5\n4\n3\n2\n1\n```\n4. enumerate() 함수와 반복문\n- enumerate() : 리스트의 요소를 순회할 때, 인덱스를 확인할 수 있도록 도와주는 함수\n```python\nlist_a = ['A','B','C']\n# enumerate() 함수 적용하여 출력\nprint(list(enumerate(list_a)))\n# 실행 결과\n[(0, 'A'), (1, 'B'), (2, 'C')]\n# 반복문과 조합하기\nfor i, value in enumerate(list_a) :\n print(\"{}번째 요소: {}\".format(i, value))\n# 실행 결과\n0번째 요소 : A\n1번째 요소 : B\n2번째 요소 : C\n```\n\n#### 5-2. 딕셔너리의 items() 함수와 반복문\n```python\ndict = {'A': '값A',\n 'B' : '값B',\n 'C' : '값C'\n }\n# items() 사용하여 딕셔너리 출력하기\nprint(dict.items())\n# 실행 결과\ndict_items([('A', '값A'), ('B', '값B'), ('C', '값C')])\n# for 반복문과 items() 함수 조합\nfor key, value in dict :\n print(\"키:{}, 값:{}\".format(key, value))\n# 실행 결과\n키:A,값:값A\n키:B,값:값B\n키:C,값:값C\n```\n#### 5-3. 리스트 내포\n- 반복할 수 있는 data를 이용하여 새로운 리스트를 생성하는 방법\n- 문법 : `리스트 이름 = [표현식 for 반복자 in 반복할 수 있는것]`\n- 기본 리스트 내포 사용법\n\n```python\n# 리스트 내포를 이용해 짝수의 제곱을 구하는 방법\nlist_a = [i*i for i in range(0,20,2)]\nprint(list_a) # 0, 4, 16, 36, 64 ...,324\n```\n- 조건을 활용한 리스트 내포 사용법 : `리스트 이름 = [표현식 for 반복자 in 반복할 수 있는 것 if 조건문]`\n\n```python\nlist_a = ['사과', '자두', '초콜릿', '바나나', '체리']\nlist_b = [ fruit for fruit in list_a if fruit != '초콜릿' ]\nprint(list_b)\n# 실행 결과\n['사과','자두','바나나','체리']\n```\n\n#### 5-4. 기타 (1)\n1. if 조건문에서 여러줄 사용하기 : () 안에 문자열을 입력하는 방법 \n```python\nnum = int(input('숫자를 입력하세요.'))\nif num % 2 == 0 :\n # 아래와 같이 ()안에 여러줄의 문자열을 입력하면, 기본적으로는 한줄로 표현됨. \n # 아래와 같이 여러줄로 표현하고 실제 출력 시, 줄바꿈하고 싶으면 \\n 을 사용함.\n print((\n \"입력한 문자열은 {}입니다.\"\n \"{}는 짝수 입니다.\"\n ).format(num, num))\n# 실행 결과\n입력한 문자열은 12입니다.12는 짝수 입니다.\n```\n2. 문자열의 join() 함수\n- 문법 : `문자열.join(문자열 리스트)`\n- 예제\n```python\nprint(\"::\".join(['1','2','3']))\n# 실행 결과\n1::2::3\n```\n3. 여러줄 문자열과 join()을 조합하여 줄바꿈을 표현 \n```python\nprint(('\\n'.join([\n \"안녕하세요.\",\n \"저는\",\n \"누구누구 입니다.\"\n ])\n))\n# 실행 결과\n안녕하세요.\n저는 \n누구누구 입니다.\n```\n\n#### 5-5 기타 (2)\n1. 이터레이터\n- 반복할 수 있는 것 : 이터러블 ( 리스트, 딕셔너리, 문자열 튜플 )\n- 이터러블중에서 next() 로 하나씩 꺼낼수 있는 요소를 **이터레이터**라고 함 \n- reversed(list)의 반환물처럼 출력 시, 주소가 출력되는 이터러블\n- enumerate(list)의 반환물\n- 이터레이터 : 반복문의 매개변수로 전달 할 수 있으며, next() 함수로 요소를 꺼낼 수 있어야 함","dir":"/python-grammar/","name":"loop.md","path":"python-grammar/loop.md","url":"/python-grammar/loop.html"},{"sort":4,"layout":"default","title":"영속계층(DB, Mapper) 구현","content":"<h1 id=\"영속계층db-mapper-구현\">영속계층(DB, Mapper) 구현</h1>\n\n<ol>\n <li>테이블 반영하여 VO 생성</li>\n <li>Mapper 인터페이스 작성</li>\n <li>XML 처리</li>\n <li>Mapper 인터페이스 테스트</li>\n</ol>\n\n<h2 id=\"-1-게시판-vo-클래스-작성-\"><font color=\"blue\"> 1. 게시판 VO 클래스 작성 </font></h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.domain</code> 패키지 하위에 작성</li>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardVO.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Data</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardVO</span> <span class=\"o\">{</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"kt\">long</span> <span class=\"n\">bno</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">title</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">content</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">writer</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">regdate</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">updatedate</span><span class=\"o\">;</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"-2-게시판-mapper-인터페이스-작성\"><font color=\"blue\"> 2. 게시판 Mapper 인터페이스 작성</font></h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.mapper</code> 패키지 하위에 작성</li>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardMapper.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">BoardMapper</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Select</span><span class=\"o\">(</span><span class=\"s\">\"select * from tbl_board where bno &gt; 0\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">();</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"-3-mapper-인터페이스-test\"><font color=\"blue\"> 3. Mapper 인터페이스 TEST</font></h2>\n\n<ul>\n <li>src/test/java 폴더 하위에 <code class=\"language-plaintext highlighter-rouge\">org.example.mapper</code> 패키지 생성</li>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardMapperTest.java</code></li>\n <li>테스트를 통과하면, MapperXML 을 작성한다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"c1\">//@ContextConfiguration(classes={RootConfig.class})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardMapperTest</span> <span class=\"o\">{</span>\n\t\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGetList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">board</span> <span class=\"o\">-&gt;</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">board</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"-4-mapper-xml-작성\"><font color=\"blue\"> 4. Mapper XML 작성</font></h2>\n\n<ol>\n <li>BoardMapper.java 인터페이스에서 @Select 어노테이션 부분을 삭제한 후 진행한다.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">src/main/resource</code> 폴더 하위에 <code class=\"language-plaintext highlighter-rouge\">org &gt; example &gt; mapper</code> 폴더를 만든다. (!한 단계씩 만들어야 함.)</li>\n <li>org/example/mapper 폴더 하위에 <code class=\"language-plaintext highlighter-rouge\">BoardMapper.xml</code> 파일을 작성한다.\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">namespace</code>: mapper 인터페이스의 위치와 같게 한다.</li>\n <li>CDATE : xml에서 부등호를 사용하기 위해서 처리하였다.</li>\n </ul>\n\n <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n <span class=\"cp\">&lt;!DOCTYPE mapper\n     PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n     \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span>\n <span class=\"nt\">&lt;mapper</span> <span class=\"na\">namespace=</span><span class=\"s\">\"org.example.mapper.BoardMapper\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">'getList'</span> <span class=\"na\">resultType=</span><span class=\"s\">'org.example.domain.BoardVO'</span><span class=\"nt\">&gt;</span>\n     <span class=\"cp\">&lt;![CDATA[\n     select * from tbl_board where bno &gt;</span> 0\n     ]]&gt;\n     <span class=\"nt\">&lt;/select&gt;</span>\n <span class=\"nt\">&lt;/mapper&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>이전에 작성해 둔 BoardMapperTest.java 를 테스트한다. (결과는 이전과 같아야 함)</li>\n</ol>\n\n<h2 id=\"-5-crud-구현\"><font color=\"blue\"> 5. CRUD 구현</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-0. BoardVO.java</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Data</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardVO</span> <span class=\"o\">{</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">title</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">content</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">writer</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">regdate</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Date</span> <span class=\"n\">updateDate</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Builder</span>\n\t<span class=\"kd\">public</span> <span class=\"nf\">BoardVO</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">title</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">content</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">writer</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">bno</span> <span class=\"o\">=</span> <span class=\"n\">bno</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">content</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">writer</span> <span class=\"o\">=</span> <span class=\"n\">writer</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. BoardMapper.java</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">BoardMapper</span> <span class=\"o\">{</span>\n\n\t<span class=\"c1\">//@Select(\"select * from tbl_board where bno &gt; 0\")</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">();</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">insert</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n    <span class=\"c1\">//mySql에서는 xml의  useGeneratedKeys 속성을 사용하여, insert 하거나 update 한 키값을 리턴 받을 수 있는데   </span>\n    <span class=\"c1\">//안되고 있음. 이유를 잘 모르겠다.</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">insertSelectKey</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span>  <span class=\"nc\">BoardVO</span> <span class=\"nf\">read</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">update</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. BoardMapper.xml</font></strong></p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE mapper\n\tPUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n\t\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;</span>\n\n<span class=\"nt\">&lt;mapper</span> <span class=\"na\">namespace=</span><span class=\"s\">\"org.example.mapper.BoardMapper\"</span><span class=\"nt\">&gt;</span>\t\n\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">'getList'</span> <span class=\"na\">resultType=</span><span class=\"s\">'org.example.domain.BoardVO'</span><span class=\"nt\">&gt;</span>\n\t<span class=\"cp\">&lt;![CDATA[\n\tselect * from tbl_board where bno &gt;</span> 0\n\t]]&gt;\n\t<span class=\"nt\">&lt;/select&gt;</span>\n\t\n\t<span class=\"nt\">&lt;insert</span> <span class=\"na\">id=</span><span class=\"s\">\"insert\"</span><span class=\"nt\">&gt;</span>\n\t\tinsert into tbl_board (title, content, writer)\n\t\tvalues (#{title}, #{content}, #{writer})\n\t<span class=\"nt\">&lt;/insert&gt;</span>\n\t\n\t<span class=\"nt\">&lt;insert</span> <span class=\"na\">id=</span><span class=\"s\">\"insertSelectKey\"</span> <span class=\"na\">parameterType=</span><span class=\"s\">\"org.example.domain.BoardVO\"</span>  <span class=\"na\">useGeneratedKeys=</span><span class=\"s\">\"true\"</span> <span class=\"na\">keyProperty=</span><span class=\"s\">\"org.example.domain.BoardVO.bno\"</span>  <span class=\"na\">keyColumn=</span><span class=\"s\">\"bno\"</span> <span class=\"nt\">&gt;</span>\n\t\t\tinsert into tbl_board (title, content, writer)\n\t\t\tvalues (#{title}, #{content}, #{writer})\n\t<span class=\"nt\">&lt;/insert&gt;</span>\n\t\n\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"read\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"org.example.domain.BoardVO\"</span><span class=\"nt\">&gt;</span>\n\t\tselect * from tbl_board where bno = #{bno}\n\t<span class=\"nt\">&lt;/select&gt;</span>\n\t\n\t<span class=\"nt\">&lt;update</span> <span class=\"na\">id=</span><span class=\"s\">\"update\"</span><span class=\"nt\">&gt;</span>\n\t\tupdate tbl_board\n\t\tset title = #{title},\n\t\tcontent = #{content},\n\t\twriter = #{writer},\n\t\tupdatedate = CURRENT_TIMESTAMP\n\t\twhere bno = #{bno}\n\t<span class=\"nt\">&lt;/update&gt;</span>\n\t\n\t<span class=\"nt\">&lt;delete</span> <span class=\"na\">id=</span><span class=\"s\">\"delete\"</span><span class=\"nt\">&gt;</span>\n\t\tdelete from tbl_board\n\t\twhere bno = #{bno}\n\t<span class=\"nt\">&lt;/delete&gt;</span>\n<span class=\"nt\">&lt;/mapper&gt;</span>\n</code></pre>  </div></div>\n\n<hr />\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-4. BoardMapperTest.java</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">RootConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardMapperTest</span> <span class=\"o\">{</span>\n\t\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGetList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">board</span> <span class=\"o\">-&gt;</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">board</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testInsert</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-insertTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠-insertTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user01\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t\t\t\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"insert Test::\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testInsertSelectKey</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-insertTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠-insertTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user01\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"insertSelectKey Test::\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n<span class=\"c1\">//\t@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testUpdate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">bno</span><span class=\"o\">(</span><span class=\"mi\">1L</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-updateTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠-updateTest\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user01\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"update Test::\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"result:\"</span> <span class=\"o\">+</span> <span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">update</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n<span class=\"c1\">//\t@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testDelete</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"delete Test::\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"result:\"</span> <span class=\"o\">+</span> <span class=\"o\">(</span><span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"mi\">2L</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/3_webDev/","name":"4_persistence.md","path":"spring5/3_webDev/4_persistence.md","url":"/spring5/3_webDev/4_persistence.html"},{"sort":4,"layout":"default","title":"애플리케이션 개발하기 - Model 코딩","content":"<h1 id=\"애플리케이션-개발하기---model-코딩\">애플리케이션 개발하기 - Model 코딩</h1>\n<blockquote>\n <p>데이터베이스에 테이블을 생성하는 작업</p>\n</blockquote>\n\n<h2 id=\"1-작업순서\">1. 작업순서</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt; vim models.py     // 테이블을 정의함\n&gt; vim admins.py     // 관리자 페이지에서 테이블이 화면에 보이도록 함\n&gt; python manage.py makemigrations       // 데이터베이스에 변경이 필요한 부분 추출\n&gt; python manage.py migrate              // 데이터베이스에 변경사항 반영함\n&gt; python manage.py runserver            // 현재까지 작업을 개발서버에 반영함\n</code></pre>  </div></div>\n\n<h2 id=\"2-테이블-정의\">2. 테이블 정의</h2>\n<blockquote>\n <p>Question 과 Choice 두개의 테이블이 필요<br />\npolls/models.py 파일에 정의</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"c1\"># Create your models here.\n</span>\n<span class=\"c1\"># Question 테이블의 PK : 장고는 자동으로 Not Null &amp; Autoincrement인 id 를 만들어 줌\n</span><span class=\"k\">class</span> <span class=\"nc\">Question</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">question_text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"c1\"># DateTimeField의 'date published' 는 pub_date에 대한 레이블 문구. Admin 사이트에서 볼 수 있음.\n</span>    <span class=\"n\">pub_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"s\">'date published'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># 객체를 문자열로 표현하기 위해 선언하는 함수\n</span>    <span class=\"k\">def</span> <span class=\"nf\">__str__</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">question_text</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Choice</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 항상 인수로 전달된 테이블의 PK 와 연결됨. 실제 테이블에는 '_id' 라는 접미사가 붙음\n</span>    <span class=\"n\">question</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Question</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">choice_text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">votes</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">choice_text</span>\n</code></pre>  </div></div>\n\n<h2 id=\"3-admin-사이트에-테이블-반영\">3. Admin 사이트에 테이블 반영</h2>\n<blockquote>\n <p>생성한 테이블을 admin 사이트에 보이도록 등록함\npolls/admins.py 파일</p>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">polls.models</span> <span class=\"kn\">import</span> <span class=\"n\">Question</span><span class=\"p\">,</span> <span class=\"n\">Choice</span>\n<span class=\"c1\"># Register your models here.\n</span>\n<span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Question</span><span class=\"p\">)</span>\n<span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Choice</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-데이터베이스에-변경사항-반영\">4. 데이터베이스에 변경사항 반영</h2>\n<blockquote>\n <p>polls/migration 디렉토리 밑에 테이블의 변경사항을 기록하는 파일이 생성됨. 이 파일은 실제 db 동기화 ( = migrate) 시, 참조하게 됨</p>\n</blockquote>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ch3&gt; python manage.py makemigrations\nMigrations for 'polls':\n  polls/migrations/0001_initial.py\n    - Create model Question\n    - Create model Choice\nch3&gt; python manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, polls, sessions\nRunning migrations:\n  Applying polls.0001_initial... OK\n</code></pre>  </div></div>\n\n<ul>\n <li><strong>데이터베이스 migrate 시, 사용하게 된 aql 스키마를 아래와 같이 확인 할 수 있다</strong></li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ch3&gt; python manage.py sqlmigrate polls 0001 \n</code></pre>  </div></div>\n\n<h2 id=\"5-지금까지-작업한-것-확인하기\">5. 지금까지 작업한 것 확인하기</h2>\n<blockquote>\n <p>웹 브라우저의 Admin 사이트에서 추가된 테이블을 확인한다.</p>\n</blockquote>\n\n<p><img src=\"/assets/images/admin_polls_Question_Choice.png\" alt=\"Admin 사이트에 추가된 테이블\" /></p>\n","dir":"/python/DjangoWebFramework/","name":"applicationDevelopment-Model.md","path":"python/DjangoWebFramework/applicationDevelopment-Model.md","url":"/python/DjangoWebFramework/applicationDevelopment-Model.html"},{"sort":4,"layout":"default","title":"Django 의 폼 처리 기능","content":"<h1 id=\"django-의-폼-처리-기능\">Django 의 폼 처리 기능</h1>\n<blockquote>\n <p>장고는 FORM 의 데이터를 전송 할 때는, POST 방식만 사용 <br />\n검색 폼 같은 경우는 GET 방식을 사용하여 북마크 등을 용이하게 함</p>\n</blockquote>\n\n<h2 id=\"1-django-의-폼-기능\">1. Django 의 폼 기능</h2>\n\n<ol>\n <li>폼이란?\n <ul>\n <li>HTML의 &lt;form&gt; 태그</li>\n <li>django의 Form 클래스</li>\n <li>서버로 제출되는 구조화된 데이터</li>\n </ul>\n </li>\n <li>Django의 폼 클래스\n <ul>\n <li>폼 클래스의 필드는 html의 input 엘리먼트와 매핑됨</li>\n <li>폼 클래스의 필드 역시 클래스 임</li>\n <li>데이터가 없는 폼 클래스를 언바운드 폼이라고 함. html에서 보여질 때 비어있거나 디폴트 값으로 채워짐</li>\n <li>데이터가 있는 폼 클래스를 바운드 폼이라고 함. 데이터 유효성 검사에 사용됨</li>\n <li>is_valid() 함수를 내부적으로 실행 시켜, 유효성 검사를 성공하면 True를 반환하고, 검사에 성공한 값을 cleaned_data 속성에 넣음</li>\n </ul>\n </li>\n <li>폼의 필드 클래스의 기능\n <ul>\n <li>폼 데이터를 저장하고 있음</li>\n <li>폼이 제출되면 자신의 유효성을 검사</li>\n <li>저장하는 데이터의 종류에 따라 자신의 타입을 정함</li>\n <li>폼 필드는 HTML에서 위젯으로 표현</li>\n <li>필드 타입마다 디폴트 위젯 클래스를 가지고 있으며, 오버라이딩 될 수 있음</li>\n </ul>\n </li>\n <li>폼을 포함한 템플릿 코드의 렌더링 절차\n <ol>\n <li>렌더링 할 객체를 뷰로 가져오기 (ex. 데이터베이스의 객체)</li>\n <li>그 객체를 템플릿 파일로 넘겨주기</li>\n <li>템플릿 문법을 처리하여 html 언어로 변환하기</li>\n </ol>\n </li>\n</ol>\n\n<h2 id=\"2-폼-클래스의-처리\">2. 폼 클래스의 처리</h2>\n<blockquote>\n <p>폼클래스로 폼 생성 -&gt; 뷰에서 폼클래스 처리 -&gt; 폼 클래스를 템플릿으로 변환</p>\n</blockquote>\n\n<h3 id=\"1-폼클래스로-폼-생성\">(1) 폼클래스로 폼 생성</h3>\n\n<ul>\n <li>polls/forms.py 에 폼클래스 선언</li>\n <li>django.forms.Form 의 자식 클래스로 생성</li>\n <li>\n <p>폼 클래스는 모든 필드에 대해 유효성 검사를 실행하는 is_valid() 메소드를 내장하고 있다.</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n  <span class=\"k\">class</span> <span class=\"nc\">NameForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"p\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n      <span class=\"n\">your_name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s\">'Your name'</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h3 id=\"2-뷰에서-폼클래스-처리\">(2) 뷰에서 폼클래스 처리</h3>\n\n<ul>\n <li>\n <p>뷰에서 폼을 보여주기 위한 get 방식과 폼을 제출하기 위한 post 방식을 구현한다.</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.shrtcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponseRedirect</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">get_name</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n      <span class=\"c1\"># post 요청 처리\n</span>      <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s\">'POST'</span><span class=\"p\">:</span>\n          <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">NameForm</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">POST</span><span class=\"p\">)</span>\n          <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\n              <span class=\"c1\"># 폼 데이터가 유효하면, 데이터를 cleaned_data에 복사하고, '/thanks/'로 리다이렉트 함\n</span>              <span class=\"n\">new_name</span> <span class=\"o\">=</span> <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">cleaned_data</span><span class=\"p\">[</span><span class=\"s\">'name'</span><span class=\"p\">]</span>\n              <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"s\">'/thanks/'</span><span class=\"p\">)</span>\n      <span class=\"k\">else</span><span class=\"p\">:</span>\n          <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">NameForm</span><span class=\"p\">()</span>\n      <span class=\"c1\"># get 방식이거나 폼이 유효하지 않을 때, 'name.html' 템플릿으로 값은 비어 있고 필드만 생성되어 있는 폼 객체를 전달한다.\n</span>      <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s\">'name.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s\">'form'</span><span class=\"p\">:</span><span class=\"n\">form</span><span class=\"p\">})</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h3 id=\"3-폼-클래스를-템플릿으로-변환\">(3) 폼 클래스를 템플릿으로 변환</h3>\n\n<ul>\n <li>\n <p>폼 객체를 템플릿에서 표현하는 방법은 이외에 3가지가 더 있다.</p>\n\n <ol>\n <li>{{form.as_table}} : form의 각 필드를 &lt;tr&gt; 태그로 감싸서 렌더링, {{ form }} 과 같음</li>\n <li>{{form.as_p}} : form의 각 필드를 &lt;p&gt; 태그로 감싸서 렌더링</li>\n <li>{{form.as_ul}} : form의 각 필드를 &lt;li&gt; 태그로 감싸서 렌더링</li>\n </ol>\n </li>\n <li>\n <p>폼 객체는 필드만 전달하므로, &lt;form&gt; 요소와 &lt;input type=’submit’&gt; 요소, 그외 기타 &lt;table&gt;, &lt;ul&gt; 등은 직접 작성 해야 한다.</p>\n\n <ul>\n <li>name.html\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n&lt;form action='/your_name/' method='post'&gt;\n{% csrf_token %}\n{{ form }}\n&lt;/form&gt;\n    \n</code></pre>  </div> </div>\n\n <p>↓ 렌더링</p>\n\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n&lt;form action='/your_name/' method='post'&gt;\n&lt;label for=\"your_name\"&gt;Your name : &lt;/label&gt;\n&lt;input id='your_name' type='text' name='your_name' maxlength='100'&gt;\n&lt;input type='submit' value='Submit'&gt;\n&lt;/form&gt;\n    \n</code></pre>  </div> </div>\n </li>\n </ul>\n </li>\n</ul>\n\n","dir":"/python/DjangoCoreFunction/","name":"DjangoForm.md","path":"python/DjangoCoreFunction/DjangoForm.md","url":"/python/DjangoCoreFunction/DjangoForm.html"},{"sort":4,"layout":"default","title":"URLconf 개발","content":"<h1 id=\"urlconf-개발\">URLconf 개발</h1>\n\n<ul>\n <li>mysite/urls.py</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">include</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'admin/'</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'bookmark/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s\">'bookmark.urls'</span><span class=\"p\">))</span>\n<span class=\"p\">]</span>\n\n</code></pre>  </div></div>\n\n<ul>\n <li>bookmark/urls.py</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bookmark</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">v</span>\n\n<span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"s\">'bookmark'</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">BookmarkLV</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">'index'</span><span class=\"p\">),</span>\n        <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'&lt;int:pk&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">.</span><span class=\"n\">BookmarkDV</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">'detail'</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n</code></pre>  </div></div>\n\n","dir":"/python/developBookmark/","name":"4_URLconf.md","path":"python/developBookmark/4_URLconf.md","url":"/python/developBookmark/4_URLconf.html"},{"sort":4,"permalink":"/spring5/4_rest_ajsx_reply/","layout":"default","title":"REST 방식과 Ajax 를 이용하는 댓글 처리","content":"<h1 id=\"rest-방식과-ajax-를-이용하는-댓글-처리\">REST 방식과 Ajax 를 이용하는 댓글 처리</h1>\n","dir":"/spring5/4_rest_ajsx_reply/","name":"README.md","path":"spring5/4_rest_ajsx_reply/README.md","url":"/spring5/4_rest_ajsx_reply/"},{"sort":5,"layout":"default","title":"JSP 에서 시큐리티 태그 사용하기","content":"<h1 id=\"jsp-에서-시큐리티-태그-사용하기\">JSP 에서 시큐리티 태그 사용하기</h1>\n\n<blockquote>\n <p>UserDetails 를 구현한 User 객체를 상속받아 작성한 CustomUser 객체에서 리턴해 주는 정보를 불러올 수 있다.</p>\n</blockquote>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1. jsp에 시큐리티 태그 지시어 추가</font></strong></p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2. 화면에 사용자 정보 보여주기</font></strong></p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">sec:authentication</code> 이라는 태그를 이용하며, <code class=\"language-plaintext highlighter-rouge\">principal</code> 이라는 속성을 불러와 사용한다.</p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;p&gt;</span>principal : <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal\"</span><span class=\"nt\">/&gt;&lt;/p&gt;</span>\n<span class=\"nt\">&lt;p&gt;</span>MemberVO : <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal.member\"</span><span class=\"nt\">/&gt;&lt;/p&gt;</span>\n<span class=\"nt\">&lt;p&gt;</span>사용자이름 : <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal.member.userName\"</span><span class=\"nt\">/&gt;&lt;/p&gt;</span>\n<span class=\"nt\">&lt;p&gt;</span>사용자아이디 : <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal.username\"</span><span class=\"nt\">/&gt;&lt;/p&gt;</span>\n<span class=\"nt\">&lt;p&gt;</span>사용자권한리스트 : <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal.member.authList\"</span><span class=\"nt\">/&gt;&lt;/p&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">3. 표현식 이용해서 동적화면 구성하기</font></strong></p>\n\n<p>스프링 시큐리티의 표현식은 security-context.xml 에서도 사용할 수 있다.</p>\n\n<ul>\n <li>hasRole([ role ]), hasAuthority([ authority ]) : 해당 권한이 있으면 true</li>\n <li>hasAnyRole([role1, role2]), hasAnyAuthority([ authority ]) : 여러 권한들 중 하나라도 해당하는 권한이 있으면 true</li>\n <li>principal : 현재 사용자의 정보</li>\n <li>permitAll : 모든 사용자에게 허용</li>\n <li>denyAll : 모든 사용자에게 거부</li>\n <li>isAnonymous() : 익명의 사용자의 경우 true</li>\n <li>isAuthenticated() : 인증된 사용자면 true</li>\n <li>isFullyAuthenticated() : Remember-me 로 인증된 것이 아닌 인증된 사용자인 경우 true</li>\n</ul>\n\n<p>예시</p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n    pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n<span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">'Content-Type'</span> <span class=\"na\">content=</span><span class=\"s\">'text/html; charset=UTF-8'</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n<span class=\"nt\">&lt;sec:authorize </span><span class=\"na\">access=</span><span class=\"s\">\"isAnonymous()\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/customLogin\"</span><span class=\"nt\">&gt;</span>로그인<span class=\"nt\">&lt;/a&gt;</span>\n<span class=\"nt\">&lt;/sec:authorize&gt;</span>\n<span class=\"nt\">&lt;sec:authorize </span><span class=\"na\">access=</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/customLogout\"</span><span class=\"nt\">&gt;</span>로그아웃<span class=\"nt\">&lt;/a&gt;</span>\n<span class=\"nt\">&lt;/sec:authorize&gt;</span>\n<span class=\"nt\">&lt;h1&gt;</span>/sample/all page<span class=\"nt\">&lt;/h1&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div></div>\n","dir":"/spring5/7_security/","name":"5_jspWithSecurityTaglib.md","path":"spring5/7_security/5_jspWithSecurityTaglib.md","url":"/spring5/7_security/5_jspWithSecurityTaglib.html"},{"sort":5,"layout":"default","title":"함수","content":"# 함수\n\n## [ 1 ] 가변 매개변수\n### 1-1. 문법 \n```python\ndef 함수이름(매개변수, 매개변수, *가변매개변수) :\n # 실행문\n```\n1. 가변 매개변수뒤에 일반 매개변수가 올 수 없다.\n2. 가변 매개변수는 하나만 사용 가능하다.\n\n### 1-2. 예제\n```python\ndef print_n_times(n, *values):\n # n번 반복\n for i in range(n):\n # 가변매개변수는 리스트처럼 활용\n for value in values:\n print(value)\n # 줄바꿈\n print()\n# 함수 호출\nprint_n_times(3, '안녕하세요','즐거운','파이썬')\n# 실행 결과\n안녕하세요\n즐거운\n파이썬\n# 줄바꿈 \n안녕하세요\n즐거운\n파이썬\n# 줄바꿈\n안녕하세요\n즐거운\n파이썬\n# 줄바꿈\n```\n\n## [ 2 ] 기본 매개변수\n- 매개변수를 입력하지 않았을 때 기본적으로 들어가는 기본값\n\n### 2-1. 문법\n```python\ndef 함수 이름(매개변수, 기본매개변수이름1=값1, 기본매개변수2=값2):\n # 실행문\n```\n1. 기본 매개변수 뒤에는 일반 매개변수가 올 수 없다.\n\n### 2-2. 예제\n```python\ndef print_n_times(value, n = 2) :\n # n번 반복\n for i in range(n):\n print(value)\n# 함수 호출\nprint_n_times('안녕하세요.')\n# 실행 결과\n안녕하세요.\n안녕하세요.\n```\n\n## [ 3 ] 키워드 매개변수\n- 가변 매개변수와 기본 매개변수를 함께 사용 할 수 있도록 만든 기능\n- 함수를 호출할 때, 기본 매개변수는 이름과 값을 함께 지정하는 방법\n\n### 3-1. 예제\n```python\ndef print_n_times (*values, n=2):\n for i in range(n):\n for value in values :\n print(value)\n print()\n# 함수 호출 : 기본함수 n에 값을 지정하여 호출\nprint_n_times('안녕하세요','즐거운','파이썬', n = 3)\n# 실행 결과\n안녕하세요\n즐거운\n파이썬\n# 줄바꿈\n안녕하세요\n즐거운\n파이썬\n# 줄바꿈\n안녕하세요\n즐거운\n파이썬\n# 줄바꿈\n```\n\n## [ 4 ] 튜플\n- 리스트와 유사하지만, 요소를 변경할 때 차이가 있다.\n\n### 4-1. 튜플의 선언\n- `(데이터, 데이터, 데이터,...)`\n- 요소를 하나만 가지는 튜플은? `(데이터, )`\n\n### 4-2. 튜플의 출력\n- `튜플이름[인덱스]`\n\n### 4-3. 튜플의 사용\n#### 1. 리스트와 튜플의 특이한 사용\n```python\n# 리스트와 튜플의 특이한 사용\n[a, b] = [10, 20]\n(c, d) = (10, 20)\nprint(\"a:\",a) # a:10\nprint(\"b:\",b) # b:20\nprint(\"c:\",c) # c:10\nprint(\"d:\",d) # d:20\n```\n\n#### 2. 괄호가 없는 튜플\n- 튜플은 괄호를 생략해도 되는 상황이면, 괄호를 생략해도 된다.\n\n```python\n# 괄호가 없는 튜플\ntuple = 10, 20, 30, 40\nprint(tuple)\n# 실행 결과\n(10, 20, 30, 40)\nprint(type(tuple))\n# 실행 결과\n< class tuple >\n####################\n# 괄호가 없는 튜플의 활용\na, b, c = 10, 20, 30\nprint(a)\nprint(b)\nprint(c)\n# 실행 결과\n10\n20\n30\n```\n\n#### 3. 변수의 값을 교환하는 튜플\n- temp 를 이용하지 않고, 한번에 교환할 수 있다.\n```python\na, b = 10, 20\n# 값을 교환\na, b = b, a\nprint('a:',a)\nprint('b:',b)\n# 실행 결과\na: 20\nb: 10\n```\n\n### 4-4. 튜플과 함수\n- <font color='red'>튜플은 함수의 리턴에 많이 사용, 여러개의 값을 리턴.</font>\n- 튜플을 사용하는 내장함수의 예 : enumerate(), items(), divmod()\n\n#### 1. 예제\n```python\ndef test():\n return (10, 20)\na, b = test()\nprint(a)\nprint(b)\n# 실행 결과\n10\n20\n```\n\n## [ 5 ] 람다\n - 람다는, 함수를 매개로 전달하는 코드를 더 효율적으로 작성 할 수 있다.\n\n### 5-1. 함수의 매개변수로 함수 전달하기\n```python\n# 매개변수로 받은 함수를 5번 호출하는 함수\ndef call_5_times(func):\n for i in range(5):\n func()\n# 매개로 전달할 함수\ndef print_hello():\n print('Hello!')\n# 조합하여 호출하기\ncall_5_times(print_hello)\n# 실행 결과\nHello!\nHello!\nHello!\nHello!\nHello!\n```\n\n### 5-2. filter() 와 map() 함수\n- 함수를 매개변수로 전달하는 대표함수\n\n#### 1. map()\n- 문법 : `map(함수, 리스트)`\n- 리스트의 요소를 함수에 넣고 리턴된 값으로 새로운 리스트를 구성해 주는 함수\n\n#### 2. filter()\n- 문법 : `filter(함수, 리스트)`\n- 리스트 요소를 함수에 넣고 리턴된 값이 True인 요소로만 새로운 리스트를 구성해 주는 함수\n\n#### 3. map(), filter()의 예제\n```python\n# 함수 선언\ndef power(item) : \n return item * item\ndef under_3(item) :\n return item < 3\n# 변수 선언\nlist_a = [1,2,3,4,5]\n#################################\n# map() 예제\noutput_a = map(power, list_a)\nprint(list(output_a))\n# 실행결과\n[1,4,9,16,25]\n##################################\n# filter() 예제\noutput_b = filter(under_3, list_a)\nprint(list(output_b))\n# 실행결과\n[1,2]\n```\n\n#### 4. 람다 : 간단하게 함수를 선언하는 방법\n- `lambda 매개변수:리턴값`\n\n#### 5. 람다의 예제\n1. 람다\n```python\n# 함수 선언\npower = lambda x : x * x\nunder_3 = lambda x : x < 3\n# 변수 선언\nlist_a = [1,2,3,4,5]\n##################################\n# map() 사용\noutput_a = map(power, list_a)\nprint(list(output_a))\n# 실행결과\n[1,4,9,16,25]\n##################################\n# filter() 사용\noutput_b = filter(under_3, list_a)\nprint(list(output_b))\n# 실행결과\n[1,2]\n```\n2. <font color='red'>인라인 람다 사용법 : 람다는 함수의 매개변수에 곧바로 넣을 수 있다.</font>\n```python\n# 변수\nlist_a = [1,2,3,4,5]\n# map() 사용\noutput_a = map(lambda x: x * x, list_a)\n# filter() 사용\noutput_b = filter(lambda x: x < 3, list_a)\n```\n\n#### 6. 매개변수가 여러개인 람다\n-`lambda x, y: x * y`\n\n## [ 6 ] 파일처리\n- 파일 : 텍스트 파일, 바이너리 파일.\n- 파일 열기, 파일 읽기, 파일 쓰기\n\n### 6-1. 파일 열기/닫기\n- 열기 : `파일객체 = open(문자열: 파일경로, 문자열: 읽기 모드)`\n- 닫기 : `파일객체.close`\n- 읽기 모드 \n\n|모드 |설명 |\n|-----|-----|\n|w |write(새로 쓰기)|\n|a |append(이어 쓰기)|\n|r |read(읽기)|\n\n- 예제\n```python\n# 파일열기\nfile = open('basic.txt','w')\n# 파일쓰기\nfile.write(\"Hello Python Programming...!\")\n# 파일닫기\nfile.close()\n```\n\n### 6-2. with 키워드\n- 파일을 열고, 닫지않는 실수를 방지하기 위해 구문이 종료될 때 파일도 함께 닫힌다.\n- 문법\n```python\nwith open( 파일경로, 모드) as 파일 객체 :\n 실행문\n```\n- 예제\n```python\nwith open('basic.txt', 'w') as file : \n file.write('Hello Python programming..!')\n```\n\n### 6-3. 텍스트 읽기\n- write(), read()\n- 텍스트 쓰기 : `파일객체.write()`\n- 텍스트 읽기 : `파일객체.read()`\n- 예제\n```python\nwith open('basic.txt', 'r') as f :\n content = f.read()\nprint(content)\n```\n\n### 6-4. 텍스트 한 줄씩 읽기\n- 텍스트파일 : CSV(Comma Separated Values), XML, JSON 등\n- 한 줄씩 읽기 문법\n```python\nfor 한줄을 나타내는 문자열 in 파일객체 :\n 처리\n```\n- 한줄씩 읽기 예제\n```python\nwith open('basic.txt','r') as f:\n for line in f :\n # line으로 처리할 내용을 처리함\n```\n\n## [ 7 ] 제너레이터\n- 이터레이터를 직접 만들때 사용\n- 함수는 <font color='red'>yield 키워드</font>를 사용하면 제너레이터 함수가 됨\n- 제너레이터 함수를 호출해도 함수 내부 코드는 실행되지 않으나, <font color='red'>next()</font> 함수를 사용해 함수를 실행 할 수 있음\n\n### 7-1. 제너레이터 함수\n\n#### 1. 예제\n```python\n# 함수 선언\ndef test():\n print('함수 호출됨')\n yield 'test' # next()로 제너레이터 실행 시 'test'가 리턴됨\n# 함수 호출\nprint('A 통과')\ntest()\nprint('B 통과')\ntest()\nprint(test())\n# 실행 결과\nA 통과\nB 통과\n<generator object test at 주소>\n```\n- 제너레이터는 '제너레이터'를 리턴함.\n- 제너레이터는 호출한다고 실행되지 않음.\n- 제너레이터는 next() 함수를 사용해 함수를 실행함.\n- next() 로 함수 실행 시, yield 키워드 부분까지만 실행되고 yield 뒤에 뒤따라 입력한 값이 리턴됨\n\n#### 2. 제너레이터 함수와 next() 함수\n```python\n# 함수 선언\ndef test(): # 내부에 yield 함수가 있으므로, 제너레이터 함수\n print('A 통과')\n yield 1\n print('B 통과')\n yield 2\n print('C 통과')\n# 함수 호출\noutput = test() # 제너레이터 함수는 호출만으로 실행되지 않음\n# next() 호출\nprint('D 통과')\na = next(output) # next() 함수 실행 했으므로, test()함수의 첫번째 yield 까지 실행됨\nprint(a) # test()가 첫번째 yield에 뒤 따라오는 값을 리턴하여, 1을 리턴\nprint('E 통과')\nb = next(output) # next() 함수 실행 했으므로, test()함수의 두번째 yield 까지 실행됨\nprint(b) # 두번째 yield 뒤의 값을 리턴하여, 2를 리턴함\nprint('F 통과')\nc = next(output) # next() 함수 실행 했으므로, test()함수의 끝까지 실행됨\nprint(c) # Error!! 마지막은 yield가 없어 리턴할 값이 없음\n# 한번더 실행\nnext(output) # 함수가 끝나면, StopIteration 예외가 발생함\n################################\n# 실행 결과\nD 통과\nA 통과\n1\nE 통과\nB 통과\n2\nF 통과\nC 통과\n# 이후 에러 발생 \n# error1 : print(c)에서 리턴받은 값이 없으므로 에러 발생\n# error2 : 마지막의 next(output)은 함수가 끝났으므로, 'StopIteration' 예외 발생\n```","dir":"/python-grammar/","name":"function.md","path":"python-grammar/function.md","url":"/python-grammar/function.html"},{"sort":5,"layout":"default","title":"클래스 형 뷰","content":"<h1 id=\"클래스-형-뷰\">클래스 형 뷰</h1>\n<blockquote>\n <p>이전까지는 뷰를 함수로 작성하였으나, 클래스형 뷰를 사용하면 장점이 많음</p>\n</blockquote>\n\n<h2 id=\"1-클래스형-뷰의-첫단계---urlconf-설정\">1. 클래스형 뷰의 첫단계 - URLconf 설정</h2>\n<ul>\n <li>urls.py</li>\n <li>URLconf에 함수가 아닌 클래스 뷰를 사용 할 것이라는 표시를 해 주어야 함</li>\n <li>MyView 라는 클래스 뷰를 사용한다 가정하면,\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">polls.views</span> <span class=\"kn\">import</span> <span class=\"n\">MyView</span>\n\n  <span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'about/'</span><span class=\"p\">,</span> <span class=\"n\">MyView</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">())</span>\n  <span class=\"p\">]</span> \n</code></pre>  </div> </div>\n <ul>\n <li><strong>as_view()</strong> : URL해석기는 기본적으로 데이터를 함수로 전달하므로, 클래스로 진입하기 위한 as_view() 내장 메소드가 필요. ‘진입 메소드’ 라고 함</li>\n <li><strong>dispatch()</strong> : 내장 메소드. as_view()에서 인스턴스를 생성하고, 인스턴스 내에서 GET/POST 메소드 요청을 중계하는 역할. 메소드가 없을 땐, <strong>HttpResponseNotAllowed</strong> 익센션 발생시킴</li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"2-클래스형-뷰-작성--myview-클래스\">2. 클래스형 뷰 작성 : MyView 클래스</h2>\n<ul>\n <li>\n <p>views.py</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n  <span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n      <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n          <span class=\"c1\"># 뷰 로직 작성\n</span>          <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s\">'result'</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"3-클래스형-뷰의-메소드-구분\">3. 클래스형 뷰의 메소드 구분</h2>\n<ul>\n <li>GET, POST 등 HTTP 메소드에 따른 처리 기능이 지정된 메소드명으로 구분 할 수 있음\n <ul>\n <li>def get():</li>\n <li>def post():</li>\n <li>def head():</li>\n </ul>\n </li>\n <li>클래스형 뷰로 HEAD 메소드 코딩 예제\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># views.py\n</span>  <span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">ListView</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">books.models</span> <span class=\"kn\">import</span> <span class=\"n\">Book</span>\n\n  <span class=\"k\">class</span> <span class=\"nc\">BookListView</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n      <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n\n      <span class=\"k\">def</span> <span class=\"nf\">head</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n          <span class=\"n\">last_book</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">().</span><span class=\"n\">latest</span><span class=\"p\">(</span><span class=\"s\">'publication_date'</span><span class=\"p\">)</span>\n          <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">)</span>\n          <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s\">'Last-Modified'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">last_book</span><span class=\"p\">.</span><span class=\"n\">publication_date</span><span class=\"p\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s\">'%a, %d %b %Y %H:%M:%S GMT'</span><span class=\"p\">)</span>\n          <span class=\"k\">return</span> <span class=\"n\">response</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<h2 id=\"4-클래스형-뷰의-상속기능\">4. 클래스형 뷰의 상속기능</h2>\n<ul>\n <li>먼저 <strong>제네릭뷰</strong>에 대해 알아야 함. 클래스 뷰의 대부분이 제네릭 뷰를 상속받고 있음</li>\n <li>\n <p><strong>제네릭뷰</strong> : 모델, 뷰, 템플릿 개발과정의 공통된 단순반복 작업들을 추상화하고, 장고에서 미리 만들어 제공해주는 클래스형 뷰를 의미</p>\n </li>\n <li>제네릭뷰의 예제\n <ul>\n <li>some_app/urls.py\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">some_app.views</span> <span class=\"kn\">import</span> <span class=\"n\">AboutView</span>\n\n  <span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'about/'</span><span class=\"p\">,</span> <span class=\"n\">AboutView</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">())</span>\n  <span class=\"p\">]</span>\n</code></pre>  </div> </div>\n </li>\n <li>some_app/views.py\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n  <span class=\"k\">class</span> <span class=\"nc\">AboutView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n      <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">\"about.html\"</span>\n</code></pre>  </div> </div>\n </li>\n </ul>\n </li>\n <li>또는,\n <ul>\n <li>간단히 호출만 하는 뷰라면, urls.py에서 한번에 처리가 가능\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n  <span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n  <span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n      <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'about/'</span><span class=\"p\">,</span> <span class=\"n\">TemplateView</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s\">'about.html'</span><span class=\"p\">))</span>\n  <span class=\"p\">]</span>\n</code></pre>  </div> </div>\n <ul>\n <li>template_name 은 TemplateView 클래스에 정의된 클래스 속성인데, <strong>오버라이드</strong> 하고 있다.</li>\n </ul>\n </li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"5-클래스형-제네릭-뷰의-종류\">5. 클래스형 제네릭 뷰의 종류</h2>\n<blockquote>\n <p>참고 : <a href=\"https://docs.djangoproject.com/en/2.1/ref/class-based-views\">https://docs.djangoproject.com/en/2.1/ref/class-based-views</a></p>\n <ul>\n <li>Base View : 뷰 클래스 생성하고 다른 제네릭 뷰의 부모 클래스를 제공하는 기본 클래스 뷰</li>\n <li>Generic Display View : 객체의 리스트를 보여주고, 특정 개체의 상세정보를 보여줌</li>\n <li>Generic Edit View : 폼을 통해 객체를 생성, 수정, 삭제 하는 기능 제공</li>\n <li>Generic Date View : 날짜 기반 객체를 연/월/일 페이지로 구분하여 보여줌</li>\n </ul>\n</blockquote>\n\n<table>\n <thead>\n <tr>\n <th>제네릭 뷰 분류</th>\n <th>제네릭 뷰 이름</th>\n <th>뷰의 기능 또는 역할</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>Base View</td>\n <td>View<br />TemplateView<br />RedirectView</td>\n <td>최상위 뷰<br />주어진 템플릿을 렌더링<br />주어진 URL을 리다이렉트 시킴</td>\n </tr>\n <tr>\n <td>Generic Display View</td>\n <td>ListView<br />DetailView</td>\n <td>조건에 맞는 여러개의 객체를 보여줌<br />객체 하나에 대한 상세한 정보 제공</td>\n </tr>\n <tr>\n <td>Generic Edit View</td>\n <td>FormView<br />CreateView<br />UpdateView<br />DeleteView</td>\n <td>주어진 폼을 보여줌<br />객체를 생성하는 폼을 보여줌<br />기존객체를 수정하는 폼을 보여줌<br />기존객체를 삭제하는 폼을 보여줌</td>\n </tr>\n <tr>\n <td>Generic Date View</td>\n <td>ArchiveIndexView<br />YearArchiveView<br />MonthArchiveView<br />WeekArchiveView<br />DayArchiveView<br />TodayArchiveView<br />DateDetailView</td>\n <td>조건에 맞는 여러개의 객체 및 그 객체들에 대한 날짜정보를 보여줌<br />연도가 주어지면 그 연도에 해당하는 객체들을 보여줌<br />연,월이 주어지면 그에 해당하는 객체들이 보여짐<br />연도와 주차가 주어지면 그에 해당하는 객체들을 보여줌<br />연,월,일이 주어지면 그 날짜에 해당하는 객체들을 보여줌<br />오늘 날짜에 해당하는 객체들을 보여줌<br />연,월,일,기본키가 주어지면 그에 해당하는 특정 객체 하나에 대한 상세한 정보를 보여줌</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"6-클래스형-뷰에서-폼-처리\">6. 클래스형 뷰에서 폼 처리</h2>\n<ul>\n <li>Get 처리, 유효한 Post 처리, 유효하지 않은 Post 처리</li>\n</ul>\n\n<h3 id=\"1-클래스형-뷰로-폼을-처리하는-예시---view\">(1) 클래스형 뷰로 폼을 처리하는 예시 - View</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponseRedirect</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.forms</span> <span class=\"kn\">import</span> <span class=\"n\">MyForm</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyFormView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"n\">form_class</span> <span class=\"o\">=</span> <span class=\"n\">MyForm</span>\n    <span class=\"n\">initial</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'key'</span><span class=\"p\">:</span><span class=\"s\">'value'</span><span class=\"p\">}</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'form_template.html'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        \n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">form_class</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">initial</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s\">'form'</span><span class=\"p\">:</span><span class=\"n\">form</span><span class=\"p\">})</span> <span class=\"c1\"># get 방식 요청은, 비어있는 form 제공\n</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">form_class</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">POST</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"p\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\n            <span class=\"c1\"># cleaned_data로 관련로직 처리\n</span>            <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"s\">'/success/'</span><span class=\"p\">)</span> <span class=\"c1\"># 유효한 form 처리, 성공적으로 리다이렉트\n</span>\n        <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s\">'form'</span><span class=\"p\">:</span><span class=\"n\">form</span><span class=\"p\">})</span> <span class=\"c1\"># 유효하지 않은 form 처리, 이전에 입력했던 값들을 그대로 template 에 보여줌\n</span>\n</code></pre>  </div></div>\n\n<h3 id=\"2-formview-제네릭뷰로-폼을-처리하는-예시---formview\">(2) FormView 제네릭뷰로 폼을 처리하는 예시 - FormView</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">.forms</span> <span class=\"kn\">import</span> <span class=\"n\">MyForm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.edit</span> <span class=\"kn\">import</span> <span class=\"n\">FormView</span>\n\n<span class=\"c1\"># FromView에 이미 정의되어 있으므로, get(), post()가 불필요함\n</span><span class=\"k\">class</span> <span class=\"nc\">MyFormView</span><span class=\"p\">(</span><span class=\"n\">FormView</span><span class=\"p\">):</span>\n    <span class=\"n\">form_class</span> <span class=\"o\">=</span> <span class=\"n\">MyForm</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'form_template.html'</span>\n    <span class=\"n\">success_url</span> <span class=\"o\">=</span> <span class=\"s\">'/thanks/'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">form_valid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">):</span>\n        <span class=\"c1\">#cleaned_data로 관련 로직 처리\n</span>        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyFormView</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">).</span><span class=\"n\">form_valid</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>FromView에 이미 정의되어 있으므로, get(), post()가 불필요함</li>\n <li>form_class : 사용자에게 보여줄 form, forms.py에 정의한 폼 클래스</li>\n <li>template_name : 렌더링할 템플릿 파일 이름</li>\n <li>success_url : MyFormView 가 정상적으로 처리되었을 때 리다이렉트 할 주소</li>\n <li>form_valid() : 유효한 폼 데이터로 처리할 로직. super()를 사용하면, success_url로 리다이렉트까지 처리됨</li>\n</ul>\n","dir":"/python/DjangoCoreFunction/","name":"DjangoViewClass.md","path":"python/DjangoCoreFunction/DjangoViewClass.md","url":"/python/DjangoCoreFunction/DjangoViewClass.html"},{"sort":5,"layout":"default","title":"애플리케이션 개발하기 - URLconf, View 및 Templete 코딩","content":"# 애플리케이션 개발하기 - URLconf, View 및 Templete 코딩\n> ch3/mysite/urls.py 파일에 정의 \n\n## 1. 처리 흐름 설계\n\n|URL 패턴 |View 이름 |Templete 이름 |\n|:--- |:--- |:--- |\n|/polls/ |index() |index.html |\n|/polls/5/ |detail() |detail.html |\n|/polls/5/vote/ |vote() |REDIRECT:/polls/5/result |\n|/polls/5/results/ |results() |results.html |\n\n## 2. 작업 순서\n> URLconf -> templete or view\n\n1. urls.py 작성\n2. views.index(), index.html 작성\n3. views.detail(), detail.html 작성\n4. views.vote() 작성\n5. views.results(), results.html 작성\n\n## 3. URLconf 코딩\n> admin 사이트를 포함하여 5개의 url 가 필요함.\n> ch3/mysite/urls.py 에 코딩\n\n- mysite/settings.py 파일의 ROOT_URLCONF 항목이 정의되어 있으며, 이 항목에 정의된 urls.py 파일을 가장 먼저 분석함\n- 지금처럼 mysite/urls.py 에 polls에 대한 urlconf를 작성할 수도 있고, mysite/urls.py와 polls/urls.py에 나누어서 작성 할 수도 있음\n- <font color='red'>파일을 나누어 작성하는 방법을 추천함, 예시 2 (계층적인 구조로 유지보수에 좋음)</font>\n\n- **예시 1** (mysite/urls.py 에 한번에 작성하는 방법)\n\n + mysite/urls.py\n \n ```python\n from django.contrib import admin\n from django.urls import path\n from polls import views\n\n # URL 패턴 매칭이 위에서 아래로 진행되므로, 순서에 유의 해야 함\n # path() 함수는, route, view 2개의 필수 인자와 kwargs, name 2개의 선택 인자를 받음\n # route: URL 스트링\n # view: 호출되는 뷰 함수\n # kwargs: URL에서 추출된 파라미터 외에 추가적인 파라미터를 함수에 전달 할때 사용\n # name: 각 URL 패턴별로 이름을 붙여줌. 이 이름을 Templete 에서 많이 사용함.\n urlpatterns = [\n path('admin/', admin.site.urls),\n path('polls/', views.index, name='index'),\n path('polls/<int:question_id>/', views.detail, name='detail'),\n path('polls/<int:question_id>/vote/',views.vote, name='vote'),\n path('polls/<int:question_id>/results/',views.results, name='results'),\n\n ]\n\n ```\n- **예시 2** (mysite/urls.py와 polls/urls.py에 나누어서 작성하는 방법)\n \n + mysite/urls.py\n\n ```python\n from django.contrib import admin\n from django.urls import path, include\n import polls\n\n urlpatterns = [\n path('admin/', admin.site.urls),\n path('polls/',include('polls.urls')),\n ]\n ```\n\n + polls/urls.py\n\n ```python\n from django.urls import path\n from . import views\n\n # URL 패턴 매칭이 위에서 아래로 진행되므로, 순서에 유의 해야 함\n # path() 함수는, route, view 2개의 필수 인자와 kwargs, name 2개의 선택 인자를 받음\n # route: URL 스트링\n # view: 호출되는 뷰 함수\n # kwargs: URL에서 추출된 파라미터 외에 추가적인 파라미터를 함수에 전달 할때 사용\n # name: 각 URL 패턴별로 이름을 붙여줌. 이 이름을 Templete 에서 많이 사용함.\n\n # app_name 은, URL가 중복되는 경우 네임스페이스를 구별해 줌 (예를 들어, polls 애플리케이션과 임의의 blogs 라는 애플리케이션이 'detail' 이라는 url 패턴을 갖는 경우,)\n app_name = 'polls'\n urlpatterns = [\n path('', views.index, name='index'), # /polls/\n path('<int:question_id>/', views.detail, name='detail'), # /polls/5/\n path('<int:question_id>/vote/',views.vote, name='vote'), # /polls/5/vote/\n path('<int:question_id>/results/',views.results, name='results'), # /polls/5/results\n\n ]\n ```\n\n## 4. 뷰 함수 index() 및 템플릿 작성\n\n### (1) 템플릿파일을 생성할 디렉토리 생성\n\n1. 템플릿 디렉토리 생성\n\n```\n~polls>mkdir templates\n# templates안에 또 polls 디렉토리를 생성하여 그 하위에 템플릿 파일을 저장하는 이유는, 이름이 같은 템플릿 파일들의 충돌을 막기 위함\n~polls>mkdir templates/polls\n```\n2. settings.py 파일 **TEMPLATES** 항목의 **DIRS**에 템플릿 디렉토리 경로 지정\n\n```\n# mysite/settings.py\n(생략)\nTEMPLATES = [\n {\n 'BACKEND': 'django.template.backends.django.DjangoTemplates',\n 'DIRS': [os.path.join(BASE_DIR,'templates')],\n 'APP_DIRS': True,\n 'OPTIONS': {\n 'context_processors': [\n 'django.template.context_processors.debug',\n 'django.template.context_processors.request',\n 'django.contrib.auth.context_processors.auth',\n 'django.contrib.messages.context_processors.messages',\n ],\n },\n },\n]\n(생략)\n```\n\n### (2) index.html 템플릿 파일 생성\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Title</title>\n</head>\n<body>\n {% if latest_list %}\n <ul>\n {% for question in latest_question_list %}\n <li><a href=\"/polls/{{ question.id }}/\">{{ question.question_text }}</a> </li>\n {% endfor %}\n </ul>\n {% else %}\n <p>No polls are available.</p>\n {% endif %}\n</body>\n</html>\n```\n\n### (3) index() 뷰 함수 생성\n> polls/views.py 파일에 함수 정의\n\n```python\nfrom django.shortcuts import render\nfrom polls.models import Question\n\n# Create your views here.\ndef index(request):\n # Question 테이블 객체에서 pub_date 컬럼의 역순으로 정렬하여 5개의 최근 Question 객체를 가져옴\n latest_question_list = Question.objects.all().order_by('-pub_date')[:5]\n context = {'latest_question_list':latest_question_list}\n # render() 는 context를 인자로 받아 HTTPResponse를 반환함\n return render(request, 'polls/index.html', context)\n```\n\n- 단축함수란?\n + 템플릿 변수를 로딩한 후에 컨텍스트 변수를 적용하고, 그 결과를 HTTPResponse 객체에 담아 반환하는 작업등의 공통 기능들을 장고에서 미리 만들어 내장함수로 제공하는 함수.\n + 예를 들어, render() 함수\n\n## 5. 뷰 함수 detail() 및 폼 템플릿 작성\n\n### (1) detail.html 템플릿 작성\n\n```html\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Title</title>\n</head>\n<body>\n <h1>{{ question.question_text }}</h1>\n {% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}\n <!-- url 탬플릿 태그 사용, polls:vote는 URLconf 에서 적은 url 패턴 이름 -->\n <form action=\"{% url 'polls:vote' question.id %}\" method=\"post\">\n <!--폼을 처리하는 경우, CSRF 공격을 방지하기 위한 기능-->\n {%csrf_token%}\n <!--vote() 뷰 함수에서 request.POST['choice'] 구문으로 액세스 할 수 있음-->\n <!--input 태그의 name, id 속성은 request.POST 사전에서 key, value 로 상돋됨-->\n {% for choice in question.choice_set.all %}\n <input type=\"radio\" name=\"choice\" id=\"choice{{ forloop.counter }}\" value=\"{{ choice.id }}\"/>\n <label for=\"choice{{ forloop.counter }}\">{{choice.choice_text}}</label><br/>\n {% endfor %}\n <input type=\"submit\" value = \"Vote\" />\n </form>\n</body>\n</html>\n{% endraw %}\n```\n\n- choice_set 속성 : Question:Choice 의 관계가 1:N 으로, 이런 관계일 때 XXX_set 이라는 속성을 기본적으로 제공함\n\n### (2) detail() 뷰 함수 작성\n\n```python\nfrom django.shortcuts import render, get_object_or_404\nfrom polls.models import Question\n\n# Create your views here.\n# def index(request):(생략)\n\ndef detail(request, question_id):\n question = get_object_or_404(Question, pk=question_id)\n return render(request, 'polls/detail.html', {'question':question})\n```\n- 단축함수 `get_object_or_404` : 첫번째 인자는 모델 클래스, 두번째 인자부터 조건. 조건에 맞는 객체를 조회하고, 없으면 404 에러를 반환. 'get_list_or_404()' 함수도 있음\n\n## 6. 뷰 함수 vote() 및 리다이렉션 작성\n{% raw %}\n> detail.html 로 부터 /polls/5/vote url로 POST 방식으로 전달됨 \n> detail.html : `<form action=\"{% url 'polls:vote' question.id %}\" method='POST'>` \n> urls.py : `path('polls/<int:question_id>/vote/', views.vote, name='vote' )` \n{% endraw %}\n\n\n### (1) vote() 뷰 함수 작성하고 Redirect 하기\n\n```python\nfrom django.shortcuts import render, get_object_or_404\nfrom polls.models import Question, Choice\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\n\n# Create your views here.\n# def index(request): (생략)\n# def detail(request, question_id):(생략)\n\ndef vote(request, question_id):\n question = get_object_or_404(Question, pk=question_id)\n try:\n selected_choice = question.choice_set.get(pk=request.POST['choice'])\n except (KeyError, Choice.DoesNotExist):\n # 설문 투표 폼을 다시 보여준다\n return render(request, 'polls/detail.html', {'question':question, 'error_message':\"You didn't select a choice.\"})\n\n else:\n selected_choice.votes +=1\n selected_choice.save()\n # POST 데이터를 정상적으로 처리하였으면,\n # 항상 HttpResponseRedirect를 반환하여 리다리엑션 처리함\n return HttpResponseRedirect(reverse('polls:results', args=(question_id,)))\n```\n\n- redirect : django.http.HttpResponseRedirect 함수 사용.\n- KeyError : request.POST['choice'] 의 choice 라는 키가 없을 때 발생하는 에러\n- Choice.DoesNotExist : 검색 조건에 맞는 Choice 객체가 없을 때 발생하는 에러\n- `reverse()` : 보통 URL 패턴의 URL 스트링으로 부터 url 검색을 시작하는데, reverse() 함수는 URL 패턴 이름으로 URL 스트링을 찾아가도록 하는 함수.\n- <font color='red'>소스에 URL 스트링을 하드코딩 하지 말고 reverse() 함수를 사용하도록 함</font>\n\n## 7. 뷰 함수 results() 와 템플릿 작성\n\n### (1) results() 뷰 함수 작성\n\n```python\ndef results(request, question_id):\n question = get_object_or_404(Question, pk=question_id)\n return render(request, 'polls/results.html', {'question':question})\n```\n\n### (2) results.html 탬플릿 작성\n\n```html\n{% raw %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Title</title>\n</head>\n<body>\n <h1>{{ quesiton.question_text }}</h1>\n <ul>\n {% for choice in question.choice_set.all %}\n <li>{{choice.text}} - {{choice.votes}} vote{{choice.votes|pluralize}}</li>\n {% endfor %}\n </ul>\n <a href=\"{% url 'polls:detail' question.id %}\">Vote Again?</a>\n</body>\n</html>\n{% endraw %}\n```\n\n- `vote{{choice.votes|pluralize}}`: choice.votes 값에 따라 복수로 표현할지를 결정 하는 pluralize 탬플릿 필터, 결과적으로 'vote' 또는 'votes'로 보여짐\n\n## 8. 지금까지 작업 확인하기\n\n1. 테스트서버 실행\n`$ch3>python manage.py runserver`\n\n2. 웹 브라우저에서 'http://localhost:8000/polls' 실행\n - 현재 데이터가 하나도 없어서 빈 페이지로 나타남\n ![polls/index.html](/assets/images/polls_index.png)\n\n3. Admin 사이트(http://localhost:8000/admin)로 로그인 하여, Question, Choice 테이블에 데이터 입력\n - Questions 테이블\n\n |question_text|Date|Time|\n |What is your hobby?|today|now|\n |What do you like best?|today|now|\n |Where do you live?|today|now|\n\n - Choices ( 나머지 question_text에도 3개 정도의 choice_text를 임의로 등록해 보자.)\n\n |question_text|choice_text|vote|\n |What is your hobby?|Reading|0|\n |What is your hobby?|Soccer|0|\n |What is your hobby?|Climbing|0|\n\n4. 웹 브라우저에서 'http://localhost:8000/polls' 실행\n - Question 목록이 보여짐\n![Question list](/assets/images/polls_index_question_list.png)\n\n5. 'What is your hobby?' 를 클릭하여, 'http://localhost:8000/polls/1/' 실행\n - choice 목록이 보여짐\n![Question list](/assets/images/polls_detail.png)\n\n6. 'Reading'에 체크하고 'vote' 버튼 클릭하여 'http://localhost:8000/1/vote/' 실행 -> 'http://localhost:8000/1/results' 로 redirect 됨\n - choice의 투표 결과가 보여지는 result.html 화면이 보여짐\n ![Question list](/assets/images/polls_result.png)\n","dir":"/python/DjangoWebFramework/","name":"jangoDevelopment-View_Templete.md","path":"python/DjangoWebFramework/jangoDevelopment-View_Templete.md","url":"/python/DjangoWebFramework/jangoDevelopment-View_Templete.html"},{"sort":5,"layout":"default","title":"뷰 개발","content":"<h1 id=\"뷰-개발\">뷰 개발</h1>\n\n<ul>\n <li>bookmark/views.py</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">ListView</span><span class=\"p\">,</span> <span class=\"n\">DetailView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bookmark.models</span> <span class=\"kn\">import</span> <span class=\"n\">Bookmark</span>\n\n\n<span class=\"c1\"># Create your views here.\n</span><span class=\"kn\">from</span> <span class=\"nn\">mysite.views</span> <span class=\"kn\">import</span> <span class=\"n\">OwnerMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BookmarkLV</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Bookmark</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BookmarkDV</span><span class=\"p\">(</span><span class=\"n\">DetailView</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Bookmark</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>ListView의 컨텍스트 변수는 기본적으로 <code class=\"language-plaintext highlighter-rouge\">object_list</code> 를 사용</li>\n <li>ListView의 템플릿 파일 이름은 기본적으로 <code class=\"language-plaintext highlighter-rouge\">모델명_list.html</code> 을 사용</li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n <li>DetailView의 컨텍스트 변수는 기본적으로 <code class=\"language-plaintext highlighter-rouge\">object</code> 를 사용</li>\n <li>DetailView의 템플릿 파일 이름은 기본적으로 <code class=\"language-plaintext highlighter-rouge\">모델명_detail.html</code> 를 사용</li>\n</ul>\n","dir":"/python/developBookmark/","name":"5_view.md","path":"python/developBookmark/5_view.md","url":"/python/developBookmark/5_view.html"},{"sort":5,"permalink":"/python/extendExampleProject/","layout":"default","title":"실습예제 심화","content":"<h1 id=\"실습예제-심화\">실습예제 심화</h1>\n\n<blockquote>\n <p>예제 프로젝트 저장소 : <a href=\"https://github.com/82iirriiss/python_basic_project\">https://github.com/82iirriiss/python_basic_project</a></p>\n</blockquote>\n\n<blockquote>\n <p>기존의 프로젝트를 클래스 뷰나 템플릿 상속을 통해 더 세련된 코드로 변경 해 보자 <br />\n기존의 프로젝트에 새로운 어플리케이션을 추가 해 보자 <br />\nmodel 작성에 ManyToManyField 속성이 추가됨 <br />\nviews 작성시, 클래스뷰를 사용하기 <br />\n로깅 기능 추가하기</p>\n</blockquote>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/extendExampleProject/README.md</code></p>\n","dir":"/python/extendExampleProject/","name":"README.md","path":"python/extendExampleProject/README.md","url":"/python/extendExampleProject/"},{"sort":5,"layout":"default","title":"비지니스 계층 (Service) 구현","content":"<h1 id=\"비지니스-계층-service-구현\">비지니스 계층 (Service) 구현</h1>\n<ul>\n <li>고객의 요구사항 반영</li>\n <li>서비스 객체 하나에서는, 여러개의 persistence 객체를 조합하여 사용하기도 한다.</li>\n <li>계층간의 연결은 인터페이스를 사용하여 느슨한 연결을 한다.</li>\n <li>\n <font color=\"red\">Persistence 계층은, 개발자 중심의 용어를 사용하지만 Business 계층은 고객 친화적인 용어를 사용한다. </font>\n </li>\n</ul>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.service</code> 패키지 생성 - 하위에 <code class=\"language-plaintext highlighter-rouge\">BoardService.java</code> 인터페이스 생성</li>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.service.impl</code> 패키지 생성 - 하위에 <code class=\"language-plaintext highlighter-rouge\">BoardServiceImpl.java</code> 구현 클래스 생성</li>\n</ol>\n\n<h2 id=\"boardservice-인터페이스-생성\">BoardService 인터페이스 생성</h2>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">interface</span> <span class=\"nc\">BoardService</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nc\">BoardVO</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">();</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"boardserciceimpl-구현-클래스-생성\">BoardSerciceImpl 구현 클래스 생성</h2>\n\n<ul>\n <li>\n <font color=\"red\">@Service 어노테이션 중요!</font>\n </li>\n <li>BoardServiceImpl(BoardMapper) 생성자를 만들어 주기 위해, @AllArgsConstructor 추가 ( @Setter(onMethod=@__({@Autowired})) 를 해 주어도 됨. )</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Log4j</span>\n<span class=\"nd\">@Service</span>\n<span class=\"nd\">@AllArgsConstructor</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardServiceImpl</span> <span class=\"kd\">implements</span> <span class=\"nc\">BoardService</span><span class=\"o\">{</span>\n\n    <span class=\"c1\">// mapper 주입</span>\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardMapper</span> <span class=\"n\">mapper</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"register.........\"</span> <span class=\"o\">+</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">insert</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">BoardVO</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"get...........\"</span> <span class=\"o\">+</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">read</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"modify...........\"</span> <span class=\"o\">+</span> <span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">update</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)==</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"remove...........\"</span> <span class=\"o\">+</span> <span class=\"n\">bno</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">delete</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">)==</span><span class=\"mi\">1</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"getList..................\"</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\n\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"서비스-객체를-bean-으로-등록-componentscan\">서비스 객체를 Bean 으로 등록 (ComponentScan)</h2>\n\n<ul>\n <li>root-context.xml</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- context 네임스페이스 추가 --&gt;</span>\n<span class=\"nt\">&lt;beans</span> <span class=\"na\">xmlns:context=</span><span class=\"s\">\"http://www.springframework.org/schema/context\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"c\">&lt;!-- 컴포넌트 스캔 추가 --&gt;</span>\n\t<span class=\"nt\">&lt;context:component-scan</span> <span class=\"na\">base-package=</span><span class=\"s\">\"org.example.service\"</span> <span class=\"nt\">/&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>RootConfig.java</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Configuration</span>\n<span class=\"c1\">// ComponentScan 추가</span>\n<span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.service\"</span><span class=\"o\">})</span>\n<span class=\"nd\">@MapperScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.mapper\"</span><span class=\"o\">})</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">RootConfig</span> <span class=\"o\">{</span>\n\t<span class=\"c1\">// 생략</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<h2 id=\"테스트\">테스트</h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">src/test/java</code> 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.service</code> 패키지 생성 - BoardServiceTests.java 생성</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"c1\">//@ContextConfiguration(classes={RootConfig.class})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardServiceTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testExist</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">assertNotNull</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRegister</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-서비스 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠 - 서비스 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user02\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGet</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testModify</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">bno</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-서비스 테스트 업데이트 \"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠 - 서비스 테스트 업데이트 \"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user03\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"modify test Result:\"</span> <span class=\"o\">+</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRemove</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"remove test Result::\"</span> <span class=\"o\">+</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGetList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">board</span> <span class=\"o\">-&gt;</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">board</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n","dir":"/spring5/3_webDev/","name":"5_business.md","path":"spring5/3_webDev/5_business.md","url":"/spring5/3_webDev/5_business.html"},{"sort":5,"permalink":"/spring5/5_aop_transaction/","layout":"default","title":"AOP와 트랜젝션","content":"<h1 id=\"aop와-트랜젝션\">AOP와 트랜젝션</h1>\n","dir":"/spring5/5_aop_transaction/","name":"README.md","path":"spring5/5_aop_transaction/README.md","url":"/spring5/5_aop_transaction/"},{"sort":6,"layout":"default","title":"프레젠테이션 계층(Controller) 구현","content":"<h1 id=\"프레젠테이션-계층controller-구현\">프레젠테이션 계층(Controller) 구현</h1>\n\n<h2 id=\"1-controller-분석\"><font color=\"blue\">1. Controller 분석</font></h2>\n\n<table>\n <tbody>\n <tr>\n <td>Task</td>\n <td>URL</td>\n <td>MEthod</td>\n <td>Parameter</td>\n <td>From (입력화면)</td>\n <td>URL 이동</td>\n </tr>\n </tbody>\n <tfoot>\n <tr>\n <td>전체목록</td>\n <td>/board/list</td>\n <td>GET</td>\n <td> </td>\n <td> </td>\n <td> </td>\n </tr>\n <tr>\n <td>등록</td>\n <td>/board/register</td>\n <td>Post</td>\n <td>모든 항목 |</td>\n <td>list 이동</td>\n <td> </td>\n </tr>\n <tr>\n <td>조회</td>\n <td>/board/get</td>\n <td>GET</td>\n <td>bno</td>\n <td> </td>\n <td> </td>\n </tr>\n <tr>\n <td>삭제</td>\n <td>/board/remove</td>\n <td>Post</td>\n <td>bno</td>\n <td>입력화면</td>\n <td>list 이동</td>\n </tr>\n <tr>\n <td>수정</td>\n <td>/board/modify</td>\n <td>Post</td>\n <td>모든 항목</td>\n <td>입력화면</td>\n <td>list 이동</td>\n </tr>\n </tfoot>\n</table>\n\n<h2 id=\"2-boardcontroller-작성\"><font color=\"blue\">2. BoardController 작성</font></h2>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.controller</code> 패키지 생성 - <code class=\"language-plaintext highlighter-rouge\">BoardController.java</code> 작성</li>\n</ol>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Controller</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/board/*\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"nd\">@AllArgsConstructor</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardController</span> <span class=\"o\">{</span>\n\n    <span class=\"c1\">// @AllArgsConstructor 로 생성자에 BoardService를 주입해 줌.</span>\n    <span class=\"c1\">// @AllArgsConstructor 대신 @Setter(onmethod=@__({@Autowired})) 로 주입 할 수도 있음.</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">//게시글 목록</span>\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/list\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">list</span><span class=\"o\">(</span><span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"list\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">());</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/register\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span> <span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/get\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"board\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">));</span>\n\t\t\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span> <span class=\"s\">\"succcess\"</span><span class=\"o\">);</span>\t\t\t\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"c1\">//삭제는 반드시, post 로만 처리합니다.</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/remove\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"3-boardcontroller-테스트-작성\"><font color=\"blue\">3. BoardController 테스트 작성</font></h2>\n\n<ol>\n <li><code class=\"language-plaintext highlighter-rouge\">src/test/java</code> 디렉토리 하위에 <code class=\"language-plaintext highlighter-rouge\">org.example.controller</code> 패키지 생성 - <code class=\"language-plaintext highlighter-rouge\">BoardControllerTests.java</code> 클래스 선언</li>\n <li>WAS 실행하지 않고 웹 URL 을 테스트 할 수 있다.</li>\n <li>@WebAppConfiguration 은, servlet-context.xml 설정(스프링의 WebApplicationContext 이용하기 위한 설정) 을 이용하기 위해서 선언</li>\n</ol>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"c1\">// test for Controller </span>\n<span class=\"nd\">@WebAppConfiguration</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">({</span>\n\t\t<span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">,</span>\n\t\t<span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml\"</span><span class=\"o\">})</span>\n<span class=\"c1\">//자바 설정 시, @ContextConfiguration(classes = {RootConfig.class, ServletConfig.class})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardControllerTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">WebApplicationContext</span> <span class=\"n\">ctx</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">MockMvc</span> <span class=\"n\">mockMvc</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Before</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">mockMvc</span> <span class=\"o\">=</span> <span class=\"nc\">MockMvcBuilders</span><span class=\"o\">.</span><span class=\"na\">webAppContextSetup</span><span class=\"o\">(</span><span class=\"n\">ctx</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testList</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"----test List--------\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/board/list/\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelMap</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRegister</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/register\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"title\"</span><span class=\"o\">,</span> <span class=\"s\">\"컨트롤러 테스트 - 타이틀\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"content\"</span><span class=\"o\">,</span><span class=\"s\">\"컨트롤러 테스트 - 컨텐츠\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"writer\"</span><span class=\"o\">,</span> <span class=\"s\">\"user001\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">).</span><span class=\"na\">andReturn</span><span class=\"o\">().</span><span class=\"na\">getModelAndView</span><span class=\"o\">().</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"resultPage:\"</span><span class=\"o\">+</span><span class=\"n\">resultPage</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGet</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/board/get\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">))</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">getModelMap</span><span class=\"o\">());</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testModify</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/modify\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"title\"</span><span class=\"o\">,</span><span class=\"s\">\"타이틀 수정 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"content\"</span><span class=\"o\">,</span> <span class=\"s\">\"컨텐츠 수정 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"writer\"</span><span class=\"o\">,</span> <span class=\"s\">\"user003\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">resultPage</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRemove</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/remove\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"resultPage::\"</span> <span class=\"o\">+</span> <span class=\"n\">resultPage</span> <span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/3_webDev/","name":"6_presentation.md","path":"spring5/3_webDev/6_presentation.md","url":"/spring5/3_webDev/6_presentation.html"},{"sort":6,"permalink":"/spring5/6_fileUpload/","layout":"default","title":"파일 업로드 처리","content":"<h1 id=\"파일-업로드-처리\">파일 업로드 처리</h1>\n","dir":"/spring5/6_fileUpload/","name":"README.md","path":"spring5/6_fileUpload/README.md","url":"/spring5/6_fileUpload/"},{"sort":6,"layout":"default","title":"템플릿 개발","content":"<h1 id=\"템플릿-개발\">템플릿 개발</h1>\n\n<ul>\n <li>\n <p>북마크 목록 : bookmark/templates/bookmark/bookmark_list.html</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">extends</span> <span class=\"s\">'base.html'</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">block</span> <span class=\"n\">title</span><span class=\"o\">%</span><span class=\"p\">}</span><span class=\"n\">bookmark_list</span><span class=\"p\">.</span><span class=\"n\">html</span><span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endblock</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">block</span> <span class=\"n\">content</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n          <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"n\">Bookmark</span> <span class=\"n\">List</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n              <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"k\">for</span> <span class=\"n\">bookmark</span> <span class=\"ow\">in</span> <span class=\"n\">object_list</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n                  <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;&lt;</span><span class=\"n\">a</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s\">\"{% url 'bookmark:detail' bookmark.id %}\"</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"n\">bookmark</span><span class=\"p\">}}</span><span class=\"o\">&lt;/</span><span class=\"n\">a</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n              <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endfor</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n          <span class=\"o\">&lt;/</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endblock</span> <span class=\"n\">content</span><span class=\"o\">%</span><span class=\"p\">}</span>\n    \n</code></pre>  </div> </div>\n <ul>\n <li>views.py 에서 전해준 object_list 컨텍스트 변수를 사용하고 있다.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">{% url %}</code>를 통해 bookmark/<bookmark.id>(자세히 보기) url 링크를 걸어주었다.</bookmark.id></li>\n <li><code class=\"language-plaintext highlighter-rouge\">{{bookmark}}</code> 는, models.py 의 Bookmark 클래스를 정의 할 때 작성했던 함수 <code class=\"language-plaintext highlighter-rouge\">__str__()</code> 의 반환으로 bookmark.title 을 반환한다.</li>\n </ul>\n </li>\n <li>\n <p>북마크 상세보기 : bookmark/templates/bookmark/bookmark_detail.html</p>\n\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">extends</span> <span class=\"s\">'base.html'</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">block</span> <span class=\"n\">title</span> <span class=\"o\">%</span><span class=\"p\">}</span><span class=\"n\">bookmark_detail</span><span class=\"p\">.</span><span class=\"n\">html</span><span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endblock</span> <span class=\"n\">title</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">block</span> <span class=\"n\">content</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n              <span class=\"o\">&lt;</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nb\">object</span><span class=\"p\">.</span><span class=\"n\">title</span><span class=\"p\">}}</span><span class=\"o\">&lt;/</span><span class=\"n\">h1</span><span class=\"o\">&gt;</span>\n              <span class=\"o\">&lt;</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n                  <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"n\">URL</span> <span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">a</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s\">\"{{object.url}}\"</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span><span class=\"nb\">object</span><span class=\"p\">.</span><span class=\"n\">url</span><span class=\"p\">}}</span><span class=\"o\">&lt;/</span><span class=\"n\">a</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n              <span class=\"o\">&lt;/</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n  <span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">endblock</span> <span class=\"n\">content</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n    \n</code></pre>  </div> </div>\n <ul>\n <li>base.html은 추후에 만들 네이게이션바 이다.</li>\n <li>views.py에서 전달해준 object 컨덱스트 변수를 사용하고 있다.</li>\n </ul>\n </li>\n</ul>\n","dir":"/python/developBookmark/","name":"6_templates.md","path":"python/developBookmark/6_templates.md","url":"/python/developBookmark/6_templates.html"},{"sort":6,"layout":"default","title":"자동로그인 (remember-me)","content":"<h1 id=\"자동로그인-remember-me\">자동로그인 (remember-me)</h1>\n<blockquote>\n <p>최근 웹페이지들은 ‘자동로그인’, ‘로그인 기억하기’ 라는 이름으로 한번 로그인하면 일정 시간 동안 다시 로그인을 하지 않아도 되는 기능을 구현하고 있다. <br />\n스프링 시큐리티는 ①메모리상에서 처리 ,②데이터베이스 이용하여 간단한 설정만으로 구현이 가능하다. <br />\n<code class=\"language-plaintext highlighter-rouge\">&lt;security:remember-me&gt;</code> 태그를 이용하여 설정한다.</p>\n</blockquote>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1. remember-me 태그의 속성들</font></strong></p>\n<ul>\n <li>key : 쿠키에 사용되는 값을 암호화하기 위한 키값</li>\n <li>data-source-ref : remember-me 를 데이터베이스를 이용하여 설정할 때 사용하는 DataSource 설정</li>\n <li>remember-me-cookie : 브라우저에 보관되는 쿠키의 이름 지정, 기본은 ‘remember-me’</li>\n <li>remember-me-parameter : 화면상에서 remember-me를 설정하기 위한 input의 name</li>\n <li>token-validity-seconds : 쿠키의 유효시간 지정</li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">2. 데이터베이스를 이용하여 자동로그인 처리하기</font></strong></p>\n<blockquote>\n <p>①지정된 테이블과 지정된 SQL을 사용하는 방법, ②직접 구현하는 방법 두가지가 있다. <br />\n여기서는, 지정된 테이블을 사용하는 예제를 다룰 것이다.</p>\n</blockquote>\n\n<p><strong>지정된 테이블 스키마 생성하기</strong></p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">persistent_logins</span> <span class=\"p\">(</span>\n\t\t<span class=\"n\">username</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n        <span class=\"n\">series</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span> <span class=\"k\">primary</span> <span class=\"k\">key</span><span class=\"p\">,</span>\n        <span class=\"n\">token</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span> <span class=\"k\">not</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n        <span class=\"n\">last_used</span> <span class=\"nb\">timestamp</span> <span class=\"k\">not</span> <span class=\"k\">null</span>\n<span class=\"p\">);</span>\n</code></pre>  </div></div>\n\n<p><strong>security-context.xml 에 설정 추가하기</strong></p>\n\n<p>데이터소스만 지정해 주면 된다. \n(<code class=\"language-plaintext highlighter-rouge\"> &lt;security:remember-me data-source-ref=\"dataSource\" token-validity-seconds=\"604800\"/&gt;</code>)</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/all\"</span> <span class=\"na\">access=</span><span class=\"s\">\"permitAll\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/member\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_MEMBER')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/admin\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_ADMIN')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:form-login</span> <span class=\"na\">login-page=</span><span class=\"s\">\"/customLogin\"</span> <span class=\"na\">authentication-success-handler-ref=</span><span class=\"s\">\"customLoginSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:logout</span> <span class=\"na\">logout-url=</span><span class=\"s\">\"/customLogout\"</span> <span class=\"na\">invalidate-session=</span><span class=\"s\">\"true\"</span> <span class=\"na\">delete-cookies=</span><span class=\"s\">\"remember-me, JSESSIONID\"</span> <span class=\"na\">success-handler-ref=</span><span class=\"s\">\"customLogoutSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"c\">&lt;!-- 여기 --&gt;</span>\n        <span class=\"nt\">&lt;security:remember-me</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">token-validity-seconds=</span><span class=\"s\">\"604800\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:access-denied-handler</span> <span class=\"na\">ref=</span><span class=\"s\">\"customAccessDenied\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong>로그아웃 시, 쿠키 제거하기</strong></p>\n\n<p>security-context.xml 의 &lt;security:logout&gt;태그에 <code class=\"language-plaintext highlighter-rouge\">delete-cookies</code> 속성을 추가한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/all\"</span> <span class=\"na\">access=</span><span class=\"s\">\"permitAll\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/member\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_MEMBER')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/admin\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_ADMIN')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:form-login</span> <span class=\"na\">login-page=</span><span class=\"s\">\"/customLogin\"</span> <span class=\"na\">authentication-success-handler-ref=</span><span class=\"s\">\"customLoginSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- 여기 --&gt;</span>\n\t\t<span class=\"nt\">&lt;security:logout</span> <span class=\"na\">logout-url=</span><span class=\"s\">\"/customLogout\"</span> <span class=\"na\">invalidate-session=</span><span class=\"s\">\"true\"</span> <span class=\"na\">delete-cookies=</span><span class=\"s\">\"remember-me, JSESSIONID\"</span> <span class=\"na\">success-handler-ref=</span><span class=\"s\">\"customLogoutSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;security:remember-me</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">token-validity-seconds=</span><span class=\"s\">\"604800\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:access-denied-handler</span> <span class=\"na\">ref=</span><span class=\"s\">\"customAccessDenied\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n","dir":"/spring5/7_security/","name":"6_remember_me.md","path":"spring5/7_security/6_remember_me.md","url":"/spring5/7_security/6_remember_me.html"},{"sort":6,"permalink":"/python/DjangoWebServerConfig/","layout":"default","title":"Django 웹서버 연동원리","content":"<h1 id=\"django-웹서버-연동원리\">Django 웹서버 연동원리</h1>\n\n<blockquote>\n <p>참고 : <a href=\"https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\">https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/</a> <br />\n장고의 wsgi.py 파일 <br />\n장고의 WSGI 인터페이스 <br />\n운영서버 적용 전 장고의 설정 변경 사항</p>\n</blockquote>\n\n<ol>\n <li>운영서버로 배포 시, 운영환경의 웹서버가 우리가 만든 웹 애플리케이션을 인식 할 수 있도록 몇가지 설정사항 변경이 필요하다.</li>\n <li>운영서버는 거의 리눅스를 사용하므로, centOs 기준으로 설명한다.</li>\n <li>개발 PC에서 운영 PC로 소스를 복사하기 위해 FTP 파일이 필요한데, Xftp, WinSCP, FileZilla 등을 사용 할 수 있다.</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/DjangoWebServerConfig/README.md</code></p>\n","dir":"/python/DjangoWebServerConfig/","name":"README.md","path":"python/DjangoWebServerConfig/README.md","url":"/python/DjangoWebServerConfig/"},{"sort":6,"layout":"default","title":"로그 남기기","content":"<h1 id=\"로그-남기기\">로그 남기기</h1>\n<ul>\n <li>파이썬 로깅 모듈 4가지\n <ul>\n <li>로거</li>\n <li>핸들러</li>\n <li>필터</li>\n <li>포맷터</li>\n </ul>\n </li>\n <li>\n <font color=\"red\">로깅 관련 설정 파일</font>\n <ul>\n <li>장고 디폴트 로그 설정 : [장고 설치 홈]/site-package/utils/log.py</li>\n <li>사용자 로그 설정 : settings.py의 LOGGING_CONFIG, LOGGING 항목</li>\n </ul>\n </li>\n <li>로깅 주요 컴포넌트 관계</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n    [Logger]------------&gt;[Handler]&lt;--------------[Fomatter]\n             /   |  \\\n            /    |___\\__&gt;[Handler]&lt;--------------[Fomatter]\n           /          \\\n          /            \\\n   ---------------------------------\n   | [Filter]--&gt;[Filter]--&gt;[Filter] |    \n   ---------------------------------       \n\n</code></pre>  </div></div>\n<ul>\n <li>한개의 Logger에 여러 개의 Handler 지정 가능</li>\n <li>필터 체인 가능, 필터는 Logger 나 Handler 양쪽에 적용 가능</li>\n</ul>\n\n<h2 id=\"1-로거\">1. 로거</h2>\n<ul>\n <li>로거 : 로그 메시지를 처리하기 위해 메시지를 담아두는 저장소</li>\n <li>\n <p>로거 레벨</p>\n\n <table>\n <thead>\n <tr>\n <th style=\"text-align: left\">로그 레벨</th>\n <th style=\"text-align: left\">정수값</th>\n <th style=\"text-align: left\">설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\">NOTSET</td>\n <td style=\"text-align: left\">0</td>\n <td style=\"text-align: left\">로그레벨 최하위 수준<br />별도의 로거 또는 핸들러가 없을 때 디폴트 로그 레벨</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">DEBUG</td>\n <td style=\"text-align: left\">10</td>\n <td style=\"text-align: left\">디버그 용도</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">INFO</td>\n <td style=\"text-align: left\">20</td>\n <td style=\"text-align: left\">일반적인 정보</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">WARNING</td>\n <td style=\"text-align: left\">30</td>\n <td style=\"text-align: left\">덜 중요한 문제점 발생시 문제에 대한 정보</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">ERROR</td>\n <td style=\"text-align: left\">40</td>\n <td style=\"text-align: left\">주요 문제점 발생시 문제에 대한 정보</td>\n </tr>\n <tr>\n <td style=\"text-align: left\">CRITICAL</td>\n <td style=\"text-align: left\">50</td>\n <td style=\"text-align: left\">치명적인 문제점 발생시 문제에 대한 정보</td>\n </tr>\n </tbody>\n </table>\n </li>\n <li>로그 레코드 : 로거에 저장되는 메시지, 레코드도 로그레벨을 가짐</li>\n <li>‘로그 레코드의 로그 레벨 &gt;= 로거의 로그 레벨’ 일 때, 메시지 처리가 진행되며 그 반대는 무시됨</li>\n</ul>\n\n<h2 id=\"2-핸들러\">2. 핸들러</h2>\n<ul>\n <li>핸들러\n <ul>\n <li>메시지에 무슨 작업을 할지 결정하는 엔진</li>\n <li>메시지를 화면이나 콘솔, 파일, 네트워크 소켓등 어디에 기록할 것인지 같은 로그 동작을 정의함</li>\n <li>핸들러도 로그 레벨을 가지고 있음</li>\n <li>로그 레코드의 로그레벨 &gt;= 로그 핸들러의 로그레벨 일 때, 메시지 처리가 진행되며 그 반대는 무시됨</li>\n <li>각 핸들러는 서로 다른 로그레벨을 가질 수 있음\n <ul>\n <li>(예시) : ERROR 또는 CRITICAL 메시지는 표준 출력하는 핸들러, 모든 메시지를 파일에 기록하는 또 다른 핸들러</li>\n </ul>\n </li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"3-필터\">3. 필터</h2>\n<ul>\n <li>로그레코드가 로거에서 핸들러로 넘겨 질때 필터를 이용해 레코드에 추가적인 제어를 할 수 있음\n <ul>\n <li>예를 들어,</li>\n <li>필터를 추가하여, 특정 소스로 부터 오는 메시지만 핸들러로 넘기거나,\n _ 어떤 조건을 추가하여 조건에 맞으면, ERROR 로그를 WARNNING 로그로 낮추는 등</li>\n </ul>\n </li>\n</ul>\n\n<h2 id=\"4-포맷터\">4. 포맷터</h2>\n<ul>\n <li>출력하는 텍스트의 형식</li>\n</ul>\n\n<h2 id=\"5-로그의-설정\">5. 로그의 설정</h2>\n\n<h3 id=\"1-별도의-설정을-하지-않았을-때-django의-기본설정을-따름\">(1) 별도의 설정을 하지 않았을 때, django의 기본설정을 따름</h3>\n<ul>\n <li>[django_home]/site-packages/utils/log.py</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">DEFAULT_LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"c1\"># dicConfig 버전1 형식\n</span>    <span class=\"s\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"c1\"># 기존의 로거들을 비활성화 할것인가?, jango는 False를 권장\n</span>    <span class=\"s\">'filters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'require_debug_false'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># 디버그가 False인 경우만 핸들러를 동작함\n</span>            <span class=\"s\">'()'</span><span class=\"p\">:</span> <span class=\"s\">'django.utils.log.RequireDebugFalse'</span><span class=\"p\">,</span> <span class=\"c1\"># ()는, 필터 객체 생성 클래스로 장고에서 생성한 클래스\n</span>        <span class=\"p\">},</span>\n        <span class=\"s\">'require_debug_true'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># 디버그가 True인 경우만 핸들러를 동작함\n</span>            <span class=\"s\">'()'</span><span class=\"p\">:</span> <span class=\"s\">'django.utils.log.RequireDebugTrue'</span><span class=\"p\">,</span> <span class=\"c1\"># ()는 필터 객체 생성 클래스\n</span>        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'django.server'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># 로그 생성시간과 메시지만을 출력\n</span>            <span class=\"s\">'()'</span><span class=\"p\">:</span> <span class=\"s\">'django.utils.log.ServerFormatter'</span><span class=\"p\">,</span>\n            <span class=\"s\">'format'</span><span class=\"p\">:</span> <span class=\"s\">'[{server_time}] {message}'</span><span class=\"p\">,</span>\n            <span class=\"s\">'style'</span><span class=\"p\">:</span> <span class=\"s\">'{'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'console'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># INFO 이상의 메시지를 표준에러로 출력해주는 StreamHandler 클래스를 사용함.\n</span>            <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'INFO'</span><span class=\"p\">,</span>\n            <span class=\"s\">'filters'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">'require_debug_true'</span><span class=\"p\">],</span>\n            <span class=\"s\">'class'</span><span class=\"p\">:</span> <span class=\"s\">'logging.StreamHandler'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s\">'django.server'</span><span class=\"p\">:</span> <span class=\"p\">{</span> \n            <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'INFO'</span><span class=\"p\">,</span>\n            <span class=\"s\">'class'</span><span class=\"p\">:</span> <span class=\"s\">'logging.StreamHandler'</span><span class=\"p\">,</span>\n            <span class=\"s\">'formatter'</span><span class=\"p\">:</span> <span class=\"s\">'django.server'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s\">'mail_admins'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"c1\"># ERROR 그 이상의 메시지를 관리자 메일로 보내주는 AdminEmailHandler 클래스를 생성\n</span>            <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'ERROR'</span><span class=\"p\">,</span>\n            <span class=\"s\">'filters'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">'require_debug_false'</span><span class=\"p\">],</span>\n            <span class=\"s\">'class'</span><span class=\"p\">:</span> <span class=\"s\">'django.utils.log.AdminEmailHandler'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s\">'django'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># django.* 계층, 즉  최상위 로거\n</span>            <span class=\"s\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">'console'</span><span class=\"p\">,</span> <span class=\"s\">'mail_admins'</span><span class=\"p\">],</span>\n            <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'INFO'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s\">'django.server'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># 상위로거로 메시지를 전파하지 않음. 개발용 웹서버인 runserver에서 사용하는 로거. 5XX는 Error로, 4XX는 WARNNING 으로 메시지 출력\n</span>            <span class=\"s\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s\">'django.server'</span><span class=\"p\">],</span>\n            <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'INFO'</span><span class=\"p\">,</span>\n            <span class=\"s\">'propagate'</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h3 id=\"2-사용자-정의-로거\">(2) 사용자 정의 로거</h3>\n<ul>\n <li>mysite/settings.py</li>\n <li>LOGGING 항목에 새로운 로거를 추가하거나, django 디폴트 로거들을 오버라이딩하는 것도 가능</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">LOGGING_CONFIG</span> <span class=\"o\">=</span> <span class=\"s\">'logging.config.dictConfig'</span>    <span class=\"c1\"># 설정하지 않아도 디폴트가 dictConfig이므로 생략 가능, 로깅 설정에 사용하는 함수를 지정\n</span><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"c1\"># 개발자가 로깅을 설정할때 LOGGING 항목을 사용\n</span>    <span class=\"s\">'version'</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s\">'disable_existing_loggers'</span><span class=\"p\">:</span><span class=\"bp\">False</span><span class=\"p\">,</span>\n    <span class=\"s\">'formatters'</span><span class=\"p\">:{</span>\n        <span class=\"s\">'verbose'</span><span class=\"p\">:{</span> <span class=\"c1\"># verbose 포맷터 정의\n</span>            <span class=\"s\">'format'</span><span class=\"p\">:</span><span class=\"s\">\"[%(asctime)s] %(levelname)s %[%(name)s:%(lineno)s] %(message)s\"</span><span class=\"p\">,</span> <span class=\"c1\"># [로그메시지 기록시간], 로그레벨 이름, [로거이름:라인번호],로그메시지 순으로 출력 , \n</span>            <span class=\"s\">'datefmt'</span><span class=\"p\">:</span><span class=\"s\">\"%d/%b/%Y %H:%M:%S\"</span> <span class=\"c1\"># 시간의 포맷은 날짜/월축약형/연도 시(24시기준)/분/초 형식으로 출력\n</span>        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s\">'handlers'</span><span class=\"p\">:{</span>\n        <span class=\"s\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s\">'level'</span><span class=\"p\">:</span><span class=\"s\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s\">'class'</span><span class=\"p\">:</span><span class=\"s\">'logging.FileHandler'</span><span class=\"p\">,</span>\n            <span class=\"s\">'filename'</span><span class=\"p\">:</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span><span class=\"s\">'logs'</span><span class=\"p\">,</span><span class=\"s\">'mysite.log'</span><span class=\"p\">),</span> <span class=\"c1\"># root디렉토리/logs/mysite.log 파일로 출력\n</span>            <span class=\"s\">'formatter'</span><span class=\"p\">:</span><span class=\"s\">'verbose'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s\">'loggers'</span><span class=\"p\">:{</span>\n            <span class=\"s\">'django'</span><span class=\"p\">:{</span> <span class=\"c1\"># 디폴트로 설정되어 있는 로거인데, 오버라이딩 하고 있음\n</span>                <span class=\"s\">'handlers'</span><span class=\"p\">:[</span><span class=\"s\">'file'</span><span class=\"p\">],</span>\n                <span class=\"s\">'level'</span><span class=\"p\">:</span> <span class=\"s\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"s\">'mysite'</span><span class=\"p\">:{</span> \n                <span class=\"s\">'handlers'</span><span class=\"p\">:[</span><span class=\"s\">'file'</span><span class=\"p\">],</span>\n                <span class=\"s\">'level'</span><span class=\"p\">:</span><span class=\"s\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h3 id=\"3-django-디폴트-로깅설정-무시하는-설정\">3. django 디폴트 로깅설정 무시하는 설정</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># settings.py\n</span>\n<span class=\"n\">LOGGING_CONFIG</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n<span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># 내가 원하는 로깅 컴포넌트를 설정함\n</span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">LOGGING</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<h3 id=\"4-설정한-로거를-소스에서-사용하는-방법\">4. 설정한 로거를 소스에서 사용하는 방법</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># some_app/views.py\n</span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s\">'mylogger'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">):</span>\n    <span class=\"c1\"># 로직\n</span>    <span class=\"k\">if</span> <span class=\"n\">bad_mojo</span><span class=\"p\">:</span>\n        <span class=\"c1\"># ERROR 레벨의 로그 레코드 생성함\n</span>        <span class=\"n\">logger</span><span class=\"p\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s\">'Something went wrong!'</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n<ul>\n <li>logging.getLogger() : 관행적으로 <strong>__name__</strong> (해당 파일 이름) 구문을 사용, ‘’ 로 설정하면 최상위 루트 로거가 됨\n <ul>\n <li>만일 ch3/polls/views 파일이라면, <strong>__name__</strong>은 polls.views 가 됨</li>\n <li>로깅 호출은, 부모에게서 전파되므로 최상위 루트 로거에서 핸들러 하나만 만들어도 하위 로거의 모든 로깅 호출함</li>\n <li>예시 : project 이름공간에 정의된 로그 핸들러는 project.interesting 로거 및 project.interesting.stuff 로거가 보내주는 모든 로그 메시지를 잡음\n <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># 로거 이름으로 계층화\n</span>  <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s\">'project.interesting.stuff'</span><span class=\"p\">)</span>\n</code></pre>  </div> </div>\n </li>\n </ul>\n </li>\n <li>로깅 메소드 : 로거 객체는 로그 레벨별로 로그 호출 메소드를 갖고 있음\n <ul>\n <li>logger.debug()</li>\n <li>logger.info()</li>\n <li>logger.warning()</li>\n <li>logger.error()</li>\n <li>\n <p>logger.critical()</p>\n </li>\n <li>logger.log()</li>\n <li>logger.exception() : 익셉션 스택 트레이스 정보를 포함하는 ERROR 레벨의 로그 메시지 생성</li>\n </ul>\n </li>\n</ul>\n","dir":"/python/DjangoCoreFunction/","name":"DjangoLogging.md","path":"python/DjangoCoreFunction/DjangoLogging.md","url":"/python/DjangoCoreFunction/DjangoLogging.html"},{"sort":6,"layout":"default","title":"예외처리","content":"# 예외처리\n\n## [ 1 ] 오류와 예외\n\n### 1-1. 오류\n#### 1. 구문오류\n- 실행 전에 발생하는 오류\n#### 2. 예외 또는 런타임 오류\n- 실행 중에 발생하는 오류\n\n## [ 2 ] 예외 처리\n### 2-1. 기본 예외처리 : 조건문을 사용한 예외처리\n- if~else 문을 활용하여 else 문에 예외상황을 처리한다.\n\n### 2-2. try except 구문\n#### 1. 문법\n\n```python\ntry:\n 예외 발생 가능한 코드\nexcept:\n 예외 발생시 실행될 코드\n```\n\n#### 2. 예제\n\n```python\n# try except 구문으로 예외 처리\ntry:\n number_input = int(input('정수 입력>')) # 예외 발생 가능성 있는 구문\n # 출력\n print('원지름:', number_input)\n print('원둘레:', 2 * 3.14 * number_input)\n print('원넓이:', 3.14 * number_input * number_input)\nexcept:\n print('예외가 발생하였습니다.') # 예외 처리\n```\n\n#### 3. try except 구문과 pass 키워드의 조합\n- 해당코드가 중요하지 않아, 예외가 발생해도 그냥 넘어가게 하려면 except 절에 pass 키워드를 사용한다.\n```python\ntry: \n 예외 발생 가능성이 있는 코드\nexcept:\n pass\n```\n\n### 2-3. try except else 구문\n#### 1. 문법\n\n```python\ntry:\n 예외가 발생 할 수 있는 코드\nexcept:\n 예외 발생 했을때 실행 코드\nelse:\n 예외 발생하지 않았을 때 실행 코드\n```\n\n### 2-4. finally 구문\n\n#### 1. 문법\n\n```python\ntry:\n 예외가 발생 할 수 있는 코드\nexcept:\n 예외 발생 했을때 실행 코드\nelse:\n 예외 발생하지 않았을 때 실행 코드\nfinally:\n 무조건 실행\n```\n#### 2. 사용하는 경우\n1. try 구문 내부에서 return 처리 했을 경우도, finally 구문은 무조건 실행됨\n2. 파일이나 스트림을 열었을 때, finally 에서 무조건 close() 해주어야 함\n3. try 구문 내부의 반복문 실행중 break 시에도, finally 구문 무조건 실행\n\n## [ 3 ] 고급 예외 처리\n### 3-1. 예외 객체\n#### 1. 문법\n\n```python\ntry:\n 예외 발생 가능한 구문\nexcept 예외 종류 as 예외 객체를 활용할 변수 이름:\n 예외 발생 시 실행 구문\n```\n\n#### 2. Exception\n- 'Exception'은, 모든 예외의 부모 클래스\n```python\ntry:\n 예외 발생 가능한 구문\nexcept Exception as e :\n 예외 처리\n```\n\n### 3-2. 예외 구분하기\n- 여러가지 예외가 발생할 수 있는 상황에서 예외 구분하여 처리하기\n\n#### 1. 문법\n```python\ntry:\n 예외 발생 가능한 구문\nexcept 예외종류 A :\n 예외 A 처리\nexcept 예외종류 B :\n 예외 B 처리\nexcept 예외종류 C :\n 예외 C 처리\n```\n\n#### 2. 예제\n```python\n# 변수 선언\nlist = [52, 273, 32, 72, 100]\ntry:\n number = int(input('정수입력>'))\n print(\"{}번째 요소: {}\".format(number, list[number]))\nexcept ValueError as e :\n print('정수를 입력하세요.')\n print('exception:',e)\nexcept IndexError as e :\n print('리스트 인덱스를 벗어났어요!')\n print('exception:',e)\n```\n\n### 3-3. 모든 예외 잡기 (Exception 클래스 활용)\n#### 1. 예제\n```python\n# 변수 선언\nlist = [52, 273, 32, 72, 100]\ntry:\n number = int(input('정수입력>'))\n print(\"{}번째 요소: {}\".format(number, list[number]))\nexcept ValueError as e :\n print('정수를 입력하세요.')\n print('exception:',e)\nexcept IndexError as e :\n print('리스트 인덱스를 벗어났어요!')\n print('exception:',e)\nexcept Exception as e :\n print('미리 파악하지 못한 예외가 있습니다.\")\n print('exception:', e)\n```\n- 마지막 except 구문에서 Exception 객체를 사용하여 모든 예외를 잡는다.\n\n### 3-4. raise 구문\n- 일부러 예외를 발생 시키기 위한 구문\n#### 1. 문법\n`raise 예외 객체`\n","dir":"/python-grammar/","name":"exeption.md","path":"python-grammar/exeption.md","url":"/python-grammar/exeption.html"},{"sort":7,"permalink":"/spring5/7_security/","layout":"default","title":"스프링 웹 시큐리티","content":"<h1 id=\"스프링-웹-시큐리티\">스프링 웹 시큐리티</h1>\n\n<ol>\n <li>Spring Web Security 설정\n <ul>\n <li>설정</li>\n <li>인증과 권한부여</li>\n </ul>\n </li>\n <li>로그인/로그아웃\n <ul>\n <li>접근권한별 접근제한 설정</li>\n <li>단순 로그인 처리</li>\n <li>CSRF 공격과 토큰</li>\n <li>로그인 성공과 AuthenticationSuccessHandler</li>\n <li>로그아웃 처리와 LogoutSucessHandler</li>\n </ul>\n </li>\n <li>JDBC를 이용하는 간편 인증/권한 처리\n <ul>\n <li>테이블 설정 (spring 제공 스키마)</li>\n <li>PasswordEncoder 문제 해결</li>\n <li>기존 테이블 이용(커스터마이징 테이블)</li>\n </ul>\n </li>\n <li>커스텀 UserDetailsService 활용\n <ul>\n <li>회원, 도메인, 회원 Mapper 설계</li>\n <li>CustomUserDetailsService 구성</li>\n </ul>\n </li>\n <li>스프링 시큐리티를 JSP 에서 사용하기\n <ul>\n <li>JSP에서 로그인 사용자 정보 보여주기</li>\n <li>시큐리티 표현식</li>\n </ul>\n </li>\n <li>자동 로그인\n <ul>\n <li>데이터베이스 이용한 자동 로그인</li>\n </ul>\n </li>\n <li>\n <p>어노테이션 이용한 시큐리티 설정</p>\n </li>\n <li>기존 프로젝트에 스프링 시큐리티 접목하기</li>\n</ol>\n","dir":"/spring5/7_security/","name":"README.md","path":"spring5/7_security/README.md","url":"/spring5/7_security/"},{"sort":7,"layout":"default","title":"모듈","content":"# 모듈\n\n## 표준 모듈\n- 모듈가져오기 : `import 모듈이름`\n- 모듈로부터 특정 함수나 변수 가지고 오기 : `from 모듈 이름 import 함수 또는 변수`\n- 모듈의 별칭을 만들 때 : `import 모듈이름 as 별칭이름`\n- 주의 : 파일을 저장할 때 이미 존재하는 모듈명과 중복되는 이름을 사용하면 안되므로, 모듈은 아래와 같이 사용하는 것이 좋다.\n - `from random import random, randrange, choice`\n- 파이썬 라이브러리 문서 : <https://docs.python.org/3/library/index.html>\n\n### [ 1 ] math 모듈\n- math 모듈의 함수\n\n|변수 또는 함수 | 설명 |\n|---------------|------|\n|sin(x) |사인 |\n|cos(x) |코사인 |\n|tan(x) |탄젠트 |\n|log(x[,base]) |로그 |\n|ceil(x) |올림 |\n|floor(x) |내림 |\n\n- 참고: round() 함수는 반올림 함수로, 정수부분이 홀수일 때 소수점 5면 올리고, 짝수일 때 소수점 5면 내림. 이런 이유로 잘 사용하지 않으니 반올림 할 때 사용하지 말기를!\n\n### [ 2 ] random 모듈\n- 참고 : <https://docs.python.org/3/library/random.html#examples-and-recipes>\n\n#### 2-1. random.random() : 0.0<= x < 1.0 사이의 float 리턴\n#### 2-2. random.uniform(min, max) : 지정한 범위 사이의 float 리턴\n#### 2-3. random.randrange() : 지정한 범위의 int 리턴\n- `random.randrange(max)` : 0 ~ max 사이의 int 리턴\n- `random.randrange(min, max)` : min ~ max 사이의 int 리턴 \n\n#### 2-4. random.choice(list) : 리스트 내부 요소중에 랜덤하게 선택\n#### 2-5. random.shuffle(list) : 리스트 내부 요소를 랜덤하게 섞음\n#### 2-6. random.sample(list, k=숫자) : 리스트 요소중 k개를 랜덤하게 뽑음\n\n### [ 3 ] sys 모듈\n- 시스템과 관계되는 모듈, 명령 매개변수를 받을 때 많이 사용함\n- `import sys`\n\n#### 3-1. sys.argv : 명령 매개변수 리턴\n- 만약 명령프롬프트에 `>python module_sys.py 10 20 30` 명령을 실행 했을 때, module_sys.py 파일내의 sys.argv가 실행된다면 ['module_sys.py','10','20','30']을 리턴할 것이다.\n\n#### 3-2. 컴퓨터 환경과 관련된 정보 리턴\n- `sys.getwindowsversion()`\n- `sys.copyright`\n- `sys.version`\n\n#### 3-3. sys.exit() : 프로그램 강제 종료\n\n### [ 4 ] os 모듈\n- `import os`\n\n#### 4-1. os.name : 현재 운영체제\n#### 4-2. os.getcwd() : 현재 폴더\n#### 4-3. os.listdir() : 현재 폴더 내부의 요소\n#### 4-4. os.mkdir('폴더이름') : 폴더 생성\n#### 4-5. os.rmdir('폴더이름') : 폴더가 비어 있을 때만, 제거가능\n#### 4-6. os.rename('원래이름','새이름') : 파일이름 변경\n#### 4-7. os.remove('파일이름') 또는 os.unlink('파일이름') : 파일제거\n#### 4-8. os.system('dir') : 시스템 명령어 실행\n\n### [ 5 ] datetime 모듈\n- `import datetime`\n\n#### 5-1. 현재시간 출력하기 \n- `now = datetime.datetime.now()`\n- 년 : `now.year`\n- 월 : `now.month`\n- 일 : `now.day`\n- 시 : `now.hour`\n- 분 : `now.minute`\n- 초 : `now.second`\n\n#### 5-2. 시간 출력 포맷\n1. `now.strftime(\"%Y.%m.%d %H:%M:%S\")` : 2021.01.01 01:30:30\n2. `\"{}년 {}월 {}일 {}시 {}분 {}초\".format(now.year, now.month, now.day, now.hour, now.minute, now.second)` : 2021년 1월 1일 1시 30분 30초\n3. `now.strftime(\"%Y{} %m{} %d{} %H{} %M{} %S{}\").format(*\"년월일시분초\")` : 2021년 01월 01일 01시 30분 30초, format의 매개변수 앞에 * 을 붙이면, 요소 하나하나가 매개변수로 지정됨.\n - strftime()은 한국어를 지원하지 않으므로 2, 3번의 방식을 사용\n\n#### 5-3. 특정시간 이후의 시간 구하기\n1. `datetime.timedelta()` : 시간 더하기, 사용하기가 까다로워 잘 사용하지 않음.\n```python\nnow = datetime.datetime.now()\n## 특정시간 이후의 시간\nafter = now + datetime.timedelta(\\\n weeks=1,\\\n days=1,\\\n hours=1,\\\n minutes=1,\\\n seconds=1)\n```\n\n#### 5-4. 특정시간 요소 교체하기\n1. `now.replace(year=(now.year + 1)` : 1년 더하기\n\n### [ 6 ] time 모듈\n- `import time`\n- Unix 타임(1970.01.01.0:0:0 기준으로 계산)을 구할 때, 특정 시간동안 코드 진행을 정지하거나, 실행시간을 측정할 때 사용함\n- `time.sleep(5)` : 5초동안 정지 (자주 사용하는 함수이므로, 외워두면 좋다.)\n\n### [ 7 ] urllib 모듈\n- url을 다루는 라이브러리\n\n#### 7-1. request\n```python\nfrom urllib import request\n# urlopen()으로 구글페이지 열기\ntarget = request.urlopen('https://google.com')\noutput = target.read()\n# 출력\nprint(output)\n```\n\n## 외부 모듈\n- 파이썬이 기본 제공하는 라이브러리가 아닌, 다른 사람들이 만들어 배포하는 모듈\n- 외부 모듈의 예 \n - BeautifulSoup, Flask\n - 웹 개발 : django, flask\n - 기계학습 : scikit-learn, keras, tensorflow\n - 스크레이핑 : requests, Beautiful Soup, scrapy\n - 영상분석 : cv2, pillow\n - 데이터 분석 : pandas, matplotlib\n\n### [ 1 ] 사용법\n\n#### 1. 모듈 설치하기\n- 명령 프롬프트 창에서 `pip install 모듈 이름` 으로 설치\n- pip 설명 참고 : <https://pip.pypa.io/en/stable/user_quide/#installing-packages>\n\n#### 2. 모듈 찾아보기\n1. 책에서 추천받기\n2. 파이썬 커뮤니티의 인기 라이브러리 추천받기\n3. 구글 검색하기\n\n### [ 2 ] BeautifulSoup 모듈로 날씨 가져오기 예시\n- 스크래이핑 관련 라이브러리\n- BeautifulSoup 모듈 문서 : <https://www.crummy.com/software/BeautifulSoup/bs4/doc/>\n- 기상청 날씨 정보 : <http://www.kma.go.kr/weather/lifenindustry/service_rss.jsp>\n```python\n# 모듈 읽어들이기\nfrom urllib import request\nfrom bs4 import BeautifulSoup\n# urlopen()으로 기상청 날씨 읽기\ntarget = request.urlopen('http://www.kma.go.kr/weather/forecast/mid-term-rss3.jsp?stnId=108')\n# BeautifulSoup 사용해 웹 페이지 분석\nsoup = BeautifulSoup(target, 'html.parser') # 'html.parser'를 매개변수로 넣으면 BeautifulSoup 이라는 특수한 객체를 리턴함\n# location 태그 찾기\nfor location in soup.select('location'):\n # 내부의 city, wf, tmn, tmx 태그 찾아 출력\n print('도시:',location.select_one('cidy').string)\n print('날씨:',location.select_one('wf').string)\n print('최저기온:',location.select_one('tmn').string)\n print('최고기온:',location.select_one('tmx').string)\n print()\n```\n\n### [ 3 ] Flask 모듈 사용해 보기\n- 웹개발 분야에서, 작은 기능만을 제공하는 웹 개발 프레임워크\n- `pip install flask`\n\n#### 3-1. 예제 : flask_basic.py\n```python\nfrom flask import Flask\napp = Flask(__name__)\n@app.route(\"/\")\ndef hello():\n return \"<h1>Hello World!</h1>\"\n```\n\n#### 3-2. Flask 코드를 실행하는 방법 (특이함)\n- 명령 프롬프트에서 아래의 명령어로 실행 (window 환경)\n```bash\nset FLASK_APP=파일이름.py\nflask run\n```\n - 'FLASK_APP=..'에서 = 앞뒤로 뛰어쓰기하면 에러남\n - 파일이 위치하는 디렉토리에서 명령을 실행해야 함\n - 리눅스환경에서는 'set' 명령어 대신 'export'로 바꾸어서 실행\n- 실행결과\n ```\n > set FLASK_APP=flask_basic.py\n > flask run\n * Serving Flask app 'flask_basic.py'\n * Running on http://127.0.0.1:5000/ (press CTRL+C quit)\n ```\n\n### [ 4 ] 함수 데코레이터\n- @로 시작하는 구문\n- 함수 데코레이터, 클래스 데코레이터 있음\n- 반복적인 내용이 필요할 때, 데코레이터로 만들어 사용하면 편리함\n\n#### 4-1. 예제\n- hello() 함수를 실행하면, 실행 전에 '인사 시작', 실행 후에 '인사 끝' 을 출력하는 데코레이터 만들어 보기\n- func_deco.py\n```python\n# 데코레이터 생성\ndef test(function):\n def wrapper():\n print('인사시작')\n function()\n print('인사 끝')\n return wrapper\n# 데코레이터 붙인 함수 생성\n@test\ndef hello():\n print('hello')\n# 함수 호출\nhello()\n# 실행 결과\n인사시작\nhello\n인사 끝\n```\n\n## 모듈 만들기\n1. 일반적인 *.py 파일을 만든 후, 그안에 변수와 함수등을 만든다.\n2. 다른 파일에서 (1)에서 만든 파일을 import 하여 사용한다.\n\n- 모듈 : test_module.py\n\n```python\nPI = 3.14\ndef number_input():\n output = ....(생략)\n return float(output)\ndef get_circumference(radius):\n ...(생략)..\n return 2 * PI * radus\ndef get_circle_area(radius):\n return PI * radius * radius\n```\n\n- import 하여 사용 : main.py\n\n```python\nimport test_module as test\nradius = test.number_input()\n.....import 한 test_module 내부의 함수를 사용\n```\n\n## \\_\\_name\\_\\_==\"\\__main\\_\\_\"\n\n### [ 1 ] \\_\\_name\\_\\_\n- 프로그램 진입점, **엔트리 포인트** 또는 **메인**\n- 엔트리 포인트 내부의 __name__은 __main__이다.\n\n### [ 2 ] 모듈의 \\_\\_name\\_\\_\n- 모듈 내부에서의 __name__을 출력하면, 모듈의 이름이 나옴\n- main.py\n\n```python\nimport test_module\nprint('메인의 __name__ 출력')\nprint(__name__)\nprint()\n```\n- test_module.py\n\n```python\nprint('모듈의 __name__ 출력')\nprint(__name__)\n```\n\n- main.py 파일을 실행 시, 결과\n ```python\n 모듈의 __name__출력\n test_module\n 메인의 __name__출력\n main\n ```\n - main.py에서 import 한 파일의 실행코드 먼저 실행하여 모듈의 __name__이 먼저 출력됨\n\n### [ 3 ] __name__의 활용\n- 현재 파일이 모듈로 실행되었는지, 엔트리포인트로 실행되었는지 확인 할 때 사용\n- 엔트리포인트에서만 모듈이 실행되도록, 모듈 파일에 아래의 추가구문을 삽입하여 실행문을 작성함\n\n- test_module.py\n\n```python\n# 여러가지 모듈의 함수 및 변수\nif __name__=='__main__' :\n 엔트리포인트에서 실행될 코드\n```\n\n### [ 4 ] 패키지\n- 모듈이 모두 모여 구조를 이루면 패키지가 됨.\n- 관련 모듈을 특정 디렉토리 아래에 모아 놓음\n\n### [ 5 ] \\_\\_init\\_\\_.py\n- 패키지 내의 모듈을 한꺼번에 가져오고 싶을 때 패키지 폴더 내부에 \\_\\_init\\_\\_.py 파일을 만들어 사용\n- 패키지를 읽어 들일 때, \\_\\_init\\_\\_.py 파일을 가장 먼저 실행됨 -> 패키지 관련 초기화 처리에 적합\n- \\_\\_init\\_\\_.py 파일에 <font color='red'>__all__</font>이라는 이름의 **리스트**를 만들어, 이 <font color='red'>리스트에 지정한 모듈들이 from 패키지이름 import * 할 때 전부 읽혀들여짐</font>\n\n## 패키지 만들어 보기\n- module_package/test_package/module_a.py\n\n```python\nvariable_a = 'a 모듈의 변수'\n```\n\n- module_package/test_package/module_b.py\n\n```python\nvariable_b = 'b 모듈의 변수'\n```\n\n- module_package/test_package/\\_\\_init\\_\\_.py\n\n```python\n__all__=['module_a','module_b'] # * 사용시 읽어들일 모듈 목록\n# 패키지 읽어들일 때 처리를 작성 할 수 있음\nprint('test_package를 읽어들입니다.')\n```\n\n- module_package/test_package/main.py\n\n```python\nfrom test_package import *\nprint(module_a.variable_a)\nprint(module_b.variable_b)\n```\n\n- 실행 결과\n\n```\ntest_package를 읽어 들였습니다.\na 모듈의 변수\nb 모듈의 변수\n```\n\n## 바이너리 데이터 다루기\n- 이미지나 동영상\n- 파이썬은 바이너리를 무조건 ASCII 코드표로 인코딩해서 출력\n- 인터넷의 이미지 저장하기\n\n```python\nfrom urllib import request\n# 이미지 읽어들이기\ntarget = request.urlopen(\"http://www.hanbit.co.kr/images/common/log_hanbit.png\")\noutput = target.read()\nprint(output)\n# 출력결과 : 바이너리 파일은 문단의 가장앞에 b 가 붙음\nb` ....(생략)\n# 이미지(바이너리 파일)를 쓰기\nfile = open('output.png', 'wb') # 읽기모드에 꼭 b 를 붙여야 함\nfile.write(output)\nfile.close()\n```\n\n","dir":"/python-grammar/","name":"module.md","path":"python-grammar/module.md","url":"/python-grammar/module.html"},{"sort":7,"layout":"default","title":"스프링 시큐리티 설정 요약","content":"<h1 id=\"스프링-시큐리티-설정-요약\">스프링 시큐리티 설정 요약</h1>\n\n<h2 id=\"1-xml-설정\"><font color=\"blue\">1. XML 설정</font></h2>\n\n<p><strong><font color=\"green\">web.xml</font></strong></p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;context-param&gt;</span>\n\t\t<span class=\"nt\">&lt;param-name&gt;</span>contextConfigLocation<span class=\"nt\">&lt;/param-name&gt;</span>\n\t\t<span class=\"nt\">&lt;param-value&gt;</span>/WEB-INF/spring/root-context.xml\n\t\t/WEB-INF/spring/security-context.xml<span class=\"nt\">&lt;/param-value&gt;</span>\n\t<span class=\"nt\">&lt;/context-param&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\">security-context.xml</font></strong></p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"nt\">&lt;beans</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.springframework.org/schema/beans\"</span>\n\t<span class=\"na\">xmlns:xsi=</span><span class=\"s\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n\t<span class=\"na\">xmlns:security=</span><span class=\"s\">\"http://www.springframework.org/schema/security\"</span>\n\t<span class=\"na\">xsi:schemaLocation=</span><span class=\"s\">\"http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"</span><span class=\"nt\">&gt;</span>\n\t\n\t<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customAccessDenied\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomAccessDeniedHandler\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n\t<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customLoginSuccessHandler\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomLoginSuccessHandler\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n\t<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customLogoutSuccessHandler\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomLogoutSuccessHandler\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n<span class=\"c\">&lt;!-- \t&lt;bean id=\"customNoOpPasswordEncoder\" class=\"org.example.security.CustomNoOpPasswordEncoder\"&gt;&lt;/bean&gt; --&gt;</span>\n\t<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"bcryptPasswordEncoder\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;bean</span> <span class=\"na\">id=</span><span class=\"s\">\"customUserDetailsService\"</span> <span class=\"na\">class=</span><span class=\"s\">\"org.example.security.CustomUserDetailsService\"</span><span class=\"nt\">&gt;&lt;/bean&gt;</span>\n\t\n\t<span class=\"nt\">&lt;security:http&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/all\"</span> <span class=\"na\">access=</span><span class=\"s\">\"permitAll\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/member\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_MEMBER')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:intercept-url</span> <span class=\"na\">pattern=</span><span class=\"s\">\"/sample/admin\"</span> <span class=\"na\">access=</span><span class=\"s\">\"hasRole('ROLE_ADMIN')\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:form-login</span> <span class=\"na\">login-page=</span><span class=\"s\">\"/customLogin\"</span> <span class=\"na\">authentication-success-handler-ref=</span><span class=\"s\">\"customLoginSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:logout</span> <span class=\"na\">logout-url=</span><span class=\"s\">\"/customLogout\"</span> <span class=\"na\">invalidate-session=</span><span class=\"s\">\"true\"</span> <span class=\"na\">delete-cookies=</span><span class=\"s\">\"remember-me, JSESSIONID\"</span> <span class=\"na\">success-handler-ref=</span><span class=\"s\">\"customLogoutSuccessHandler\"</span><span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;security:remember-me</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">token-validity-seconds=</span><span class=\"s\">\"604800\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"c\">&lt;!-- \t&lt;security:access-denied-handler error-page=\"/accessError\"/&gt; --&gt;</span>\n\t\t<span class=\"nt\">&lt;security:access-denied-handler</span> <span class=\"na\">ref=</span><span class=\"s\">\"customAccessDenied\"</span><span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/security:http&gt;</span>\n\t\n\t<span class=\"nt\">&lt;security:authentication-manager&gt;</span>\n\t\t<span class=\"nt\">&lt;security:authentication-provider</span> <span class=\"na\">user-service-ref=</span><span class=\"s\">\"customUserDetailsService\"</span><span class=\"nt\">&gt;</span>\n\t\t\t<span class=\"c\">&lt;!-- &lt;security:user-service&gt;\n\t\t\t\t&lt;security:user name=\"member\" password=\"{noop}member\" authorities=\"ROLE_MEMBER\"/&gt;\n\t\t\t\t&lt;security:user name=\"admin\" password=\"{noop}admin\" authorities=\"ROLE_MEMBER, ROLE_ADMIN\"/&gt;\n\t\t\t&lt;/security:user-service&gt; --&gt;</span>\n<span class=\"c\">&lt;!-- \t\t\t&lt;security:jdbc-user-service data-source-ref=\"dataSource\"/&gt; --&gt;</span>\n<span class=\"c\">&lt;!-- \t\t\t&lt;security:password-encoder ref=\"customNoOpPasswordEncoder\"/&gt; --&gt;</span>\n\n\t\t\t<span class=\"nt\">&lt;security:password-encoder</span> <span class=\"na\">ref=</span><span class=\"s\">\"bcryptPasswordEncoder\"</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"c\">&lt;!-- &lt;security:jdbc-user-service data-source-ref=\"dataSource\" users-by-username-query=\"select userid, userpw, enabled from tbl_member where userid = ?\"\n\t\t\t\tauthorities-by-username-query=\"select userid, auth from tbl_member_auth where userid = ?\"/&gt; --&gt;</span>\n\t\t<span class=\"nt\">&lt;/security:authentication-provider&gt;</span>\n\t<span class=\"nt\">&lt;/security:authentication-manager&gt;</span>\n\n<span class=\"nt\">&lt;/beans&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-java-설정\"><font color=\"blue\">2. JAVA 설정</font></h2>\n\n<p><strong><font color=\"green\">SecurityInitializer.java</font></strong> <br />\n<code class=\"language-plaintext highlighter-rouge\">AbstractSecurityWebApplicationInitializer</code>를 상속받은 <code class=\"language-plaintext highlighter-rouge\">SecurityInitializer</code> 클래스를 생성하는 것만으로 Filter 설정이 완료된다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SecurityInitializer</span> <span class=\"kd\">extends</span> <span class=\"nc\">AbstractSecurityWebApplicationInitializer</span> <span class=\"o\">{</span>\n\t<span class=\"c1\">// AbstractSecurityWebApplicationInitializer 를 상속받는 클래스를 추가하는 것 만으로,스프링 내부적으로 DelegatingFilterProxy 를 추가하므로</span>\n\t<span class=\"c1\">// 별도의 구현없이도 필터 설정이 완료됨.</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\">SecurityConfig.java</font></strong> : <code class=\"language-plaintext highlighter-rouge\">WebSecurityConfigurerAdapter</code>를 상속받는 클래스를 생성한다.<br />\n<code class=\"language-plaintext highlighter-rouge\">configure(HttpSecurity http)</code> 에는 <code class=\"language-plaintext highlighter-rouge\">http</code> 관련 시큐리티 설정을 오버라이드 한다. <br />\n<code class=\"language-plaintext highlighter-rouge\">configure(AuthenticationManagerBuilder auth)</code> 에는 Provider 관련 시큐리티 설정을 오버라이드 한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">javax.sql.DataSource</span><span class=\"o\">;</span>\n<span class=\"nd\">@Configuration</span>\n<span class=\"nd\">@EnableWebSecurity</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SecurityConfig</span> <span class=\"kd\">extends</span> <span class=\"nc\">WebSecurityConfigurerAdapter</span><span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"nc\">DataSource</span> <span class=\"n\">dataSource</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">configure</span><span class=\"o\">(</span><span class=\"nc\">HttpSecurity</span> <span class=\"n\">http</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span><span class=\"o\">{</span>\n\t\t<span class=\"cm\">/*Http 관련 설정\n\t\t * intercept-url\n\t\t * login/logout\n\t\t * remember-me\n\t\t * */</span>\n\t\t\n\t\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"na\">authorizeRequests</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">antMatchers</span><span class=\"o\">(</span><span class=\"s\">\"/sample/all\"</span><span class=\"o\">).</span><span class=\"na\">permitAll</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">antMatchers</span><span class=\"o\">(</span><span class=\"s\">\"/sample/admin\"</span><span class=\"o\">).</span><span class=\"na\">access</span><span class=\"o\">(</span><span class=\"s\">\"hasRole('ROLE_ADMIN')\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">antMatchers</span><span class=\"o\">(</span><span class=\"s\">\"/sample/member\"</span><span class=\"o\">).</span><span class=\"na\">access</span><span class=\"o\">(</span><span class=\"s\">\"hasRole('ROLE_MEMBER')\"</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"na\">formLogin</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">loginPage</span><span class=\"o\">(</span><span class=\"s\">\"/customLogin\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">loginProcessingUrl</span><span class=\"o\">(</span><span class=\"s\">\"/login\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">successHandler</span><span class=\"o\">(</span><span class=\"n\">loginSuccessHandler</span><span class=\"o\">());</span>\n\t\t\n\t\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"na\">logout</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">logoutUrl</span><span class=\"o\">(</span><span class=\"s\">\"/customLogout\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">invalidateHttpSession</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">deleteCookies</span><span class=\"o\">(</span><span class=\"s\">\"remember-me\"</span><span class=\"o\">,</span> <span class=\"s\">\"JSESSION_ID\"</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"na\">rememberMe</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">key</span><span class=\"o\">(</span><span class=\"s\">\"example\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">tokenRepository</span><span class=\"o\">(</span><span class=\"n\">persistentTokenRepository</span><span class=\"o\">())</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">tokenValiditySeconds</span><span class=\"o\">(</span><span class=\"mi\">604800</span><span class=\"o\">);</span>\n\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">configure</span><span class=\"o\">(</span><span class=\"nc\">AuthenticationManagerBuilder</span> <span class=\"n\">auth</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"configure..........\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">inMemoryAuthentication</span><span class=\"o\">().</span><span class=\"na\">withUser</span><span class=\"o\">(</span><span class=\"s\">\"admin\"</span><span class=\"o\">).</span><span class=\"na\">password</span><span class=\"o\">(</span><span class=\"s\">\"{noop}admin\"</span><span class=\"o\">).</span><span class=\"na\">roles</span><span class=\"o\">(</span><span class=\"s\">\"ADMIN\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">inMemoryAuthentication</span><span class=\"o\">().</span><span class=\"na\">withUser</span><span class=\"o\">(</span><span class=\"s\">\"member\"</span><span class=\"o\">).</span><span class=\"na\">password</span><span class=\"o\">(</span><span class=\"s\">\"{noop}member\"</span><span class=\"o\">).</span><span class=\"na\">roles</span><span class=\"o\">(</span><span class=\"s\">\"MEMBER\"</span><span class=\"o\">);</span>\n\t\t\n<span class=\"c1\">//\t\tString queryUser = \"select userid, userpw, enabled from tbl_member where userid = ? \";</span>\n<span class=\"c1\">//\t\tString queryDetails = \"select userid, auth from tbl_member_auth where userid= ? \";</span>\n\t\t\n\t\t<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">jdbcAuthentication</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">dataSource</span><span class=\"o\">(</span><span class=\"n\">dataSource</span><span class=\"o\">);</span>\n\t\t\n<span class=\"c1\">//\t\t.passwordEncoder(passwordEncoder())</span>\n<span class=\"c1\">//\t\t.usersByUsernameQuery(queryUser)</span>\n<span class=\"c1\">//\t\t.authoritiesByUsernameQuery(queryDetails);</span>\n\t\t\n\t\t<span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"na\">userDetailsService</span><span class=\"o\">(</span><span class=\"n\">customUserService</span><span class=\"o\">())</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">passwordEncoder</span><span class=\"o\">(</span><span class=\"n\">passwordEncoder</span><span class=\"o\">());</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Bean</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">AuthenticationSuccessHandler</span> <span class=\"nf\">loginSuccessHandler</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">CustomLoginSuccessHandler</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Bean</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">PasswordEncoder</span> <span class=\"nf\">passwordEncoder</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">BCryptPasswordEncoder</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Bean</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">UserDetailsService</span> <span class=\"nf\">customUserService</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">CustomUserDetailsService</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nc\">PersistentTokenRepository</span> <span class=\"nf\">persistentTokenRepository</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">JdbcTokenRepositoryImpl</span> <span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">JdbcTokenRepositoryImpl</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"na\">setDataSource</span><span class=\"o\">(</span><span class=\"n\">dataSource</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">repo</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\">WebConfig.java</font></strong> : getRootConfigClasses()에 <code class=\"language-plaintext highlighter-rouge\">SecurityConfig.class</code> 추가</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.Filter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">javax.servlet.ServletRegistration.Dynamic</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.filter.CharacterEncodingFilter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer</span><span class=\"o\">;</span>\n\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">WebConfig</span> <span class=\"kd\">extends</span>\n<span class=\"nc\">AbstractAnnotationConfigDispatcherServletInitializer</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getRootConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">RootConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">,</span> <span class=\"nc\">SecurityConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Class</span><span class=\"o\">&lt;?&gt;[]</span> <span class=\"n\">getServletConfigClasses</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Class</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"nc\">ServletConfig</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"nf\">getServletMappings</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"s\">\"/\"</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">customizeRegistration</span><span class=\"o\">(</span><span class=\"nc\">Dynamic</span> <span class=\"n\">registration</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"n\">registration</span><span class=\"o\">.</span><span class=\"na\">setInitParameter</span><span class=\"o\">(</span><span class=\"s\">\"throwExceptionIfNoHandlerFound\"</span><span class=\"o\">,</span> <span class=\"s\">\"true\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Filter</span><span class=\"o\">[]</span> <span class=\"nf\">getServletFilters</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"nc\">CharacterEncodingFilter</span> <span class=\"n\">characterEncodingFilter</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">CharacterEncodingFilter</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">characterEncodingFilter</span><span class=\"o\">.</span><span class=\"na\">setEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">characterEncodingFilter</span><span class=\"o\">.</span><span class=\"na\">setForceEncoding</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Filter</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"n\">characterEncodingFilter</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"3-어노테이션-설정-xml이나-java로-시큐리티-설정을-한-후-부가적으로-사용\"><font color=\"blue\">3. 어노테이션 설정 (XML이나 JAVA로 시큐리티 설정을 한 후 부가적으로 사용)</font></h2>\n\n<p><strong>체크리스트</strong></p>\n<ul>\n <li>security-context.xml 추가</li>\n <li>org.example.security 및 이하 패키지 추가</li>\n <li>org.example.domain 내에 MemberVO 와 AuthVO 추가</li>\n <li>web.xml 에서 security-context.xml 설정과 필터 추가</li>\n <li>MemberMapper 인터페이스와 MemberMapper.xml 추가</li>\n <li>org.example.controller 패키지의 CommonController 추가</li>\n</ul>\n\n<p><strong><font color=\"green\">XML 설정의 경우, sevlet-context.xml</font></strong> <br />\n특이하게 security-context.xml이 아닌 <code class=\"language-plaintext highlighter-rouge\">servlet-context.xml</code>에 설정을 추가한다. <br />\n먼저 security 네임스페이스(버전번호는 제거)를 추가한 후, 설정을 추가한다.</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"nt\">&lt;beans:beans</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.springframework.org/schema/mvc\"</span>\n\t<span class=\"na\">xmlns:xsi=</span><span class=\"s\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n\t<span class=\"na\">xmlns:beans=</span><span class=\"s\">\"http://www.springframework.org/schema/beans\"</span>\n\t<span class=\"na\">xmlns:context=</span><span class=\"s\">\"http://www.springframework.org/schema/context\"</span>\n\t<span class=\"na\">xmlns:security=</span><span class=\"s\">\"http://www.springframework.org/schema/security\"</span>\n\t<span class=\"na\">xsi:schemaLocation=</span><span class=\"s\">\"http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd\n\t\thttp://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd\n\t\thttp://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\n\t\thttp://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\t<span class=\"nt\">&lt;security:global-method-security</span> <span class=\"na\">pre-post-annotations=</span><span class=\"s\">\"enabled\"</span> <span class=\"na\">secured-annotations=</span><span class=\"s\">\"enabled\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/beans:beans&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\">Java 설정의 경우, ServletConfig.java</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.config</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@EnableWebMvc</span>\n<span class=\"nd\">@ComponentScan</span><span class=\"o\">(</span><span class=\"n\">basePackages</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"s\">\"org.example.controller\"</span><span class=\"o\">})</span>\n<span class=\"nd\">@EnableGlobalMethodSecurity</span><span class=\"o\">(</span><span class=\"n\">prePostEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"n\">securedEnabled</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><span class=\"o\">)</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ServletConfig</span> <span class=\"kd\">implements</span> <span class=\"nc\">WebMvcConfigurer</span> <span class=\"o\">{</span>\n    <span class=\"c1\">// 생략</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\">예제</font></strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Controller</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/sample/*\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">SecuritySampleController</span> <span class=\"o\">{</span>\n    \n    <span class=\"c1\">// 생략</span>\n\t\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"hasAnyRole('ROLE_ADMIN','ROLE_MEMBER')\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/annoMember\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">doMember2</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"logined annotation member\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t\n\t<span class=\"nd\">@Secured</span><span class=\"o\">({</span><span class=\"s\">\"ROLE_ADMIN\"</span><span class=\"o\">})</span>\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/annoAdmin\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">doAdmin2</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"logined annotation admin\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n</code></pre>  </div></div>\n","dir":"/spring5/7_security/","name":"7_summary.md","path":"spring5/7_security/7_summary.md","url":"/spring5/7_security/7_summary.html"},{"sort":7,"layout":"default","title":"결과물 확인","content":"<h1 id=\"결과물-확인\">결과물 확인</h1>\n\n<h2 id=\"가상환경-구성\">가상환경 구성</h2>\n\n<h4 id=\"1-프로젝트를-개발한-파이썬-버전을-서버pc에-설치한다\">1. 프로젝트를 개발한 파이썬 버전을 서버(PC)에 설치한다.</h4>\n\n<ul>\n <li>Mac OS : <code class=\"language-plaintext highlighter-rouge\">brew install -r python@3.7</code></li>\n <li>Linux : <code class=\"language-plaintext highlighter-rouge\">dnf install python3.7</code></li>\n</ul>\n\n<h4 id=\"2-파이썬이-설치된-위치를-확인한다\">2. 파이썬이 설치된 위치를 확인한다.</h4>\n\n<ul>\n <li>(ex) Mac OS : /usr/local/opt/python@3.7/Frameworks/Python.framework/Versions/3.7/bin/python3.7</li>\n <li>(ex) Linux : /usr/libexec/platform-python3.6m/python3.6</li>\n</ul>\n\n<h4 id=\"3-zshrc-파일에-파이썬-실행파일의-alias-를-설정한다\">3. .zshrc 파일에 파이썬 실행파일의 Alias 를 설정한다.</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>vim .zshrc\n\n<span class=\"c\"># ...(생략)...Alias...설정하라는 주석이 있을 것. 그 아래 설정하면 됨.</span>\nAlias <span class=\"nv\">python37</span><span class=\"o\">=</span><span class=\"s2\">\"/usr/local/opt/python@3.7/Frameworks/Python.framework/Versions/3.7/bin/python3.7\"</span>\n<span class=\"c\"># esc -&gt; wq 입력하여 저장</span>\n\n<span class=\"c\"># 변경된 .zshrc 파일을 반영</span>\n<span class=\"nv\">$ </span><span class=\"nb\">source</span> .zshrc\n</code></pre>  </div></div>\n\n<h4 id=\"4-가상환경을-구성할-디렉토리를-생성-후-venv-명령어로-가상환경을-구성한다\">4. 가상환경을 구성할 디렉토리를 생성 후, <code class=\"language-plaintext highlighter-rouge\">venv</code> 명령어로 가상환경을 구성한다.</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># 가상환경을 구성할 디렉토리</span>\n<span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>VENV\n<span class=\"c\"># 가상환경 생성 : &lt;구성하려는버전의파이썬실행어&gt; venv -m &lt;가상환경디렉토리이름&gt;</span>\n<span class=\"nv\">$ </span>python37 venv <span class=\"nt\">-m</span> python3.7 \n</code></pre>  </div></div>\n\n<h4 id=\"5-가상환경을-활성화\">5. 가상환경을 활성화</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">cd </span>VENV\n<span class=\"nv\">$ </span><span class=\"nb\">source </span>python3.7/bin/activate\n\n<span class=\"c\"># 가상환경 실행됨</span>\n<span class=\"o\">(</span>python3.7<span class=\"o\">)</span><span class=\"nv\">$ </span>\n</code></pre>  </div></div>\n\n<h4 id=\"6-원본-프로젝트에-설치된-패키지-목록을-이용하여-가상환경에-설치한다\">6. 원본 프로젝트에 설치된 패키지 목록을 이용하여 가상환경에 설치한다.</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># 원본 프로젝트 디렉토리\n</span><span class=\"n\">proj</span> <span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">freeze</span> <span class=\"o\">&gt;</span> <span class=\"n\">requirements</span><span class=\"p\">.</span><span class=\"n\">txt</span>\n\n<span class=\"c1\"># 가상환경에 원본 프로젝트와 같이 패키지가 설치된다.(django 등)\n</span><span class=\"p\">(</span><span class=\"n\">phthon3</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">)</span><span class=\"err\">$</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">r</span> <span class=\"o\">/</span><span class=\"p\">..(</span><span class=\"n\">생략</span><span class=\"p\">)..</span><span class=\"o\">/</span><span class=\"n\">proj</span><span class=\"o\">/</span><span class=\"n\">requirements</span><span class=\"p\">.</span><span class=\"n\">txt</span>\n</code></pre>  </div></div>\n\n<h4 id=\"7-장고-테스트-서버로-개발된-것을-확인한다\">7. 장고 테스트 서버로 개발된 것을 확인한다.</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">(</span><span class=\"n\">python3</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">)</span><span class=\"err\">$</span> <span class=\"n\">python</span> <span class=\"n\">manage</span><span class=\"p\">.</span><span class=\"n\">py</span> <span class=\"n\">runserver</span>\n</code></pre>  </div></div>\n<ul>\n <li>http://localhost:8000 접속</li>\n</ul>\n\n<h4 id=\"8-화면\">8. 화면</h4>\n\n<ul>\n <li>bookmark_list</li>\n</ul>\n\n<p><img src=\"/assets/images/bookmark_list.png\" alt=\"bookmark_list\" /></p>\n\n<ul>\n <li>bookmark_detail</li>\n</ul>\n\n<p><img src=\"/assets/images/bookmark_detail.png\" alt=\"bookmark_detail\" /></p>\n","dir":"/python/developBookmark/","name":"7_run.md","path":"python/developBookmark/7_run.md","url":"/python/developBookmark/7_run.html"},{"sort":7,"permalink":"/python/pythonAnyWhereCloudServerDeploy/","layout":"default","title":"Cloud (pythonanywhere) 서버에 Django 배포하기","content":"<h1 id=\"cloud-pythonanywhere-서버에-django-배포하기\">Cloud (pythonanywhere) 서버에 Django 배포하기</h1>\n<ol>\n <li>PythonAnywhere 사이트 가입하기</li>\n <li>장고 소스 올리기</li>\n <li>리눅스 명령으로 압축풀기</li>\n <li>가상환경 만들기</li>\n <li>PythonAnywhere 웹서버에서 장고 설정 변경하기</li>\n <li>PythonAnywhere 웹 서버 설정하기</li>\n <li>지금까지 작업한 것 확인하기</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/pythonAnyWhereCloudServerDeploy/README.md</code></p>\n","dir":"/python/pythonAnyWhereCloudServerDeploy/","name":"README.md","path":"python/pythonAnyWhereCloudServerDeploy/README.md","url":"/python/pythonAnyWhereCloudServerDeploy/"},{"sort":7,"layout":"default","title":"Blog앱에 태그 달기","content":"<h1 id=\"blog앱에-태그-달기\">Blog앱에 태그 달기</h1>\n\n<ol>\n <li>각 포스트마다 태그 달기</li>\n <li>태그에 해당하는 포스트를 리스트로 보여주기</li>\n <li>태그들만 모아서 각 태그에 링크 달기</li>\n <li>사용하는 패키지 : django-taggit, django-taggit-templatetags2</li>\n</ol>\n\n<ul>\n <li>[참고] django-taggit 문서 : <a href=\"https://django-taggit.readthedocs.io/en/latest/index.html\">https://django-taggit.readthedocs.io/en/latest/index.html</a></li>\n <li>[참고] django-taggit-templatetags2 문서 : <a href=\"https://github.com/fizista/django-taggit-templatetags2\">https://github.com/fizista/django-taggit-templatetags2</a></li>\n</ul>\n\n<h2 id=\"1-설계\">1. 설계</h2>\n\n<h4 id=\"-1--테이블-설계\">[ 1 ] 테이블 설계</h4>\n<ul>\n <li>Post 테이블에 ‘tags’ 필드 추가</li>\n <li>‘tags’ 필드의 타입은, django-taggit 에서 미리 설정해 둔 ‘TaggableManager’ 를 사용하여야 함</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>필드명</th>\n <th>타입</th>\n <th>제약조건</th>\n <th>설명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>id</td>\n <td>Integer</td>\n <td>PK, Audo Increment</td>\n <td>기본키</td>\n </tr>\n <tr>\n <td>title</td>\n <td>CharField(50)</td>\n <td> </td>\n <td>포스트 제목</td>\n </tr>\n <tr>\n <td>slug</td>\n <td>SlugField(50)</td>\n <td>Unique</td>\n <td>포스트 제목 별칭</td>\n </tr>\n <tr>\n <td>description</td>\n <td>CharField(100)</td>\n <td>Blank</td>\n <td>포스트 내용 한 줄 설명</td>\n </tr>\n <tr>\n <td>content</td>\n <td>TextField</td>\n <td> </td>\n <td>포스트 내용 기록</td>\n </tr>\n <tr>\n <td>create_dt</td>\n <td>DateTimeField</td>\n <td>auto_now_add</td>\n <td>생성날짜</td>\n </tr>\n <tr>\n <td>modify_dt</td>\n <td>DateTimeField</td>\n <td>auto_now</td>\n <td>수정날짜</td>\n </tr>\n <tr>\n <td>**tags**</td>\n <td>**TaggableManager**</td>\n <td>**Blank, Null**</td>\n <td>**포스트에 등록한 태그**</td>\n </tr>\n </tbody>\n</table>\n\n<h4 id=\"-2--url-설계\">[ 2 ] URL 설계</h4>\n<ul>\n <li>태그 클라우드 (태그들의 모음) URL</li>\n <li>특정 태그가 달려 있는 포스트들의 리스트 URL</li>\n</ul>\n\n<table>\n <thead>\n <tr>\n <th>URL패턴</th>\n <th>뷰 이름</th>\n <th>템플릿 파일명</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td>/blog/</td>\n <td>PostLV(ListView)</td>\n <td>post_all.html</td>\n </tr>\n <tr>\n <td>/blog/post/</td>\n <td>PostLV(ListView)</td>\n <td>post_all.html</td>\n </tr>\n <tr>\n <td>/blog/post/django-example/</td>\n <td>PostDV(DetailView)</td>\n <td>post_detail.html</td>\n </tr>\n <tr>\n <td>/blog/archive/</td>\n <td>PostAV(ArchiveIndexView)</td>\n <td>post_archive.html</td>\n </tr>\n <tr>\n <td>/blog/archive/2012/</td>\n <td>PostYAV(YearArchiveView)</td>\n <td>post_archive_year.html</td>\n </tr>\n <tr>\n <td>/blog/archive/2012/nov/</td>\n <td>PostMAV(MonthArchiveView)</td>\n <td>post_archive_month.html</td>\n </tr>\n <tr>\n <td>/blog/archive/2012/nov/10/</td>\n <td>PostDAV(DayArchiveView)</td>\n <td>post_archive_day.html</td>\n </tr>\n <tr>\n <td>/blog/archive/today/</td>\n <td>PostTAV(TodayArchiveView)</td>\n <td>post_archive_day.html</td>\n </tr>\n <tr>\n <td>**/blog/tag/**</td>\n <td>**TagCloudTV(TemplateView)**</td>\n <td>**taggit_cloud.html**</td>\n </tr>\n <tr>\n <td>**/blog/tag/tagname/**</td>\n <td>**TaggedObjectLV(ListView)**</td>\n <td>**taggit_post_list.html**</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"2-작업-순서\">2. 작업 순서</h2>\n<ol>\n <li>뼈대만들기 : settings.py에 INSTALLED_APPS 항목에 taggit, taggit_templatetags2 추가, tag 관련 옵션 추가</li>\n <li>모델링 : Post 모델에 tags 컬럼추가 및 메소드 오버라이딩 후 migrate 하기</li>\n <li>URLconf 코딩 : tag 관련 페이지의 url 추가하기</li>\n <li>View 개발 : tag 관련 클래스 뷰 추가</li>\n <li>templates 개발 : post_detail.html, taggit_post_list.html, taggit_cloud.html 추가 개발</li>\n</ol>\n\n<h2 id=\"3-뼈대-만들기\">3. 뼈대 만들기</h2>\n<h4 id=\"-1--mysitesettingspy--수정하기\">[ 1 ] mysite/settings.py 수정하기</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"c1\"># 생략\n</span>    <span class=\"s\">'taggit.apps.TaggitAppConfig'</span><span class=\"p\">,</span> <span class=\"c1\"># 참고 사이트에 따르면, 'taggit' 으로 등록해도 됨. 지금은 django-taggit 패키지의 apps.py 를 참고하여 기입함\n</span>    <span class=\"s\">'taggit-templatetags2'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"c1\"># 생략\n</span>\n<span class=\"c1\"># 옵션 추가\n</span><span class=\"n\">TAGGIT_CASE_INSENSITIVE</span> <span class=\"o\">=</span> <span class=\"bp\">True</span> <span class=\"c1\"># 대소문자 구분하지 않음\n</span><span class=\"n\">TAGGIT_LIMIT</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>  <span class=\"c1\"># 태그 클라우드에 나타나는 태그의 최대 갯 수\n</span></code></pre>  </div></div>\n\n<h2 id=\"4-모델-코딩하기\">4. 모델 코딩하기</h2>\n<h4 id=\"-1--post-모델-객체에-tags-필드-추가\">[ 1 ] Post 모델 객체에 ‘tags’ 필드 추가</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># blog/models.py\n# 상단 생략\n</span><span class=\"kn\">from</span> <span class=\"nn\">taggit.managers</span> <span class=\"kn\">import</span> <span class=\"n\">TaggableManager</span> \n\n<span class=\"c1\"># 중간 생략, modify_dt 속성 다음에 'tags' 추가\n</span><span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">TaggableManager</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># 이하 생략\n</span></code></pre>  </div></div>\n<ul>\n <li>TaggableManager : taggit 패키지에 정의되어 있으며, ManyToManyField와 models.Manager 의 역할을 동시에 함. Tags 라는 별칭과 null=True 옵션이 디폴트 설정됨</li>\n</ul>\n\n<h4 id=\"-2--태그이름이-어드민-사이트에-나타나도록-adminpy-변경\">[ 2 ] 태그이름이 어드민 사이트에 나타나도록 admin.py 변경</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># blog/admin.py\n</span>\n<span class=\"k\">class</span> <span class=\"nc\">PostAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n<span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">'id'</span><span class=\"p\">,</span> <span class=\"s\">'title'</span><span class=\"p\">,</span> <span class=\"s\">'modify_dt'</span><span class=\"p\">,</span> <span class=\"s\">'tag_list'</span><span class=\"p\">)</span> <span class=\"c1\"># 장고의 models 에서 TaggableManager 타입을 지원하지 않으므로, taggit에서는 태그이름이 화면에 나올 수 있도록 'tag_list' 를 제공함\n# 생략\n</span>\n<span class=\"c1\"># 두 메소드 추가\n</span>    \n    <span class=\"c1\"># Post 테이블과 taggit 에서 제공하는 Tag 테이블이 ManyToMany 관계이므로, Tag 테이블 관련 레코드를 한번의 쿼리로 가져오기 위한 메소드. \n</span>    <span class=\"c1\"># 쿼리 횟수를 줄여 성능을 높이고저 prefetch_related() 메소드 사용함 \n</span>    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">get_queryset</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">).</span><span class=\"n\">prefetch_related</span><span class=\"p\">(</span><span class=\"s\">'tags'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># tag_list로 보여줄 내용을 정의\n</span>    <span class=\"k\">def</span> <span class=\"nf\">tag_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s\">', '</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span><span class=\"p\">.</span><span class=\"n\">tags</span><span class=\"p\">.</span><span class=\"nb\">all</span><span class=\"p\">())</span>\n</code></pre>  </div></div>\n\n<h4 id=\"-3--변경사항-데이터베이스에-반영\">[ 3 ] 변경사항 데이터베이스에 반영</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py makemigrations\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> <span class=\"nv\">$ </span>python3 manage.py migrate\n</code></pre>  </div></div>\n\n<h4 id=\"-4--admin-사이트-확인\">[ 4 ] Admin 사이트 확인</h4>\n<ul>\n <li>(venv) $ python3 manage.py runserver</li>\n <li>http://localhost:8000/admin</li>\n <li>Posts 테이블에 ‘tags’ 항목이 추가됨 (tags는 콤마로 구분된 태그이름을 나열하여 등록함)</li>\n <li>TAGGIT 앱에 Tag와 TaggedItem 2개의 테이블이 추가됨</li>\n</ul>\n\n<h2 id=\"5-urlconf-코딩\">5. URLconf 코딩</h2>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># blog/urls.py\n</span>\n<span class=\"c1\"># 상단 생략\n</span>\n<span class=\"c1\"># Example : /blog/tag/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'tag/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">TagCloudTV</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">'tag_cloud'</span><span class=\"p\">)</span> <span class=\"c1\"># TamplateView 를 사용. taggit-templatetag2에서 처리를 template 에서 하도록 설계되었음\n# Example : /blog/tag/tagname/\n</span>    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s\">'tag/&lt;str:tag&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"p\">.</span><span class=\"n\">TaggedObjectLV</span><span class=\"p\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">'tagged_object_list'</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<h2 id=\"6-뷰-코딩\">6. 뷰 코딩</h2>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># blog/views.py\n</span>\n<span class=\"c1\"># 상위 내용 생략\n</span>\n<span class=\"c1\"># 코드가 간단한 이유는, 클라우드 처리기능이 템플릿 파일에 있기 때문. \n# 템플릿에서 {% get_tagcloud %}  템플릿 태그가 처리를 함.\n</span><span class=\"k\">class</span> <span class=\"nc\">TagCloudTV</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'taggit/taggit_cloud.html'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TaggedObjectLV</span><span class=\"p\">(</span><span class=\"n\">ListView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s\">'taggit/taggit_post_list.html'</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Post</span>\n\n    <span class=\"c1\"># 모델에서 반환한 Post &amp; Tag 조인 테이블에서 tags의 name이 PATHParameter로 넘어온 tag 와 같은 목록만 반환\n</span>    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Post</span><span class=\"p\">.</span><span class=\"n\">objects</span><span class=\"p\">.</span><span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"n\">tags__name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">kwargs</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">'tag'</span><span class=\"p\">))</span> \n\n    <span class=\"c1\"># 기본적으로 ListView 에서는 object_list 변수를 넘겨주지만, 여기에 'tagname'을 추가하기 위해 메소드를 오버라이딩 함\n</span>    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span> \n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> \n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s\">'tagname'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s\">'tag'</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</code></pre>  </div></div>\n\n<h2 id=\"7-탬플릿-코딩\">7. 탬플릿 코딩</h2>\n<ul>\n <li>템플릿 파일의 위치는 <font color=\"red\">root/blog/templates/taggit/*.html</font> 로 하였음</li>\n <li>root/templates/taggit/*.html 로 위치를 지정하는 것도 좋은 방법임</li>\n</ul>\n\n<h4 id=\"-1--tags-가-보이도록-post_detailhtml-수정\">[ 1 ] tags 가 보이도록 post_detail.html 수정</h4>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n{% extends \"base.html\" %}\n\n{% block title %}post_detail.html{% endblock %}\n\n{% block content %}\n    &lt;h2&gt;{{ object.title }}&lt;/h2&gt;\n\n    &lt;p&gt;\n        {% if object.get_next %}\n        &lt;a href=\"{{ object.get_next.get_absolute_url }}\" title=\"View previous post\"&gt;\n            &lt;i class=\"fas fa-arrow-circle-left\"&gt;&lt;/i&gt; {{ object.get_next }}\n        &lt;/a&gt;\n        {% endif %}\n\n        {% if object.get_previous %}\n        | &lt;a href=\"{{ object.get_previous.get_absolute_url }}\" title=\"View next post\"&gt;\n        {{ object.get_previous }} &lt;i class=\"fas fa-arrow-circle-right\"&gt;&lt;/i&gt;\n        &lt;/a&gt;\n        {% endif %}\n    &lt;/p&gt;\n\n    &lt;div&gt;{{ object.modify_dt|date:\"j F Y\" }}&lt;/div&gt;\n    &lt;br&gt;\n\n    &lt;div&gt;\n        {{ object.content|linebreaks }}\n    &lt;/div&gt;\n\n    &lt;br&gt;\n    &lt;div&gt;\n        &lt;b&gt;TAGS&lt;/b&gt; &lt;i class=\"fas fa-tag\"&gt;&lt;/i&gt;\n        {% load taggit_templatetags2_tags %}\n        {% get_tags_for_object object as \"tags\" %}\n        {% for tag in tags %}\n        &lt;a href=\"{% url 'blog:tagged_object_list' tag.name %}\"&gt;{{tag.name}}&lt;/a&gt;\n        {% endfor %}\n\t&amp;emsp;\n        &lt;a href=\"{% url 'blog:tag_cloud' %}\"&gt; &lt;span class=\"btn btn-info btn-sm\"&gt;TagCloud&lt;/span&gt; &lt;/a&gt;\n    &lt;/div&gt;\n{% endblock %}\n\n</code></pre>  </div></div>\n<ul>\n <li>\n <font color=\"red\">{% load taggit_templatetags2_tags %} : taggit 패키지에 정의된 템플릿 태그를 사용하기 위하여 load 함</font>\n </li>\n <li>\n <font color=\"red\">{% get_tags_for_object %} : object 객체에 달려 있는 태그들의 리스트를 추출하는 커스텀 태그, 추출한 태그 리스트는 tags 변수에 할당</font>\n </li>\n</ul>\n\n<h4 id=\"-2--taggit_cloudhtml\">[ 2 ] taggit_cloud.html</h4>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n{% extends \"base.html\" %}\n\n{% block title %}taggit_cloud.html{% endblock %}\n\n{% block extra-style %}\n&lt;style type=\"text/css\"&gt;\n.tag-cloud {\n    width: 40%;\n    margin-left: 30px;\n    text-align: center;\n    padding: 5px;\n    border: 1px solid orange;\n    background-color: #ffc;\n}\n.tag-1 {font-size: 12px;}\n.tag-2 {font-size: 14px;}\n.tag-3 {font-size: 16px;}\n.tag-4 {font-size: 18px;}\n.tag-5 {font-size: 20px;}\n.tag-6 {font-size: 24px;}\n&lt;/style&gt;\n{% endblock %}\n\n{% block content %}\n    &lt;h1&gt;Blog Tag Cloud&lt;/h1&gt;\n    &lt;br&gt;\n\n    &lt;div class=\"tag-cloud\"&gt;\n        {% load taggit_templatetags2_tags %}\n        {% get_tagcloud as tags %}\n        {% for tag in tags %}\n        &lt;span class=\"tag-{{tag.weight|floatformat:0}}\"&gt;\n            &lt;a href=\"{% url 'blog:tagged_object_list' tag.name %}\"&gt; {{tag.name}}({{tag.num_times}})&lt;/a&gt;\n        &lt;/span&gt;\n        {% endfor %}\n    &lt;/div&gt;\n{% endblock %}\n\n\n\n</code></pre>  </div></div>\n<ul>\n <li>\n <font color=\"red\">{% get_tagcloud as tags %} : 모든 태그를 추출하는 커스텀 태그. 태그 리스트를 tags 변수에 할당</font>\n </li>\n <li>\n <font color=\"red\">**태그 객체와 관련된 속성들**</font>\n <ul>\n <li>\n <font color=\"red\">{{tag.name}}: 태그의 이름</font>\n </li>\n <li>\n <font color=\"red\">{{tag.num_times}}: 태그가 몇번 사용되었는지</font>\n </li>\n <li>\n <font color=\"red\">{{tag.weight}}: 태그의 중요도, {{tag.num_times}}에 의해 변환된 수치 </font>\n </li>\n <li>\n <font color=\"red\">{{tag.weight|floatformat:0}}: tag.weight 를 반올림하여 정수로 표현하는 필터 </font>\n </li>\n </ul>\n </li>\n</ul>\n\n<h4 id=\"-3--taggit_post_listhtml\">[ 3 ] taggit_post_list.html</h4>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n{% extends \"base.html\" %}\n\n{% block title %}taggit_post_list.html{% endblock %} \n\n{% block content %}\n\n    &lt;h1&gt;Posts for tag - {{ tagname }}&lt;/h1&gt; \n    &lt;br&gt;\n\n    {% for post in object_list %}\n        &lt;h2&gt;&lt;a href='{{ post.get_absolute_url }}'&gt;{{ post.title }}&lt;/a&gt;&lt;/h2&gt; \n        {{ post.modify_dt|date:\"N d, Y\" }} \n        &lt;p&gt;{{ post.description }}&lt;/p&gt; \n    {% endfor %}\n\n{% endblock %}\n\n\n\n</code></pre>  </div></div>\n<ul>\n <li>\n <font color=\"red\">{{tagname}}: view 에서 정의한 컨텍스트 변수에 추가한 속성</font>\n </li>\n</ul>\n","dir":"/python/developBlog/","name":"7_tag.md","path":"python/developBlog/7_tag.md","url":"/python/developBlog/7_tag.html"},{"sort":7,"layout":"default","title":"화면 처리","content":"<h1 id=\"화면-처리\">화면 처리</h1>\n\n<ul>\n <li>BootStrap 이용 : <a href=\"https://startbootstrap.com/template-categories/all/\">https://startbootstrap.com/template-categories/all/</a></li>\n</ul>\n\n<h2 id=\"1-화면작업-사전-준비\"><font color=\"blue\">1. 화면작업 사전 준비</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. 한글문제와 UTF-8 필터 처리</font></strong></p>\n\n<ol>\n <li>화면에서 한글 데이터를 보냈을 때, 웹 브라우저의 Network 콘솔에서 한글이 깨지지 않았고, 개발도구 콘솔에서 한글이 깨져서 보이면 아래와 같이 처리한다.</li>\n</ol>\n\n<ul>\n <li>XML 셋팅 : web.xml</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;filter&gt;</span>\n    <span class=\"nt\">&lt;filter-name&gt;</span>encoding<span class=\"nt\">&lt;/filter-name&gt;</span>\n    <span class=\"nt\">&lt;filter-class&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"nt\">&lt;/filter-class&gt;</span>\n    <span class=\"nt\">&lt;init-param&gt;</span>\n        <span class=\"nt\">&lt;param-name&gt;</span>encoding<span class=\"nt\">&lt;/param-name&gt;</span>\n        <span class=\"nt\">&lt;param-value&gt;</span>UTF-8<span class=\"nt\">&lt;/param-value&gt;</span>\n    <span class=\"nt\">&lt;/init-param&gt;</span>\n<span class=\"nt\">&lt;/filter&gt;</span>\n\n<span class=\"nt\">&lt;filter-mapping&gt;</span>\n    <span class=\"nt\">&lt;filter-name&gt;</span>encoding<span class=\"nt\">&lt;/filter-name&gt;</span>\n    <span class=\"nt\">&lt;servlet-name&gt;</span>appServlet<span class=\"nt\">&lt;/servlet-name&gt;</span>\n<span class=\"nt\">&lt;/filter-mapping&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>Java 셋팅 : WebConfig.java 에 하기의 메소드 추가</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">protected</span> <span class=\"nc\">Filter</span><span class=\"o\">[]</span> <span class=\"nf\">getServletFilters</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"nc\">CharacterEncodingFilter</span> <span class=\"n\">characterEncodingFilter</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">CharacterEncodingFilter</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">characterEncodingFilter</span><span class=\"o\">.</span><span class=\"na\">setEncoding</span><span class=\"o\">(</span><span class=\"s\">\"UTF-8\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">characterEncodingFilter</span><span class=\"o\">.</span><span class=\"na\">setForceEncoding</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nc\">Filter</span><span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"n\">characterEncodingFilter</span><span class=\"o\">};</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. Bootstrap, 프로젝트에 적용하기</font></strong></p>\n<ol>\n <li>다운로드 : <a href=\"https://startbootstrap.com/templates\">https://startbootstrap.com/templates</a></li>\n <li><code class=\"language-plaintext highlighter-rouge\">SB Admin</code> 다운로드</li>\n <li><code class=\"language-plaintext highlighter-rouge\">/Users/kim-yunmi/eclipse-workspace/ex02/src/main/webapp/resources</code> 하위에 다운로드 받은 템플릿 파일을 저장한다.</li>\n <li>\n <p>기본적인 <code class=\"language-plaintext highlighter-rouge\">list.jsp</code> 를 <code class=\"language-plaintext highlighter-rouge\">views/board/</code> 경로에 아래와 같이 만든다.</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"cp\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</span>\n <span class=\"nt\">&lt;html&gt;</span>\n <span class=\"nt\">&lt;head&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"Content-Type\"</span> <span class=\"na\">content=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;title&gt;</span>Insert title here<span class=\"nt\">&lt;/title&gt;</span>\n <span class=\"nt\">&lt;/head&gt;</span>\n <span class=\"nt\">&lt;body&gt;</span>\n <span class=\"nt\">&lt;h1&gt;</span>List Page<span class=\"nt\">&lt;/h1&gt;</span>\n <span class=\"nt\">&lt;/body&gt;</span>\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>탐캣의 contextRoot를 ‘/’로 변경하고, 서버를 시작한다.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/board/list</code> 를 호출하고 (4)에서 생성한 list.jsp 페이지가 문제없이 뜨는 것을 확인한다.</li>\n <li>이제 bootstrap의 스타일을 list.jsp 에 적용한다.\n <ul>\n <li>&lt;html lang=”en”&gt; ~ &lt;/html&gt; 까지의 SB Admin2 tables.html 소스를 list.jsp에 복사한다.</li>\n <li>css, js, img 폴더의 경로를 <code class=\"language-plaintext highlighter-rouge\">/resources/</code>로 시작하도록 변경한다.</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"cp\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</span>\n <span class=\"nt\">&lt;html</span> <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"nt\">&lt;head&gt;</span>\n\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"IE=edge\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1, shrink-to-fit=no\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"author\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"nt\">&lt;title&gt;</span>SB Admin 2 - Tables<span class=\"nt\">&lt;/title&gt;</span>\n\n <span class=\"c\">&lt;!-- Custom fonts for this template --&gt;</span>\n <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/vendor/fontawesome-free/css/all.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;link</span>\n     <span class=\"na\">href=</span><span class=\"s\">\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"</span>\n     <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"c\">&lt;!-- Custom styles for this template --&gt;</span>\n <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/css/sb-admin-2.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"c\">&lt;!-- Custom styles for this page --&gt;</span>\n <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/vendor/datatables/dataTables.bootstrap4.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"nt\">&lt;/head&gt;</span>\n\n <span class=\"nt\">&lt;body</span> <span class=\"na\">id=</span><span class=\"s\">\"page-top\"</span><span class=\"nt\">&gt;</span>\n\n <span class=\"c\">&lt;!-- Page Wrapper --&gt;</span>\n <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"wrapper\"</span><span class=\"nt\">&gt;</span>\n\n     <span class=\"c\">&lt;!-- Sidebar --&gt;</span>\n     <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"</span> <span class=\"na\">id=</span><span class=\"s\">\"accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Sidebar - Brand --&gt;</span>\n         <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand d-flex align-items-center justify-content-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"index.html\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand-icon rotate-n-15\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-laugh-wink\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand-text mx-3\"</span><span class=\"nt\">&gt;</span>SB Admin <span class=\"nt\">&lt;sup&gt;</span>2<span class=\"nt\">&lt;/sup&gt;&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/a&gt;</span>\n\n         <span class=\"c\">&lt;!-- Divider --&gt;</span>\n         <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider my-0\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Dashboard --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"index.html\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-tachometer-alt\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Dashboard<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Divider --&gt;</span>\n         <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Heading --&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-heading\"</span><span class=\"nt\">&gt;</span>\n             Interface\n         <span class=\"nt\">&lt;/div&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Pages Collapse Menu --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapseTwo\"</span>\n                 <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapseTwo\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-cog\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Components<span class=\"nt\">&lt;/span&gt;</span>\n             <span class=\"nt\">&lt;/a&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapseTwo\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingTwo\"</span> <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Custom Components:<span class=\"nt\">&lt;/h6&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"buttons.html\"</span><span class=\"nt\">&gt;</span>Buttons<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"cards.html\"</span><span class=\"nt\">&gt;</span>Cards<span class=\"nt\">&lt;/a&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Utilities Collapse Menu --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapseUtilities\"</span>\n                 <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapseUtilities\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-wrench\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Utilities<span class=\"nt\">&lt;/span&gt;</span>\n             <span class=\"nt\">&lt;/a&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapseUtilities\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingUtilities\"</span>\n                 <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Custom Utilities:<span class=\"nt\">&lt;/h6&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-color.html\"</span><span class=\"nt\">&gt;</span>Colors<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-border.html\"</span><span class=\"nt\">&gt;</span>Borders<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-animation.html\"</span><span class=\"nt\">&gt;</span>Animations<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-other.html\"</span><span class=\"nt\">&gt;</span>Other<span class=\"nt\">&lt;/a&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Divider --&gt;</span>\n         <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Heading --&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-heading\"</span><span class=\"nt\">&gt;</span>\n             Addons\n         <span class=\"nt\">&lt;/div&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Pages Collapse Menu --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapsePages\"</span>\n                 <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapsePages\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-folder\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Pages<span class=\"nt\">&lt;/span&gt;</span>\n             <span class=\"nt\">&lt;/a&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapsePages\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingPages\"</span> <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Login Screens:<span class=\"nt\">&lt;/h6&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"login.html\"</span><span class=\"nt\">&gt;</span>Login<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"register.html\"</span><span class=\"nt\">&gt;</span>Register<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"forgot-password.html\"</span><span class=\"nt\">&gt;</span>Forgot Password<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-divider\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Other Pages:<span class=\"nt\">&lt;/h6&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"404.html\"</span><span class=\"nt\">&gt;</span>404 Page<span class=\"nt\">&lt;/a&gt;</span>\n                     <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"blank.html\"</span><span class=\"nt\">&gt;</span>Blank Page<span class=\"nt\">&lt;/a&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Charts --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"charts.html\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-chart-area\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Charts<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Nav Item - Tables --&gt;</span>\n         <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item active\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"tables.html\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-table\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                 <span class=\"nt\">&lt;span&gt;</span>Tables<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n         <span class=\"nt\">&lt;/li&gt;</span>\n\n         <span class=\"c\">&lt;!-- Divider --&gt;</span>\n         <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider d-none d-md-block\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Sidebar Toggler (Sidebar) --&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-center d-none d-md-inline\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle border-0\"</span> <span class=\"na\">id=</span><span class=\"s\">\"sidebarToggle\"</span><span class=\"nt\">&gt;&lt;/button&gt;</span>\n         <span class=\"nt\">&lt;/div&gt;</span>\n\n     <span class=\"nt\">&lt;/ul&gt;</span>\n     <span class=\"c\">&lt;!-- End of Sidebar --&gt;</span>\n\n     <span class=\"c\">&lt;!-- Content Wrapper --&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"content-wrapper\"</span> <span class=\"na\">class=</span><span class=\"s\">\"d-flex flex-column\"</span><span class=\"nt\">&gt;</span>\n\n         <span class=\"c\">&lt;!-- Main Content --&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"content\"</span><span class=\"nt\">&gt;</span>\n\n             <span class=\"c\">&lt;!-- Topbar --&gt;</span>\n             <span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"</span><span class=\"nt\">&gt;</span>\n\n                 <span class=\"c\">&lt;!-- Sidebar Toggle (Topbar) --&gt;</span>\n                 <span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"form-inline\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">\"sidebarToggleTop\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-link d-md-none rounded-circle mr-3\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fa fa-bars\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                     <span class=\"nt\">&lt;/button&gt;</span>\n                 <span class=\"nt\">&lt;/form&gt;</span>\n\n                 <span class=\"c\">&lt;!-- Topbar Search --&gt;</span>\n                 <span class=\"nt\">&lt;form</span>\n                     <span class=\"na\">class=</span><span class=\"s\">\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control bg-light border-0 small\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Search for...\"</span>\n                             <span class=\"na\">aria-label=</span><span class=\"s\">\"Search\"</span> <span class=\"na\">aria-describedby=</span><span class=\"s\">\"basic-addon2\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group-append\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-sm\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                             <span class=\"nt\">&lt;/button&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"nt\">&lt;/form&gt;</span>\n\n                 <span class=\"c\">&lt;!-- Topbar Navbar --&gt;</span>\n                 <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar-nav ml-auto\"</span><span class=\"nt\">&gt;</span>\n\n                     <span class=\"c\">&lt;!-- Nav Item - Search Dropdown (Visible Only XS) --&gt;</span>\n                     <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow d-sm-none\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"searchDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                             <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                         <span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"c\">&lt;!-- Dropdown - Messages --&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"</span>\n                             <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"searchDropdown\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"form-inline mr-auto w-100 navbar-search\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control bg-light border-0 small\"</span>\n                                         <span class=\"na\">placeholder=</span><span class=\"s\">\"Search for...\"</span> <span class=\"na\">aria-label=</span><span class=\"s\">\"Search\"</span>\n                                         <span class=\"na\">aria-describedby=</span><span class=\"s\">\"basic-addon2\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group-append\"</span><span class=\"nt\">&gt;</span>\n                                         <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span><span class=\"nt\">&gt;</span>\n                                             <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-sm\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                         <span class=\"nt\">&lt;/button&gt;</span>\n                                     <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/form&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/li&gt;</span>\n\n                     <span class=\"c\">&lt;!-- Nav Item - Alerts --&gt;</span>\n                     <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow mx-1\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"alertsDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                             <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-bell fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                             <span class=\"c\">&lt;!-- Counter - Alerts --&gt;</span>\n                             <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"badge badge-danger badge-counter\"</span><span class=\"nt\">&gt;</span>3+<span class=\"nt\">&lt;/span&gt;</span>\n                         <span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"c\">&lt;!-- Dropdown - Alerts --&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                             <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"alertsDropdown\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-header\"</span><span class=\"nt\">&gt;</span>\n                                 Alerts Center\n                             <span class=\"nt\">&lt;/h6&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-primary\"</span><span class=\"nt\">&gt;</span>\n                                         <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-file-alt text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                     <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 12, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                     <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"font-weight-bold\"</span><span class=\"nt\">&gt;</span>A new monthly report is ready to download!<span class=\"nt\">&lt;/span&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-success\"</span><span class=\"nt\">&gt;</span>\n                                         <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-donate text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                     <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 7, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                     $290.29 has been deposited into your account!\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-warning\"</span><span class=\"nt\">&gt;</span>\n                                         <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-exclamation-triangle text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                     <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 2, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                     Spending Alert: We've noticed unusually high spending for your account.\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item text-center small text-gray-500\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>Show All Alerts<span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/li&gt;</span>\n\n                     <span class=\"c\">&lt;!-- Nav Item - Messages --&gt;</span>\n                     <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow mx-1\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"messagesDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                             <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-envelope fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                             <span class=\"c\">&lt;!-- Counter - Messages --&gt;</span>\n                             <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"badge badge-danger badge-counter\"</span><span class=\"nt\">&gt;</span>7<span class=\"nt\">&lt;/span&gt;</span>\n                         <span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"c\">&lt;!-- Dropdown - Messages --&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                             <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"messagesDropdown\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-header\"</span><span class=\"nt\">&gt;</span>\n                                 Message Center\n                             <span class=\"nt\">&lt;/h6&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_1.svg\"</span>\n                                         <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-success\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"font-weight-bold\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Hi there! I am wondering if you can help me with a\n                                         problem I've been having.<span class=\"nt\">&lt;/div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Emily Fowler · 58m<span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_2.svg\"</span>\n                                         <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>I have the photos that you ordered last month, how\n                                         would you like them sent to you?<span class=\"nt\">&lt;/div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Jae Chun · 1d<span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_3.svg\"</span>\n                                         <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-warning\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Last month's report looks great, I am very happy with\n                                         the progress so far, keep up the good work!<span class=\"nt\">&lt;/div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Morgan Alvarez · 2d<span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\"</span>\n                                         <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-success\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Am I a good boy? The reason I ask is because someone\n                                         told me that people say this to all dogs, even if they aren't good...<span class=\"nt\">&lt;/div&gt;</span>\n                                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Chicken the Dog · 2w<span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item text-center small text-gray-500\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>Read More Messages<span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/li&gt;</span>\n\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"topbar-divider d-none d-sm-block\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n\n                     <span class=\"c\">&lt;!-- Nav Item - User Information --&gt;</span>\n                     <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"userDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                             <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-2 d-none d-lg-inline text-gray-600 small\"</span><span class=\"nt\">&gt;</span>Douglas McGee<span class=\"nt\">&lt;/span&gt;</span>\n                             <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"img-profile rounded-circle\"</span>\n                                 <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile.svg\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"c\">&lt;!-- Dropdown - User Information --&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                             <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"userDropdown\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                 Profile\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                 Settings\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                 Activity Log\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-divider\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                             <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"modal\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#logoutModal\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                 Logout\n                             <span class=\"nt\">&lt;/a&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/li&gt;</span>\n\n                 <span class=\"nt\">&lt;/ul&gt;</span>\n\n             <span class=\"nt\">&lt;/nav&gt;</span>\n             <span class=\"c\">&lt;!-- End of Topbar --&gt;</span>\n\n             <span class=\"c\">&lt;!-- Begin Page Content --&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container-fluid\"</span><span class=\"nt\">&gt;</span>\n\n                 <span class=\"c\">&lt;!-- Page Heading --&gt;</span>\n                 <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"h3 mb-2 text-gray-800\"</span><span class=\"nt\">&gt;</span>Tables<span class=\"nt\">&lt;/h1&gt;</span>\n                 <span class=\"nt\">&lt;p</span> <span class=\"na\">class=</span><span class=\"s\">\"mb-4\"</span><span class=\"nt\">&gt;</span>DataTables is a third party plugin that is used to generate the demo table below.\n                     For more information about DataTables, please visit the <span class=\"nt\">&lt;a</span> <span class=\"na\">target=</span><span class=\"s\">\"_blank\"</span>\n                         <span class=\"na\">href=</span><span class=\"s\">\"https://datatables.net\"</span><span class=\"nt\">&gt;</span>official DataTables documentation<span class=\"nt\">&lt;/a&gt;</span>.<span class=\"nt\">&lt;/p&gt;</span>\n\n                 <span class=\"c\">&lt;!-- DataTales Example --&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card shadow mb-4\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header py-3\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"m-0 font-weight-bold text-primary\"</span><span class=\"nt\">&gt;</span>DataTables Example<span class=\"nt\">&lt;/h6&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-body\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"table-responsive\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;table</span> <span class=\"na\">class=</span><span class=\"s\">\"table table-bordered\"</span> <span class=\"na\">id=</span><span class=\"s\">\"dataTable\"</span> <span class=\"na\">width=</span><span class=\"s\">\"100%\"</span> <span class=\"na\">cellspacing=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;thead&gt;</span>\n                                     <span class=\"nt\">&lt;tr&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Name<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Position<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Office<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Age<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Start date<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Salary<span class=\"nt\">&lt;/th&gt;</span>\n                                     <span class=\"nt\">&lt;/tr&gt;</span>\n                                 <span class=\"nt\">&lt;/thead&gt;</span>\n                                 <span class=\"nt\">&lt;tfoot&gt;</span>\n                                     <span class=\"nt\">&lt;tr&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Name<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Position<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Office<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Age<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Start date<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;th&gt;</span>Salary<span class=\"nt\">&lt;/th&gt;</span>\n                                     <span class=\"nt\">&lt;/tr&gt;</span>\n                                 <span class=\"nt\">&lt;/tfoot&gt;</span>\n                                 <span class=\"nt\">&lt;tbody&gt;</span>\n                                     <span class=\"nt\">&lt;tr&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>Tiger Nixon<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>System Architect<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>Edinburgh<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>61<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>2011/04/25<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;td&gt;</span>$320,800<span class=\"nt\">&lt;/td&gt;</span>\n                                     <span class=\"nt\">&lt;/tr&gt;</span>\n                                 <span class=\"nt\">&lt;/tbody&gt;</span>\n                             <span class=\"nt\">&lt;/table&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n\n             <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"c\">&lt;!-- /.container-fluid --&gt;</span>\n\n         <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"c\">&lt;!-- End of Main Content --&gt;</span>\n\n         <span class=\"c\">&lt;!-- Footer --&gt;</span>\n         <span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"sticky-footer bg-white\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container my-auto\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"copyright text-center my-auto\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;span&gt;</span>Copyright <span class=\"ni\">&amp;copy;</span> Your Website 2020<span class=\"nt\">&lt;/span&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/footer&gt;</span>\n         <span class=\"c\">&lt;!-- End of Footer --&gt;</span>\n\n     <span class=\"nt\">&lt;/div&gt;</span>\n     <span class=\"c\">&lt;!-- End of Content Wrapper --&gt;</span>\n\n <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"c\">&lt;!-- End of Page Wrapper --&gt;</span>\n\n <span class=\"c\">&lt;!-- Scroll to Top Button--&gt;</span>\n <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"scroll-to-top rounded\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#page-top\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-angle-up\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n <span class=\"nt\">&lt;/a&gt;</span>\n\n <span class=\"c\">&lt;!-- Logout Modal--&gt;</span>\n <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal fade\"</span> <span class=\"na\">id=</span><span class=\"s\">\"logoutModal\"</span> <span class=\"na\">tabindex=</span><span class=\"s\">\"-1\"</span> <span class=\"na\">role=</span><span class=\"s\">\"dialog\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"exampleModalLabel\"</span>\n     <span class=\"na\">aria-hidden=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-dialog\"</span> <span class=\"na\">role=</span><span class=\"s\">\"document\"</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-content\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-header\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;h5</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-title\"</span> <span class=\"na\">id=</span><span class=\"s\">\"exampleModalLabel\"</span><span class=\"nt\">&gt;</span>Ready to Leave?<span class=\"nt\">&lt;/h5&gt;</span>\n                 <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"close\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">\"modal\"</span> <span class=\"na\">aria-label=</span><span class=\"s\">\"Close\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;span</span> <span class=\"na\">aria-hidden=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</span>×<span class=\"nt\">&lt;/span&gt;</span>\n                 <span class=\"nt\">&lt;/button&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-body\"</span><span class=\"nt\">&gt;</span>Select \"Logout\" below if you are ready to end your current session.<span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-footer\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-secondary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">\"modal\"</span><span class=\"nt\">&gt;</span>Cancel<span class=\"nt\">&lt;/button&gt;</span>\n                 <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">href=</span><span class=\"s\">\"login.html\"</span><span class=\"nt\">&gt;</span>Logout<span class=\"nt\">&lt;/a&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/div&gt;</span>\n     <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;/div&gt;</span>\n\n <span class=\"c\">&lt;!-- Bootstrap core JavaScript--&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/jquery/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/bootstrap/js/bootstrap.bundle.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n <span class=\"c\">&lt;!-- Core plugin JavaScript--&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/jquery-easing/jquery.easing.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n <span class=\"c\">&lt;!-- Custom scripts for all pages--&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/js/sb-admin-2.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n <span class=\"c\">&lt;!-- Page level plugins --&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/datatables/jquery.dataTables.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/datatables/dataTables.bootstrap4.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n <span class=\"c\">&lt;!-- Page level custom scripts --&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/js/demo/datatables-demo.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n <span class=\"nt\">&lt;/body&gt;</span>\n\n <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. 페이지 include</font></strong></p>\n<ol>\n <li>‘Begin of Page Wrapper’ 부분 부터 ‘End of Page Wrapper’ 만 list.jsp 에 남겨두고 윗부분은 /views/includes/header.jsp 로, 아랫 부분은 /views/includes/footer.jsp 로 코드를 이동한다.</li>\n <li>list.jsp 의 윗 부분에 header.jsp 를, 아랫 부분에 footer.jsp 를 include 한다.\n <ul>\n <li>list.jsp</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/header.jsp\"</span> <span class=\"nt\">%&gt;</span>\n                 <span class=\"c\">&lt;!-- Begin Page Content --&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container-fluid\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"c\">&lt;!-- Page Heading --&gt;</span>\n                     <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"h3 mb-2 text-gray-800\"</span><span class=\"nt\">&gt;</span>Tables<span class=\"nt\">&lt;/h1&gt;</span>\n                     <span class=\"nt\">&lt;p</span> <span class=\"na\">class=</span><span class=\"s\">\"mb-4\"</span><span class=\"nt\">&gt;</span>DataTables is a third party plugin that is used to generate the demo table below.\n                         For more information about DataTables, please visit the <span class=\"nt\">&lt;a</span> <span class=\"na\">target=</span><span class=\"s\">\"_blank\"</span>\n                             <span class=\"na\">href=</span><span class=\"s\">\"https://datatables.net\"</span><span class=\"nt\">&gt;</span>official DataTables documentation<span class=\"nt\">&lt;/a&gt;</span>.<span class=\"nt\">&lt;/p&gt;</span>\n\n                     <span class=\"c\">&lt;!-- DataTales Example --&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card shadow mb-4\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header py-3\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"m-0 font-weight-bold text-primary\"</span><span class=\"nt\">&gt;</span>DataTables Example<span class=\"nt\">&lt;/h6&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-body\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"table-responsive\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;table</span> <span class=\"na\">class=</span><span class=\"s\">\"table table-bordered\"</span> <span class=\"na\">id=</span><span class=\"s\">\"dataTable\"</span> <span class=\"na\">width=</span><span class=\"s\">\"100%\"</span> <span class=\"na\">cellspacing=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;thead&gt;</span>\n                                         <span class=\"nt\">&lt;tr&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Name<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Position<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Office<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Age<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Start date<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Salary<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;/tr&gt;</span>\n                                     <span class=\"nt\">&lt;/thead&gt;</span>\n                                     <span class=\"nt\">&lt;tfoot&gt;</span>\n                                         <span class=\"nt\">&lt;tr&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Name<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Position<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Office<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Age<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Start date<span class=\"nt\">&lt;/th&gt;</span>\n                                             <span class=\"nt\">&lt;th&gt;</span>Salary<span class=\"nt\">&lt;/th&gt;</span>\n                                         <span class=\"nt\">&lt;/tr&gt;</span>\n                                     <span class=\"nt\">&lt;/tfoot&gt;</span>\n                                     <span class=\"nt\">&lt;tbody&gt;</span>\n                                         <span class=\"nt\">&lt;tr&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>Tiger Nixon<span class=\"nt\">&lt;/td&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>System Architect<span class=\"nt\">&lt;/td&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>Edinburgh<span class=\"nt\">&lt;/td&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>61<span class=\"nt\">&lt;/td&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>2011/04/25<span class=\"nt\">&lt;/td&gt;</span>\n                                             <span class=\"nt\">&lt;td&gt;</span>$320,800<span class=\"nt\">&lt;/td&gt;</span>\n                                         <span class=\"nt\">&lt;/tr&gt;</span>\n                                     <span class=\"nt\">&lt;/tbody&gt;</span>\n                                 <span class=\"nt\">&lt;/table&gt;</span>\n                             <span class=\"nt\">&lt;/div&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n\n                 <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"c\">&lt;!-- /.container-fluid --&gt;</span>\n\n             <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"c\">&lt;!-- End of Main Content --&gt;</span>\n         <span class=\"c\">&lt;!-- End of Content Wrapper --&gt;</span>\n\n     <span class=\"nt\">&lt;/div&gt;</span>\n        \n     <span class=\"c\">&lt;!-- End of Page Wrapper --&gt;</span>\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/footer.jsp\"</span> <span class=\"nt\">%&gt;</span>   \n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<ul>\n <li>\n <p>header.jsp</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"cp\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;</span>\n  <span class=\"nt\">&lt;html</span> <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;head&gt;</span>\n\n      <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"IE=edge\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1, shrink-to-fit=no\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"author\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"nt\">&lt;title&gt;</span>/board/list.jsp<span class=\"nt\">&lt;/title&gt;</span>\n      <span class=\"nt\">&lt;script\n          </span><span class=\"na\">src=</span><span class=\"s\">\"https://code.jquery.com/jquery-3.5.1.min.js\"</span>\n          <span class=\"na\">integrity=</span><span class=\"s\">\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\"</span>\n          <span class=\"na\">crossorigin=</span><span class=\"s\">\"anonymous\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n      <span class=\"c\">&lt;!-- Custom fonts for this template --&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/vendor/fontawesome-free/css/all.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;link</span>\n          <span class=\"na\">href=</span><span class=\"s\">\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"</span>\n          <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"c\">&lt;!-- Custom styles for this template --&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/css/sb-admin-2.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"c\">&lt;!-- Custom styles for this page --&gt;</span>\n      <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/vendor/datatables/dataTables.bootstrap4.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;/head&gt;</span>\n\n  <span class=\"nt\">&lt;body</span> <span class=\"na\">id=</span><span class=\"s\">\"page-top\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"c\">&lt;!-- Page Wrapper --&gt;</span>\n      <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"wrapper\"</span><span class=\"nt\">&gt;</span>\n\n          <span class=\"c\">&lt;!-- Sidebar --&gt;</span>\n          <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"</span> <span class=\"na\">id=</span><span class=\"s\">\"accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Sidebar - Brand --&gt;</span>\n              <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand d-flex align-items-center justify-content-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"index.html\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand-icon rotate-n-15\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-laugh-wink\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                  <span class=\"nt\">&lt;/div&gt;</span>\n                  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-brand-text mx-3\"</span><span class=\"nt\">&gt;</span>SB Admin <span class=\"nt\">&lt;sup&gt;</span>2<span class=\"nt\">&lt;/sup&gt;&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;/a&gt;</span>\n\n              <span class=\"c\">&lt;!-- Divider --&gt;</span>\n              <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider my-0\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Dashboard --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"index.html\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-tachometer-alt\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Dashboard<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Divider --&gt;</span>\n              <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Heading --&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-heading\"</span><span class=\"nt\">&gt;</span>\n                  Interface\n              <span class=\"nt\">&lt;/div&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Pages Collapse Menu --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapseTwo\"</span>\n                      <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapseTwo\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-cog\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Components<span class=\"nt\">&lt;/span&gt;</span>\n                  <span class=\"nt\">&lt;/a&gt;</span>\n                  <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapseTwo\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingTwo\"</span> <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                          <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Custom Components:<span class=\"nt\">&lt;/h6&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"buttons.html\"</span><span class=\"nt\">&gt;</span>Buttons<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"cards.html\"</span><span class=\"nt\">&gt;</span>Cards<span class=\"nt\">&lt;/a&gt;</span>\n                      <span class=\"nt\">&lt;/div&gt;</span>\n                  <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Utilities Collapse Menu --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapseUtilities\"</span>\n                      <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapseUtilities\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-wrench\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Utilities<span class=\"nt\">&lt;/span&gt;</span>\n                  <span class=\"nt\">&lt;/a&gt;</span>\n                  <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapseUtilities\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingUtilities\"</span>\n                      <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                          <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Custom Utilities:<span class=\"nt\">&lt;/h6&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-color.html\"</span><span class=\"nt\">&gt;</span>Colors<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-border.html\"</span><span class=\"nt\">&gt;</span>Borders<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-animation.html\"</span><span class=\"nt\">&gt;</span>Animations<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"utilities-other.html\"</span><span class=\"nt\">&gt;</span>Other<span class=\"nt\">&lt;/a&gt;</span>\n                      <span class=\"nt\">&lt;/div&gt;</span>\n                  <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Divider --&gt;</span>\n              <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Heading --&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-heading\"</span><span class=\"nt\">&gt;</span>\n                  Addons\n              <span class=\"nt\">&lt;/div&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Pages Collapse Menu --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link collapsed\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#collapsePages\"</span>\n                      <span class=\"na\">aria-expanded=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-controls=</span><span class=\"s\">\"collapsePages\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-folder\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Pages<span class=\"nt\">&lt;/span&gt;</span>\n                  <span class=\"nt\">&lt;/a&gt;</span>\n                  <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"collapsePages\"</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"headingPages\"</span> <span class=\"na\">data-parent=</span><span class=\"s\">\"#accordionSidebar\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-white py-2 collapse-inner rounded\"</span><span class=\"nt\">&gt;</span>\n                          <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Login Screens:<span class=\"nt\">&lt;/h6&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"login.html\"</span><span class=\"nt\">&gt;</span>Login<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"register.html\"</span><span class=\"nt\">&gt;</span>Register<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"forgot-password.html\"</span><span class=\"nt\">&gt;</span>Forgot Password<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-divider\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-header\"</span><span class=\"nt\">&gt;</span>Other Pages:<span class=\"nt\">&lt;/h6&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"404.html\"</span><span class=\"nt\">&gt;</span>404 Page<span class=\"nt\">&lt;/a&gt;</span>\n                          <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"collapse-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"blank.html\"</span><span class=\"nt\">&gt;</span>Blank Page<span class=\"nt\">&lt;/a&gt;</span>\n                      <span class=\"nt\">&lt;/div&gt;</span>\n                  <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Charts --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"charts.html\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-chart-area\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Charts<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Nav Item - Tables --&gt;</span>\n              <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item active\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"tables.html\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-fw fa-table\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                      <span class=\"nt\">&lt;span&gt;</span>Tables<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;</span>\n              <span class=\"nt\">&lt;/li&gt;</span>\n\n              <span class=\"c\">&lt;!-- Divider --&gt;</span>\n              <span class=\"nt\">&lt;hr</span> <span class=\"na\">class=</span><span class=\"s\">\"sidebar-divider d-none d-md-block\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Sidebar Toggler (Sidebar) --&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-center d-none d-md-inline\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle border-0\"</span> <span class=\"na\">id=</span><span class=\"s\">\"sidebarToggle\"</span><span class=\"nt\">&gt;&lt;/button&gt;</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n\n          <span class=\"nt\">&lt;/ul&gt;</span>\n          <span class=\"c\">&lt;!-- End of Sidebar --&gt;</span>\n            \n          <span class=\"c\">&lt;!-- Content Wrapper --&gt;</span>\n          <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"content-wrapper\"</span> <span class=\"na\">class=</span><span class=\"s\">\"d-flex flex-column\"</span><span class=\"nt\">&gt;</span>\n\n              <span class=\"c\">&lt;!-- Main Content --&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"content\"</span><span class=\"nt\">&gt;</span>\n\n                  <span class=\"c\">&lt;!-- Topbar --&gt;</span>\n                  <span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"</span><span class=\"nt\">&gt;</span>\n\n                      <span class=\"c\">&lt;!-- Sidebar Toggle (Topbar) --&gt;</span>\n                      <span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"form-inline\"</span><span class=\"nt\">&gt;</span>\n                          <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">\"sidebarToggleTop\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-link d-md-none rounded-circle mr-3\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fa fa-bars\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                          <span class=\"nt\">&lt;/button&gt;</span>\n                      <span class=\"nt\">&lt;/form&gt;</span>\n\n                      <span class=\"c\">&lt;!-- Topbar Search --&gt;</span>\n                      <span class=\"nt\">&lt;form</span>\n                          <span class=\"na\">class=</span><span class=\"s\">\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\"</span><span class=\"nt\">&gt;</span>\n                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control bg-light border-0 small\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Search for...\"</span>\n                                  <span class=\"na\">aria-label=</span><span class=\"s\">\"Search\"</span> <span class=\"na\">aria-describedby=</span><span class=\"s\">\"basic-addon2\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group-append\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-sm\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                  <span class=\"nt\">&lt;/button&gt;</span>\n                              <span class=\"nt\">&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;/div&gt;</span>\n                      <span class=\"nt\">&lt;/form&gt;</span>\n\n                      <span class=\"c\">&lt;!-- Topbar Navbar --&gt;</span>\n                      <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"navbar-nav ml-auto\"</span><span class=\"nt\">&gt;</span>\n\n                          <span class=\"c\">&lt;!-- Nav Item - Search Dropdown (Visible Only XS) --&gt;</span>\n                          <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow d-sm-none\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"searchDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                                  <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                              <span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"c\">&lt;!-- Dropdown - Messages --&gt;</span>\n                              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"</span>\n                                  <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"searchDropdown\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"form-inline mr-auto w-100 navbar-search\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control bg-light border-0 small\"</span>\n                                              <span class=\"na\">placeholder=</span><span class=\"s\">\"Search for...\"</span> <span class=\"na\">aria-label=</span><span class=\"s\">\"Search\"</span>\n                                              <span class=\"na\">aria-describedby=</span><span class=\"s\">\"basic-addon2\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"input-group-append\"</span><span class=\"nt\">&gt;</span>\n                                              <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span><span class=\"nt\">&gt;</span>\n                                                  <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-search fa-sm\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                              <span class=\"nt\">&lt;/button&gt;</span>\n                                          <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/form&gt;</span>\n                              <span class=\"nt\">&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;/li&gt;</span>\n\n                          <span class=\"c\">&lt;!-- Nav Item - Alerts --&gt;</span>\n                          <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow mx-1\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"alertsDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                                  <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-bell fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                  <span class=\"c\">&lt;!-- Counter - Alerts --&gt;</span>\n                                  <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"badge badge-danger badge-counter\"</span><span class=\"nt\">&gt;</span>3+<span class=\"nt\">&lt;/span&gt;</span>\n                              <span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"c\">&lt;!-- Dropdown - Alerts --&gt;</span>\n                              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                                  <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"alertsDropdown\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-header\"</span><span class=\"nt\">&gt;</span>\n                                      Alerts Center\n                                  <span class=\"nt\">&lt;/h6&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-primary\"</span><span class=\"nt\">&gt;</span>\n                                              <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-file-alt text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                          <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 12, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                          <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"font-weight-bold\"</span><span class=\"nt\">&gt;</span>A new monthly report is ready to download!<span class=\"nt\">&lt;/span&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-success\"</span><span class=\"nt\">&gt;</span>\n                                              <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-donate text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                          <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 7, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                          $290.29 has been deposited into your account!\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"icon-circle bg-warning\"</span><span class=\"nt\">&gt;</span>\n                                              <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-exclamation-triangle text-white\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                          <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>December 2, 2019<span class=\"nt\">&lt;/div&gt;</span>\n                                          Spending Alert: We've noticed unusually high spending for your account.\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item text-center small text-gray-500\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>Show All Alerts<span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"nt\">&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;/li&gt;</span>\n\n                          <span class=\"c\">&lt;!-- Nav Item - Messages --&gt;</span>\n                          <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow mx-1\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"messagesDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                                  <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-envelope fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                  <span class=\"c\">&lt;!-- Counter - Messages --&gt;</span>\n                                  <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"badge badge-danger badge-counter\"</span><span class=\"nt\">&gt;</span>7<span class=\"nt\">&lt;/span&gt;</span>\n                              <span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"c\">&lt;!-- Dropdown - Messages --&gt;</span>\n                              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                                  <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"messagesDropdown\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-header\"</span><span class=\"nt\">&gt;</span>\n                                      Message Center\n                                  <span class=\"nt\">&lt;/h6&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_1.svg\"</span>\n                                              <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-success\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"font-weight-bold\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Hi there! I am wondering if you can help me with a\n                                              problem I've been having.<span class=\"nt\">&lt;/div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Emily Fowler · 58m<span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_2.svg\"</span>\n                                              <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>I have the photos that you ordered last month, how\n                                              would you like them sent to you?<span class=\"nt\">&lt;/div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Jae Chun · 1d<span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile_3.svg\"</span>\n                                              <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-warning\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Last month's report looks great, I am very happy with\n                                              the progress so far, keep up the good work!<span class=\"nt\">&lt;/div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Morgan Alvarez · 2d<span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item d-flex align-items-center\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-list-image mr-3\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"rounded-circle\"</span> <span class=\"na\">src=</span><span class=\"s\">\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\"</span>\n                                              <span class=\"na\">alt=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"status-indicator bg-success\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-truncate\"</span><span class=\"nt\">&gt;</span>Am I a good boy? The reason I ask is because someone\n                                              told me that people say this to all dogs, even if they aren't good...<span class=\"nt\">&lt;/div&gt;</span>\n                                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"small text-gray-500\"</span><span class=\"nt\">&gt;</span>Chicken the Dog · 2w<span class=\"nt\">&lt;/div&gt;</span>\n                                      <span class=\"nt\">&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item text-center small text-gray-500\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>Read More Messages<span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"nt\">&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;/li&gt;</span>\n\n                          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"topbar-divider d-none d-sm-block\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n\n                          <span class=\"c\">&lt;!-- Nav Item - User Information --&gt;</span>\n                          <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-item dropdown no-arrow\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"nav-link dropdown-toggle\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">id=</span><span class=\"s\">\"userDropdown\"</span> <span class=\"na\">role=</span><span class=\"s\">\"button\"</span>\n                                  <span class=\"na\">data-toggle=</span><span class=\"s\">\"dropdown\"</span> <span class=\"na\">aria-haspopup=</span><span class=\"s\">\"true\"</span> <span class=\"na\">aria-expanded=</span><span class=\"s\">\"false\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;span</span> <span class=\"na\">class=</span><span class=\"s\">\"mr-2 d-none d-lg-inline text-gray-600 small\"</span><span class=\"nt\">&gt;</span>Douglas McGee<span class=\"nt\">&lt;/span&gt;</span>\n                                  <span class=\"nt\">&lt;img</span> <span class=\"na\">class=</span><span class=\"s\">\"img-profile rounded-circle\"</span>\n                                      <span class=\"na\">src=</span><span class=\"s\">\"/resources/img/undraw_profile.svg\"</span><span class=\"nt\">&gt;</span>\n                              <span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"c\">&lt;!-- Dropdown - User Information --&gt;</span>\n                              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"</span>\n                                  <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"userDropdown\"</span><span class=\"nt\">&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                      Profile\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                      Settings\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                      Activity Log\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                                  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-divider\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"dropdown-item\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#\"</span> <span class=\"na\">data-toggle=</span><span class=\"s\">\"modal\"</span> <span class=\"na\">data-target=</span><span class=\"s\">\"#logoutModal\"</span><span class=\"nt\">&gt;</span>\n                                      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n                                      Logout\n                                  <span class=\"nt\">&lt;/a&gt;</span>\n                              <span class=\"nt\">&lt;/div&gt;</span>\n                          <span class=\"nt\">&lt;/li&gt;</span>\n\n                      <span class=\"nt\">&lt;/ul&gt;</span>\n\n                  <span class=\"nt\">&lt;/nav&gt;</span>\n                  <span class=\"c\">&lt;!-- End of Topbar --&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>footer.jsp</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"sticky-footer bg-white\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container my-auto\"</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"copyright text-center my-auto\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;span&gt;</span>Copyright <span class=\"ni\">&amp;copy;</span> Your Website 2020<span class=\"nt\">&lt;/span&gt;</span>\n         <span class=\"nt\">&lt;/div&gt;</span>\n     <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;/footer&gt;</span>\n  \n  <span class=\"c\">&lt;!-- Scroll to Top Button--&gt;</span>\n  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"scroll-to-top rounded\"</span> <span class=\"na\">href=</span><span class=\"s\">\"#page-top\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fas fa-angle-up\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>\n  <span class=\"nt\">&lt;/a&gt;</span>\n\n  <span class=\"c\">&lt;!-- Logout Modal--&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal fade\"</span> <span class=\"na\">id=</span><span class=\"s\">\"logoutModal\"</span> <span class=\"na\">tabindex=</span><span class=\"s\">\"-1\"</span> <span class=\"na\">role=</span><span class=\"s\">\"dialog\"</span> <span class=\"na\">aria-labelledby=</span><span class=\"s\">\"exampleModalLabel\"</span>\n      <span class=\"na\">aria-hidden=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-dialog\"</span> <span class=\"na\">role=</span><span class=\"s\">\"document\"</span><span class=\"nt\">&gt;</span>\n          <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-content\"</span><span class=\"nt\">&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-header\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;h5</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-title\"</span> <span class=\"na\">id=</span><span class=\"s\">\"exampleModalLabel\"</span><span class=\"nt\">&gt;</span>Ready to Leave?<span class=\"nt\">&lt;/h5&gt;</span>\n                  <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"close\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">\"modal\"</span> <span class=\"na\">aria-label=</span><span class=\"s\">\"Close\"</span><span class=\"nt\">&gt;</span>\n                      <span class=\"nt\">&lt;span</span> <span class=\"na\">aria-hidden=</span><span class=\"s\">\"true\"</span><span class=\"nt\">&gt;</span>×<span class=\"nt\">&lt;/span&gt;</span>\n                  <span class=\"nt\">&lt;/button&gt;</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-body\"</span><span class=\"nt\">&gt;</span>Select \"Logout\" below if you are ready to end your current session.<span class=\"nt\">&lt;/div&gt;</span>\n              <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-footer\"</span><span class=\"nt\">&gt;</span>\n                  <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-secondary\"</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">\"modal\"</span><span class=\"nt\">&gt;</span>Cancel<span class=\"nt\">&lt;/button&gt;</span>\n                  <span class=\"nt\">&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">href=</span><span class=\"s\">\"login.html\"</span><span class=\"nt\">&gt;</span>Logout<span class=\"nt\">&lt;/a&gt;</span>\n              <span class=\"nt\">&lt;/div&gt;</span>\n          <span class=\"nt\">&lt;/div&gt;</span>\n      <span class=\"nt\">&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;/div&gt;</span>\n  <span class=\"c\">&lt;!-- Bootstrap core JavaScript--&gt;</span>\n  <span class=\"c\">&lt;!--     &lt;script src=\"/resources/vendor/jquery/jquery.min.js\"&gt;&lt;/script&gt; --&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/bootstrap/js/bootstrap.bundle.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"c\">&lt;!-- Core plugin JavaScript--&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/jquery-easing/jquery.easing.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"c\">&lt;!-- Custom scripts for all pages--&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/js/sb-admin-2.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"c\">&lt;!-- Page level plugins --&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/datatables/jquery.dataTables.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/datatables/dataTables.bootstrap4.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"c\">&lt;!-- Page level custom scripts --&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/js/demo/datatables-demo.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n  <span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div> </div>\n </li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. jQuery 라이브러리 변경</font></strong></p>\n<ol>\n <li>footer.jsp 에 선언된 jquery.min.js 부분을 삭제하고 header.jsp 부분에 jquery.min.js 의 CDN 을 추가한다.</li>\n</ol>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;script\n\t\t  </span><span class=\"na\">src=</span><span class=\"s\">\"https://code.jquery.com/jquery-3.5.1.min.js\"</span>\n\t\t  <span class=\"na\">integrity=</span><span class=\"s\">\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\"</span>\n\t\t  <span class=\"na\">crossorigin=</span><span class=\"s\">\"anonymous\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-목록화면-처리\"><font color=\"blue\">2. 목록화면 처리</font></h2>\n<ol>\n <li>\n <p>list.jsp 에 <code class=\"language-plaintext highlighter-rouge\">태그 라이브러리</code> 추가</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/fmt\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"fmt\"</span> <span class=\"nt\">%&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>controller 에서 전해준 Model에 담긴 데이터를 list.jsp에 출력</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/fmt\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"fmt\"</span> <span class=\"nt\">%&gt;</span>\n\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/header.jsp\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"c\">&lt;!-- Begin Page Content --&gt;</span>\n <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container-fluid\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"c\">&lt;!-- Page Heading --&gt;</span>\n     <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"h3 mb-2 text-gray-800\"</span><span class=\"nt\">&gt;</span>Tables<span class=\"nt\">&lt;/h1&gt;</span>\n     <span class=\"nt\">&lt;p</span> <span class=\"na\">class=</span><span class=\"s\">\"mb-4\"</span><span class=\"nt\">&gt;</span>DataTables is a third party plugin that is used to generate the demo table below.\n         For more information about DataTables, please visit the <span class=\"nt\">&lt;a</span> <span class=\"na\">target=</span><span class=\"s\">\"_blank\"</span>\n             <span class=\"na\">href=</span><span class=\"s\">\"https://datatables.net\"</span><span class=\"nt\">&gt;</span>official DataTables documentation<span class=\"nt\">&lt;/a&gt;</span>.<span class=\"nt\">&lt;/p&gt;</span>\n\n         <span class=\"c\">&lt;!-- DataTales Example --&gt;</span>\n         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card shadow mb-4\"</span><span class=\"nt\">&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header py-3\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"m-0 font-weight-bold text-primary\"</span><span class=\"nt\">&gt;</span>DataTables Example<span class=\"nt\">&lt;/h6&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-body\"</span><span class=\"nt\">&gt;</span>\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"table-responsive\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;table</span> <span class=\"na\">class=</span><span class=\"s\">\"table table-bordered\"</span> <span class=\"na\">id=</span><span class=\"s\">\"dataTable\"</span> <span class=\"na\">width=</span><span class=\"s\">\"100%\"</span> <span class=\"na\">cellspacing=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;thead&gt;</span>\n                             <span class=\"nt\">&lt;tr&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>#번호<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>제목<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>작성자<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>작성일<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>수정일<span class=\"nt\">&lt;/th&gt;</span>\n                             <span class=\"nt\">&lt;/tr&gt;</span>\n                         <span class=\"nt\">&lt;/thead&gt;</span>\n                         <span class=\"nt\">&lt;tfoot&gt;</span>\n                             <span class=\"nt\">&lt;tr&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>#번호<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>제목<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>작성자<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>작성일<span class=\"nt\">&lt;/th&gt;</span>\n                                 <span class=\"nt\">&lt;th&gt;</span>수정일<span class=\"nt\">&lt;/th&gt;</span>\n                             <span class=\"nt\">&lt;/tr&gt;</span>\n                         <span class=\"nt\">&lt;/tfoot&gt;</span>\n                         <span class=\"nt\">&lt;tbody&gt;</span>\n                         <span class=\"nt\">&lt;c:forEach </span><span class=\"na\">items=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">list</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> var=</span><span class=\"s\">\"board\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;tr&gt;</span>\n                                 <span class=\"nt\">&lt;td&gt;</span>${board.bno}<span class=\"nt\">&lt;/td&gt;</span>\n                                 <span class=\"nt\">&lt;td&gt;</span>${board.title}<span class=\"nt\">&lt;/td&gt;</span>\n                                 <span class=\"nt\">&lt;td&gt;</span>${board.writer}<span class=\"nt\">&lt;/td&gt;</span>\n                                 <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">regdate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy-mm-dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n                                 <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">updateDate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy-mm-dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n                             <span class=\"nt\">&lt;/tr&gt;</span>\n                         <span class=\"nt\">&lt;/c:forEach&gt;</span>\n                         <span class=\"nt\">&lt;/tbody&gt;</span>\n                     <span class=\"nt\">&lt;/table&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n         <span class=\"nt\">&lt;/div&gt;</span>\n\n     <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/footer.jsp\"</span> <span class=\"nt\">%&gt;</span>   \n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"3-등록-입력-페이지-처리\"><font color=\"blue\">3. 등록 입력 페이지 처리</font></h2>\n<ol>\n <li>\n <p>BoardController에 get 방식의 register() 를 만든다. (입력화면을 보여주기)</p>\n\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/register\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">register</span><span class=\"o\">()</span> <span class=\"o\">{</span>\t\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>\n <p>register.jsp 파일을 작성한다.</p>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/fmt\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"fmt\"</span> <span class=\"nt\">%&gt;</span>\n\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/header.jsp\"</span> <span class=\"nt\">%&gt;</span>\n                    \n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"page-header\"</span><span class=\"nt\">&gt;</span>Board Register<span class=\"nt\">&lt;/h1&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel panel-default\"</span><span class=\"nt\">&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel-heading\"</span><span class=\"nt\">&gt;</span>Board Register<span class=\"nt\">&lt;/div&gt;</span>\n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel-body\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;form</span> <span class=\"na\">role=</span><span class=\"s\">\"form\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/board/register\"</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Title<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"title\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Text area<span class=\"nt\">&lt;/label&gt;&lt;textarea</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">rows=</span><span class=\"s\">\"3\"</span> <span class=\"na\">name=</span><span class=\"s\">\"content\"</span><span class=\"nt\">&gt;&lt;/textarea&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"writer\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-default\"</span><span class=\"nt\">&gt;</span>Submit Button<span class=\"nt\">&lt;/button&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">\"reset\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-default\"</span><span class=\"nt\">&gt;</span>Reset Button<span class=\"nt\">&lt;/button&gt;</span>\n                             <span class=\"nt\">&lt;/form&gt;</span> \n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n                    \n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/footer.jsp\"</span> <span class=\"nt\">%&gt;</span>   \n</code></pre>  </div> </div>\n </li>\n <li>탐캣을 Start 한 후, 웹 브라우저에서 <code class=\"language-plaintext highlighter-rouge\">http://localhost:8080/board/register</code> 로 접속하여 게시글을 등록해 본다.</li>\n <li>정상적으로 등록되고 목록 화면으로 이동한다. 반드시 목록화면으로 이동해야 한다. 그렇지 않으면 새로고침 시, 계속적으로 같은 게시물이 도배되게 된다.</li>\n <li>한글이 깨지는 문제가 발생한다면, webConfig.java 또는 web.xml 에 encoding 필터를 추가한다.</li>\n <li>게시글 등록 후, list.jsp 화면으로 ‘result’ 파라미터를 전달하는데 이 결과를 이용하여 입력결과를 모달로 보여준다.\n <ul>\n <li>list.jsp</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"c\">&lt;!-- table 태그가 끝난 후, 아래 태그를 삽입한다. --&gt;</span>\n <span class=\"c\">&lt;!-- The Modal --&gt;</span>\n <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal\"</span> <span class=\"na\">id=</span><span class=\"s\">\"myModal\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-dialog\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-content\"</span><span class=\"nt\">&gt;</span>\n \n     <span class=\"c\">&lt;!-- Modal body --&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-body\"</span><span class=\"nt\">&gt;</span>           \n     <span class=\"nt\">&lt;/div&gt;</span>\n     <span class=\"c\">&lt;!-- Modal footer --&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"modal-footer\"</span><span class=\"nt\">&gt;</span>\n         <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-default\"</span> <span class=\"na\">data-dismiss=</span><span class=\"s\">\"modal\"</span><span class=\"nt\">&gt;</span>Close<span class=\"nt\">&lt;/button&gt;</span>\n     <span class=\"nt\">&lt;/div&gt;</span>\n        \n     <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"c\">&lt;!-- End Modal --&gt;</span>\n <span class=\"c\">&lt;!-- 파일 끝에 자바스크립트로 모달 기능을 추가한다. --&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n \t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n \t\t<span class=\"kd\">var</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"nt\">&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">result</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n \t\t<span class=\"nx\">checkModel</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n     <span class=\"kd\">function</span> <span class=\"nx\">checkModel</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n         <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n             <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#myModal .modal-body</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">게시글 1건이 등록되었습니다.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n             <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#myModal</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">();</span>\n \t\t    <span class=\"p\">}</span>\n     <span class=\"p\">}</span>\n \t<span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>list.jsp 의 테이블 위에 ‘등록’ 버튼을 추가한다.\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header py-3\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;h6</span> <span class=\"na\">class=</span><span class=\"s\">\"m-0 font-weight-bold text-primary\"</span><span class=\"nt\">&gt;</span>Board Table<span class=\"nt\">&lt;/h6&gt;</span>\n     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container-fluid border mt-3 pr-3 d-flex justify-content-between\"</span><span class=\"nt\">&gt;</span>Board List Page\n         <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'regBtn'</span> <span class=\"na\">type=</span><span class=\"s\">\"button\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary btn-sm \"</span><span class=\"nt\">&gt;</span>Register New Board<span class=\"nt\">&lt;/button&gt;</span> \n     <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"c\">&lt;!-- javascript에 추가 --&gt;</span>\n $(\"#regBtn\").on(\"click\", function(){\n     self.location = \"/board/register\";\n });\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"4-조회-페이지-처리\"><font color=\"blue\">4. 조회 페이지 처리</font></h2>\n<ol>\n <li>list.jsp에서 bno input 요소에 <code class=\"language-plaintext highlighter-rouge\">/board/get?bno=2</code> 식의 onclick 이벤트를 추가 한다.\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;tbody&gt;</span>\n     <span class=\"nt\">&lt;c:forEach </span><span class=\"na\">items=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">list</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> var=</span><span class=\"s\">\"board\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;tr&gt;</span>\n         <span class=\"nt\">&lt;td&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/board/get?bno=${board.bno}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.bno}\"</span><span class=\"nt\">&gt;</span>${board.bno}<span class=\"nt\">&lt;/a&gt;&lt;/td&gt;</span>\n         <span class=\"nt\">&lt;td&gt;</span>${board.title}<span class=\"nt\">&lt;/td&gt;</span>\n         <span class=\"nt\">&lt;td&gt;</span>${board.writer}<span class=\"nt\">&lt;/td&gt;</span>\n         <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">regdate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy-mm-dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n         <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">updateDate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy-mm-dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n     <span class=\"nt\">&lt;/tr&gt;</span>\n     <span class=\"nt\">&lt;/c:forEach&gt;</span>\n <span class=\"nt\">&lt;/tbody&gt;</span>\n</code></pre>  </div> </div>\n </li>\n <li>register.jsp 를 복사해 수정해서, get.jsp 페이지를 작성한다.(read-only 처리, 버튼 추가)\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/fmt\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"fmt\"</span> <span class=\"nt\">%&gt;</span>\n\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/header.jsp\"</span> <span class=\"nt\">%&gt;</span>\n                    \n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"page-header\"</span><span class=\"nt\">&gt;</span>Board Read Page<span class=\"nt\">&lt;/h1&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel panel-default\"</span><span class=\"nt\">&gt;</span>\n                \n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel-body\"</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>#Bno<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"bno\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.bno}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Title<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"title\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.title}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Text area<span class=\"nt\">&lt;/label&gt;&lt;textarea</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">rows=</span><span class=\"s\">\"3\"</span> <span class=\"na\">name=</span><span class=\"s\">\"content\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span><span class=\"nt\">&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">content</span><span class=\"si\">}</span><span class=\"s\">\"</span> <span class=\"nt\">/&gt;&lt;/textarea&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"writer\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.writer}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'modify'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'list'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-info\"</span><span class=\"nt\">&gt;</span>List<span class=\"nt\">&lt;/button&gt;</span>\n                                 <span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">'/board/modify'</span> <span class=\"na\">method=</span><span class=\"s\">'get'</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'bno'</span> <span class=\"na\">value=</span><span class=\"s\">'${board.bno}'</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/form&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">'text/javascript'</span><span class=\"nt\">&gt;</span>\n     <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n            \n         <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n             <span class=\"kd\">const</span> <span class=\"nx\">oper</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">oper</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n             <span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n             <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">oper</span><span class=\"p\">);</span>\n             <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">oper</span> <span class=\"o\">==</span> <span class=\"dl\">'</span><span class=\"s1\">list</span><span class=\"dl\">'</span><span class=\"p\">){</span>\n                 <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/list</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n                 <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">remove</span><span class=\"p\">();</span>\n             <span class=\"p\">}</span>\n             <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n         <span class=\"p\">})</span>\n     <span class=\"p\">})</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/footer.jsp\"</span> <span class=\"nt\">%&gt;</span>   \n</code></pre>  </div> </div>\n </li>\n <li>등록 -&gt; 목록 -&gt; 조회 -&gt; ‘뒤로가기’ 시, 목록 페이지에 모달창 보이는 문제 해결하기\n <ul>\n <li>등록 후 목록으로 이동 시 모달창이 발생하고 나면, history 를 초기화 한다.</li>\n <li>모달 창을 띄울 때, history가 있을 경우만 모달창이 뜨도록 체크하는 로직을 넣는다.(result 값이 없거나, history가 없으면 모달창은 뜨지 않아야 한다.)</li>\n <li>list.jsp 자바스크립트 수정</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n         <span class=\"kd\">var</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"nt\">&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">result</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n         <span class=\"nx\">checkModel</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n         <span class=\"nx\">history</span><span class=\"p\">.</span><span class=\"nx\">replaceState</span><span class=\"p\">({},</span> <span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"kc\">null</span><span class=\"p\">);</span>\n            \n         <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#regBtn</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">click</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n             <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nx\">location</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">/board/register</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n         <span class=\"p\">});</span>\n            \n         <span class=\"kd\">function</span> <span class=\"nx\">checkModel</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\n             <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">result</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"nx\">history</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">){</span>\n                 <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#myModal .modal-body</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">html</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">게시글 1건이 등록되었습니다.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n                 <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#myModal</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">();</span>\n             <span class=\"p\">}</span>\n         <span class=\"p\">}</span>\n     <span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div> </div>\n </li>\n</ol>\n\n<h2 id=\"5-게시글-수정삭제-처리\"><font color=\"blue\">5. 게시글 수정/삭제 처리</font></h2>\n<ol>\n <li>수정화면을 불러오는 controller 를 작성한다. (BoardController.java)\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"kt\">long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n     <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"board\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">));</span>\n <span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li>get.jsp 페이지를 복사해와 modify.jsp 페이지를 작성한다.\n <ul>\n <li>수정가능한 title, content 필드는 readOnly 속성을 삭제한다.</li>\n <li>날짜 관련 포맷은 ‘yyyy/mm/dd’ 로 통일한다.</li>\n <li>수정, 삭제, 목록 버튼을 추가하고 버튼 기능에 맞게 페이지 이동하도록 로직을 추가한다.</li>\n <li>modify.jsp</li>\n </ul>\n\n <div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\"> pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n <span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/fmt\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"fmt\"</span> <span class=\"nt\">%&gt;</span>\n\n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/header.jsp\"</span> <span class=\"nt\">%&gt;</span>\n                    \n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"page-header\"</span><span class=\"nt\">&gt;</span>Board Read Page<span class=\"nt\">&lt;/h1&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n\n                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12\"</span><span class=\"nt\">&gt;</span>\n                     <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel panel-default\"</span><span class=\"nt\">&gt;</span>\n                \n                         <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel-body\"</span><span class=\"nt\">&gt;</span>\n                             <span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">'/board/modify'</span> <span class=\"na\">method=</span><span class=\"s\">'post'</span><span class=\"nt\">&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>#Bno<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"bno\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.bno}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Title<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"title\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.title}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Text area<span class=\"nt\">&lt;/label&gt;&lt;textarea</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">rows=</span><span class=\"s\">\"3\"</span> <span class=\"na\">name=</span><span class=\"s\">\"content\"</span><span class=\"nt\">&gt;&lt;c:out </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">content</span><span class=\"si\">}</span><span class=\"s\">\"</span> <span class=\"nt\">/&gt;&lt;/textarea&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"writer\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.writer}\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"regdate\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"nt\">&lt;fmt:formatDate </span><span class=\"na\">pattern = </span><span class=\"s\">'yyyy/mm/dd'</span><span class=\"na\"> value=</span><span class=\"s\">'</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">regdate</span><span class=\"si\">}</span><span class=\"s\">'</span><span class=\"nt\">/&gt;</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                     <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"updateDate\"</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span> <span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"nt\">&lt;fmt:formatDate </span><span class=\"na\">pattern = </span><span class=\"s\">'yyyy/mm/dd'</span><span class=\"na\"> value=</span><span class=\"s\">'</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">updateDate</span><span class=\"si\">}</span><span class=\"s\">'</span><span class=\"nt\">/&gt;</span><span class=\"s\">\"</span><span class=\"nt\">/&gt;</span>\n                                 <span class=\"nt\">&lt;/div&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'modify'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-info\"</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'remove'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-danger\"</span><span class=\"nt\">&gt;</span>Remove<span class=\"nt\">&lt;/button&gt;</span>\n                                 <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'list'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span> <span class=\"na\">onclick=</span><span class=\"s\">\"location.href='/board/list'\"</span><span class=\"nt\">&gt;</span>List<span class=\"nt\">&lt;/button&gt;</span>\n                             <span class=\"nt\">&lt;/form&gt;</span>\n                         <span class=\"nt\">&lt;/div&gt;</span>\n                     <span class=\"nt\">&lt;/div&gt;</span>\n                 <span class=\"nt\">&lt;/div&gt;</span>\n             <span class=\"nt\">&lt;/div&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n     <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n         <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n            \n         <span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n         <span class=\"kd\">const</span> <span class=\"nx\">oper</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">oper</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n            \n         <span class=\"k\">switch</span><span class=\"p\">(</span><span class=\"nx\">oper</span><span class=\"p\">){</span>\n         <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">list</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n             <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/list</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n             <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">get</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n             <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n             <span class=\"k\">break</span><span class=\"p\">;</span>\n         <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">remove</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n             <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/remove</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n             <span class=\"k\">break</span><span class=\"p\">;</span>\n         <span class=\"p\">}</span>\n         <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n     <span class=\"p\">})</span>\n <span class=\"p\">});</span> \n <span class=\"nt\">&lt;%@include </span><span class=\"na\">file=</span><span class=\"s\">\"../includes/footer.jsp\"</span> <span class=\"nt\">%&gt;</span>   \n</code></pre>  </div> </div>\n </li>\n</ol>\n","dir":"/spring5/3_webDev/","name":"7_ui.md","path":"spring5/3_webDev/7_ui.md","url":"/spring5/3_webDev/7_ui.html"},{"sort":8,"layout":"default","title":"기존 프로젝트에 시큐리티 접목","content":"<h1 id=\"기존-프로젝트에-시큐리티-접목\">기존 프로젝트에 시큐리티 접목</h1>\n\n<h2 id=\"로그인-페이지-처리\"><font color=\"blue\">로그인 페이지 처리</font></h2>\n\n<p><strong>체크리스트</strong></p>\n<ul>\n <li>JSTL/시큐리티 태그 사용하도록 선언</li>\n <li>CSS/JS 파일의 링크를 <code class=\"language-plaintext highlighter-rouge\">절대경로</code>로 설정 (/resources/css/….)</li>\n <li>\n <form> 태그내의 input 태그의 name 속성을 스프링 시큐리티에 맞게 수정\n</form>\n </li>\n <li>CSRF 토큰 항목 추가</li>\n <li>JavaScript 통한 로그인 처리</li>\n</ul>\n\n<p><strong>customLogin.jsp</strong></p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ page </span><span class=\"na\">language=</span><span class=\"s\">\"java\"</span><span class=\"na\"> contentType=</span><span class=\"s\">\"text/html; charset=UTF-8\"</span><span class=\"na\">\n    pageEncoding=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://java.sun.com/jsp/jstl/core\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"c\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n<span class=\"nt\">&lt;head&gt;</span>\n\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"IE=edge\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1, shrink-to-fit=no\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"author\"</span> <span class=\"na\">content=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"nt\">&lt;title&gt;</span>Login<span class=\"nt\">&lt;/title&gt;</span>\n\n    <span class=\"c\">&lt;!-- Custom fonts for this template--&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/vendor/fontawesome-free/css/all.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span>\n        <span class=\"na\">href=</span><span class=\"s\">\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"</span>\n        <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"c\">&lt;!-- Custom styles for this template--&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">href=</span><span class=\"s\">\"/resources/css/sb-admin-2.min.css\"</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;/head&gt;</span>\n\n<span class=\"nt\">&lt;body</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-gradient-primary\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"container\"</span><span class=\"nt\">&gt;</span>\n\n        <span class=\"c\">&lt;!-- Outer Row --&gt;</span>\n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"row justify-content-center\"</span><span class=\"nt\">&gt;</span>\n\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-xl-10 col-lg-12 col-md-9\"</span><span class=\"nt\">&gt;</span>\n\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card o-hidden border-0 shadow-lg my-5\"</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-body p-0\"</span><span class=\"nt\">&gt;</span>\n                        <span class=\"c\">&lt;!-- Nested Row within Card Body --&gt;</span>\n                        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"row\"</span><span class=\"nt\">&gt;</span>\n                            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-6 d-none d-lg-block bg-login-image\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n                            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-6\"</span><span class=\"nt\">&gt;</span>\n                                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"p-5\"</span><span class=\"nt\">&gt;</span>\n                                    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"text-center\"</span><span class=\"nt\">&gt;</span>\n                                        <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"h4 text-gray-900 mb-4\"</span><span class=\"nt\">&gt;</span>Welcome Back!<span class=\"nt\">&lt;/h1&gt;</span>\n                                    <span class=\"nt\">&lt;/div&gt;</span>\n                                    <span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"user\"</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/login\"</span><span class=\"nt\">&gt;</span>\n                                        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                            <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control form-control-user\"</span>\n                                                <span class=\"na\">id=</span><span class=\"s\">\"username\"</span> <span class=\"na\">name=</span><span class=\"s\">\"username\"</span> <span class=\"na\">aria-describedby=</span><span class=\"s\">\"emailHelp\"</span>\n                                                <span class=\"na\">placeholder=</span><span class=\"s\">\"Enter username...\"</span><span class=\"nt\">&gt;</span>\n                                        <span class=\"nt\">&lt;/div&gt;</span>\n                                        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                            <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"password\"</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control form-control-user\"</span>\n                                                <span class=\"na\">id=</span><span class=\"s\">\"password\"</span> <span class=\"na\">name=</span><span class=\"s\">\"password\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Password\"</span><span class=\"nt\">&gt;</span>\n                                        <span class=\"nt\">&lt;/div&gt;</span>\n                                        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n                                            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"custom-control custom-checkbox small\"</span><span class=\"nt\">&gt;</span>\n                                                <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"checkbox\"</span> <span class=\"na\">class=</span><span class=\"s\">\"custom-control-input\"</span> <span class=\"na\">id=</span><span class=\"s\">\"customCheck\"</span> <span class=\"na\">name=</span><span class=\"s\">\"remember-me\"</span><span class=\"nt\">&gt;</span>\n                                                <span class=\"nt\">&lt;label</span> <span class=\"na\">class=</span><span class=\"s\">\"custom-control-label\"</span> <span class=\"na\">for=</span><span class=\"s\">\"customCheck\"</span><span class=\"nt\">&gt;</span>Remember\n                                                    Me<span class=\"nt\">&lt;/label&gt;</span>\n                                            <span class=\"nt\">&lt;/div&gt;</span>\n                                        <span class=\"nt\">&lt;/div&gt;</span>\n                                        \n                                   \t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"hidden\"</span> <span class=\"na\">name=</span><span class=\"s\">\"${_csrf.parameterName}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${_csrf.token}\"</span><span class=\"nt\">/&gt;</span>\n                                        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'submit'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary btn-user btn-block\"</span> <span class=\"na\">value=</span><span class=\"s\">\"Login\"</span><span class=\"nt\">&gt;</span>\n                                      \n                                       <span class=\"c\">&lt;!--  &lt;hr&gt;\n                                        &lt;a href=\"index.html\" class=\"btn btn-google btn-user btn-block\"&gt;\n                                            &lt;i class=\"fab fa-google fa-fw\"&gt;&lt;/i&gt; Login with Google\n                                        &lt;/a&gt;\n                                        &lt;a href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\"&gt;\n                                            &lt;i class=\"fab fa-facebook-f fa-fw\"&gt;&lt;/i&gt; Login with Facebook\n                                        &lt;/a&gt; --&gt;</span>\n                                    <span class=\"nt\">&lt;/form&gt;</span>\n                                    <span class=\"nt\">&lt;hr&gt;</span>\n                                    <span class=\"c\">&lt;!-- &lt;div class=\"text-center\"&gt;\n                                        &lt;a class=\"small\" href=\"forgot-password.html\"&gt;Forgot Password?&lt;/a&gt;\n                                    &lt;/div&gt;\n                                    &lt;div class=\"text-center\"&gt;\n                                        &lt;a class=\"small\" href=\"register.html\"&gt;Create an Account!&lt;/a&gt;\n                                    &lt;/div&gt; --&gt;</span>\n                                <span class=\"nt\">&lt;/div&gt;</span>\n                            <span class=\"nt\">&lt;/div&gt;</span>\n                        <span class=\"nt\">&lt;/div&gt;</span>\n                    <span class=\"nt\">&lt;/div&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n\n            <span class=\"nt\">&lt;/div&gt;</span>\n\n        <span class=\"nt\">&lt;/div&gt;</span>\n\n    <span class=\"nt\">&lt;/div&gt;</span>\n\n    <span class=\"c\">&lt;!-- Bootstrap core JavaScript--&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/jquery/jquery.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/bootstrap/js/bootstrap.bundle.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n    <span class=\"c\">&lt;!-- Core plugin JavaScript--&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/vendor/jquery-easing/jquery.easing.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n    <span class=\"c\">&lt;!-- Custom scripts for all pages--&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"/resources/js/sb-admin-2.min.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n<span class=\"nt\">&lt;/body&gt;</span>\n\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"게시판-스프링-시큐리티-처리\"><font color=\"blue\">게시판 스프링 시큐리티 처리</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">스프링 시큐리티 적용시 한글 처리</font></strong></p>\n<blockquote>\n <p>필터의 순서에 따라 한글이 깨지는 경우가 발생한다. <br />\nweb.xml 에서 한글인코딩 필터와 시큐리티 필터의 순서에 주의한다. (인코딩 필터 먼저.)</p>\n</blockquote>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;filter&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>encoding<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-class&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"nt\">&lt;/filter-class&gt;</span>\n\t\t<span class=\"nt\">&lt;init-param&gt;</span>\n\t\t\t<span class=\"nt\">&lt;param-name&gt;</span>encoding<span class=\"nt\">&lt;/param-name&gt;</span>\n\t\t\t<span class=\"nt\">&lt;param-value&gt;</span>UTF-8<span class=\"nt\">&lt;/param-value&gt;</span>\n\t\t<span class=\"nt\">&lt;/init-param&gt;</span>\n\t<span class=\"nt\">&lt;/filter&gt;</span>\n\t\n\t<span class=\"nt\">&lt;filter-mapping&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>encoding<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;servlet-name&gt;</span>appServlet<span class=\"nt\">&lt;/servlet-name&gt;</span>\n\t<span class=\"nt\">&lt;/filter-mapping&gt;</span>\n\n\t<span class=\"nt\">&lt;filter&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>springSecurityFilterChain<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-class&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class=\"nt\">&lt;/filter-class&gt;</span>\n\t<span class=\"nt\">&lt;/filter&gt;</span>\n\t\n\t<span class=\"nt\">&lt;filter-mapping&gt;</span>\n\t\t<span class=\"nt\">&lt;filter-name&gt;</span>springSecurityFilterChain<span class=\"nt\">&lt;/filter-name&gt;</span>\n\t\t<span class=\"nt\">&lt;url-pattern&gt;</span>/*<span class=\"nt\">&lt;/url-pattern&gt;</span>\n\t<span class=\"nt\">&lt;/filter-mapping&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">authentication-success-handler-ref 속성 제거</font></strong></p>\n<ul>\n <li>별도로 authentication-success-handler-ref 를 지정하지 않으면, 로그인 성공 시, 사용자가 요청했던 페이지를 보여준다. 디폴트 처리가 <code class=\"language-plaintext highlighter-rouge\">SavedRequestAwareAuthenticationSuccessHandler</code> 클래스 이용하기 때문이다.</li>\n</ul>\n\n<p><strong>security-context.xml</strong></p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;security:http&gt;</span>\n <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\t<span class=\"c\">&lt;!-- &lt;security:logout logout-url=\"/customLogout\" invalidate-session=\"true\" delete-cookies=\"remember-me, JSESSIONID\" success-handler-ref=\"customLogoutSuccessHandler\"/&gt; --&gt;</span>\n\t<span class=\"nt\">&lt;security:logout</span> <span class=\"na\">logout-url=</span><span class=\"s\">\"/customLogout\"</span> <span class=\"na\">invalidate-session=</span><span class=\"s\">\"true\"</span> <span class=\"na\">delete-cookies=</span><span class=\"s\">\"remember-me, JSESSIONID\"</span> <span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;security:remember-me</span> <span class=\"na\">data-source-ref=</span><span class=\"s\">\"dataSource\"</span> <span class=\"na\">token-validity-seconds=</span><span class=\"s\">\"604800\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;/security:http&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong>SecurityConfig</strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t\t<span class=\"n\">http</span><span class=\"o\">.</span><span class=\"na\">formLogin</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">loginPage</span><span class=\"o\">(</span><span class=\"s\">\"/customLogin\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">loginProcessingUrl</span><span class=\"o\">(</span><span class=\"s\">\"/login\"</span><span class=\"o\">);</span>\n<span class=\"c1\">//\t\t.successHandler(loginSuccessHandler());</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">게시물 작성</font></strong></p>\n\n<p>BoardController 메서드 일부에 시큐리티 어노테이션 추가한다. <br />\n<code class=\"language-plaintext highlighter-rouge\">isAuthenticated()</code> 표현식은 어떤 사용자든 로그인이 성공한 사용자만 기능을 사용할 수 있도록 처리한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Controller</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/board/*\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"nd\">@AllArgsConstructor</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardController</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/register\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">register</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/register\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span> <span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n\t<span class=\"c1\">// 생략</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p>화면에서 게시물 작성 시, 로그인한 사용자의 아이디가 출력되도록 한다.</p>\n<ol>\n <li>시큐리티 태그를 선언한다 (<code class=\"language-plaintext highlighter-rouge\">&lt;%@ taglib uri=\"http://www.springframework.org/security/tags\" prefix=\"sec\" %&gt;</code>).</li>\n <li><code class=\"language-plaintext highlighter-rouge\">&lt;sec:authentication property=\"principal.username\" /&gt;</code> 태그를 사용한다.</li>\n <li>CSRF 토큰을 설정한다 ( <code class=\"language-plaintext highlighter-rouge\">&lt;input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/&gt;</code>)</li>\n</ol>\n\n<p><strong>register.jsp</strong></p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">role=</span><span class=\"s\">\"form\"</span> <span class=\"na\">action=</span><span class=\"s\">\"/board/register\"</span> <span class=\"na\">method=</span><span class=\"s\">\"post\"</span><span class=\"nt\">&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"form-group\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;label&gt;</span>Writer<span class=\"nt\">&lt;/label&gt;&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"writer\"</span> <span class=\"na\">value=</span><span class=\"s\">'</span><span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal.username\" </span><span class=\"nt\">/&gt;</span><span class=\"s\">'</span> <span class=\"na\">readonly=</span><span class=\"s\">\"readonly\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"hidden\"</span> <span class=\"na\">name=</span><span class=\"s\">\"${_csrf.parameterName}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${_csrf.token}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-default\"</span><span class=\"nt\">&gt;</span>Submit Button<span class=\"nt\">&lt;/button&gt;</span>\n    <span class=\"nt\">&lt;button</span> <span class=\"na\">type=</span><span class=\"s\">\"reset\"</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-default\"</span><span class=\"nt\">&gt;</span>Reset Button<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span> \n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">게시물 조회화면</font></strong></p>\n\n<p>게시물 조회 화면에서 게시글 작성자와 로그인한 사용자가 일치 할 때만, 수정/삭제가 가능하도록 처리한다.<br />\n게시물 댓글 추가버튼은, 로그인한 사용자만 이용할 수 있도록 처리한다.</p>\n\n<p><strong>/board/get.jsp</strong></p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\n<span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal\"</span><span class=\"na\"> var=</span><span class=\"s\">\"userInfo\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;sec:authorize  </span><span class=\"na\">access=</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;c:if </span><span class=\"na\">test=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">writer</span> <span class=\"n\">eq</span> <span class=\"n\">userInfo</span><span class=\"o\">.</span><span class=\"na\">username</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'modify'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n    <span class=\"nt\">&lt;/c:if&gt;</span>\n<span class=\"nt\">&lt;/sec:authorize&gt;</span>\n<span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'list'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-info\"</span><span class=\"nt\">&gt;</span>List<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"c\">&lt;!-- 댓글처리 START--&gt;</span>\n        <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"col-lg-12 mt-3\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card\"</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"card-header\"</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;i</span> <span class=\"na\">class=</span><span class=\"s\">\"fa fa-comments fa-fw\"</span><span class=\"nt\">&gt;&lt;/i&gt;</span>Reply\n                    <span class=\"nt\">&lt;sec:authorize </span><span class=\"na\">access=</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">'addReplyBtn'</span> <span class=\"na\">class=</span><span class=\"s\">'btn btn-primary btn-sm float-right'</span><span class=\"nt\">&gt;</span>New Reply<span class=\"nt\">&lt;/button&gt;</span>\n                    <span class=\"nt\">&lt;/sec:authorize&gt;</span>\n                <span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">게시물 수정/삭제</font></strong></p>\n\n<ol>\n <li>로그인한 사용자만 접근 가능하며, 작성자와 로그인 사용자가 같은 경우에만 수정/삭제가 가능해야 한다.</li>\n <li>Url을 조작해서 수정/삭제가 가능하므로 jsp에 CSRF 토큰을 설정하고 Controller 에도 인증을 체크한다.</li>\n</ol>\n\n<p><strong>modify.jsp</strong></p>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;%@ taglib </span><span class=\"na\">uri=</span><span class=\"s\">\"http://www.springframework.org/security/tags\"</span><span class=\"na\"> prefix=</span><span class=\"s\">\"sec\"</span> <span class=\"nt\">%&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"panel-body\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">'/board/modify'</span> <span class=\"na\">method=</span><span class=\"s\">'post'</span><span class=\"nt\">&gt;</span>\n <span class=\"c\">&lt;!-- 생략 --&gt;</span>\n        <span class=\"nt\">&lt;sec:authentication </span><span class=\"na\">property=</span><span class=\"s\">\"principal\"</span><span class=\"na\"> var=</span><span class=\"s\">\"userInfo\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;sec:authorize </span><span class=\"na\">access=</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;c:if </span><span class=\"na\">test=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">userInfo</span><span class=\"o\">.</span><span class=\"na\">username</span> <span class=\"n\">eq</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'modify'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-info\"</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n            <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'remove'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-danger\"</span><span class=\"nt\">&gt;</span>Remove<span class=\"nt\">&lt;/button&gt;</span>\n        <span class=\"nt\">&lt;/c:if&gt;</span>\n        <span class=\"nt\">&lt;/sec:authorize&gt;</span>\n        \n        <span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'list'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span><span class=\"nt\">&gt;</span>List<span class=\"nt\">&lt;/button&gt;</span>\n        \n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.amount}\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'type'</span> <span class=\"na\">value=</span><span class=\"s\">'${criteria.type}'</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'keyword'</span> <span class=\"na\">value=</span><span class=\"s\">'${criteria.keyword}'</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'${_csrf.parameterName}'</span> <span class=\"na\">value=</span><span class=\"s\">'${_csrf.token}'</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"nt\">&lt;/div&gt;</span>\n</code></pre>  </div></div>\n\n<p><strong>BoardController.java</strong> <br />\ndelete()는, writer를 파라미터로 추가하여 @PreAuthorize의 표현식에서 #writer로 사용한다. <br />\nmodify()는, 이미 BoardVO를 파라미터로 받고 있으므로 @PreAuthorize의 표현식에서 #vo.writer로 사용한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.controller</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Controller</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/board/*\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"nd\">@AllArgsConstructor</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardController</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"principal.username == #vo.writer\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span> <span class=\"o\">+</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getListLink</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\n\t\n\t<span class=\"c1\">//삭제는 반드시, post 로만 처리합니다.</span>\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"principal.username == #writer\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/remove\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">,</span> <span class=\"nc\">String</span> <span class=\"n\">writer</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getBno</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span> <span class=\"o\">+</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getListLink</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"게시판-ajax-스프링-시큐리티-처리\"><font color=\"blue\">게시판 Ajax 스프링 시큐리티 처리</font></h2>\n<blockquote>\n <p>Ajax로 Post, put, patch, delete 같은 방식을 데이터 전송하는 경우 반드시 추가적으로 ‘X-CSRF-TOKEN’ 헤더정보를 추가해서 <code class=\"language-plaintext highlighter-rouge\">CSRF</code> 토큰값을 전달해야 한다. <br />\n(1) javascript 파일의 상단에 csrf 헤더이름과 값을 선언하고 Ajax의 <code class=\"language-plaintext highlighter-rouge\">beforeSend</code>를 이용해서 추가적인 헤더를 지정한 후 전송하는 방법(파일첨부시에는 이 방법을 사용한다.) <br />\n(2) jQuery를 이용해서 CSRF TOKEN을 보내는 것을 기본으로 지정해서 사용하는 방법 ( 보통의 CRUD에는 이 방법이 더 편하다.)</p>\n</blockquote>\n\n<p><strong>예제 (1)</strong></p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">csrfHeaderName</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">${_csrf.headerName}</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">csrfTokenValue</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">${_csrf.token}</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n    <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/upload</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">processData</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"na\">contentType</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"na\">beforeSend</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"nx\">csrfHeaderName</span><span class=\"p\">,</span> <span class=\"nx\">csrfTokenValue</span><span class=\"p\">);</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"nx\">formData</span><span class=\"p\">,</span>\n    <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">post</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">dytaType</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">json</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">success</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n</code></pre>  </div></div>\n\n<p><strong>예제 (2)</strong></p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ajaxSend</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">xhr</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">){</span>\n    <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"nx\">csrfHeaderName</span><span class=\"p\">,</span> <span class=\"nx\">csrfTokenValue</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n<span class=\"c1\">// 생략, CSRF를 위한 별도의 처리를 하지 않아도 됨. </span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">첨부파일 수정/삭제</font></strong></p>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">댓글등록</font></strong></p>\n\n<p><strong>get.jsp</strong></p>\n\n<p>$(document).ready() 안에 아래와 같이 csrf 설정을 한다. <br />\n시큐리티 태그로 로그인 사용자를 댓글등록 폼에 입력한다.</p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">var</span> <span class=\"nx\">csrfHeaderName</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.headerName}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">csrfTokenValue</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.token}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n    \n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ajaxSend</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">xhr</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">){</span>\n    <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"nx\">csrfHeaderName</span><span class=\"p\">,</span> <span class=\"nx\">csrfTokenValue</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n <span class=\"kd\">var</span> <span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n\t \n\t <span class=\"o\">&lt;</span><span class=\"nx\">sec</span><span class=\"p\">:</span><span class=\"nx\">authorize</span> <span class=\"nx\">access</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">isAuthenticated()</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n\t \t<span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;sec:authentication property=\"principal.username\"/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t <span class=\"o\">&lt;</span><span class=\"sr\">/sec:authorize</span><span class=\"err\">&gt;\n</span>\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#addReplyBtn</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"dl\">''</span><span class=\"p\">);</span>\n\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"replyer\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">replyer</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">readonly</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"nx\">modalInputReplyDate</span><span class=\"p\">.</span><span class=\"nx\">closest</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">div</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button[id != \"modalCloseBtn\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n\t\t \n\t\t <span class=\"nx\">modalRegisterBtn</span><span class=\"p\">.</span><span class=\"nx\">show</span><span class=\"p\">();</span>\n\t\t \n\t\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#replyModal</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">show</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t <span class=\"p\">})</span>\n</code></pre>  </div></div>\n\n<p><strong>ReplyController.java</strong></p>\n\n<p>로그인한 사용자만 댓글을 달 수 있도록, <code class=\"language-plaintext highlighter-rouge\">@PreAuthorize(\"isAuthenticated()\")</code> 을 추가한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RestController</span>\n<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span><span class=\"s\">\"/reply\"</span><span class=\"o\">)</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">ReplyCotroller</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">ReplyService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\t\n\t\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s\">\"/new\"</span><span class=\"o\">,</span> \n\t\t\t\t<span class=\"n\">consumes</span> <span class=\"o\">=</span> <span class=\"s\">\"application/json\"</span> <span class=\"o\">,</span>\n\t\t\t\t<span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span>\n\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"isAuthenticated()\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">register</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">){</span>\n\t\t\n\t\t<span class=\"k\">return</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">댓글삭제</font></strong></p>\n\n<p>로그인한 사용자가 자신이 등록한 댓글만 삭제가 가능하도록 해야한다. <br />\nController로 댓글번호외에 추가적으로, 작성자 정보도 전송해서 Controller 에서도 작성자 확인 작업을 해야 한다.</p>\n\n<p><strong>get.jsp</strong></p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n    <span class=\"c1\">// 생략</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">csrfHeaderName</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.headerName}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t<span class=\"kd\">var</span> <span class=\"nx\">csrfTokenValue</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.token}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t  \n\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ajaxSend</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">xhr</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"nx\">csrfHeaderName</span><span class=\"p\">,</span> <span class=\"nx\">csrfTokenValue</span><span class=\"p\">);</span>\n\t<span class=\"p\">});</span>\n    <span class=\"c1\">// 생략</span>\n     <span class=\"kd\">var</span> <span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n\t \n\t <span class=\"o\">&lt;</span><span class=\"nx\">sec</span><span class=\"p\">:</span><span class=\"nx\">authorize</span> <span class=\"nx\">access</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">isAuthenticated()</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n\t \t<span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;sec:authentication property=\"principal.username\"/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t <span class=\"o\">&lt;</span><span class=\"sr\">/sec:authorize</span><span class=\"err\">&gt;\n</span>    <span class=\"c1\">//  생략</span>\n     <span class=\"nx\">modalRemoveBtn</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t \n\t\t <span class=\"c1\">//로그인 안한 상태 </span>\n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">replyer</span><span class=\"p\">){</span>\n\t\t\t<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">로그인 후 삭제가 가능합니다.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t\t\t<span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">}</span>\n\t\t\n\t\t <span class=\"c1\">//로그인한 사람과 작성자가 다른 상태 </span>\n\t\t <span class=\"kd\">var</span> <span class=\"nx\">originalReplyer</span> <span class=\"o\">=</span> <span class=\"nx\">modalInputReplyer</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">replyer</span> <span class=\"o\">!=</span> <span class=\"nx\">originalReplyer</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">자신이 작성한 댓글만 삭제가 가능합니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t \n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">remove</span><span class=\"p\">(</span><span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">),</span> <span class=\"nx\">originalReplyer</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\t\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"o\">===</span><span class=\"dl\">'</span><span class=\"s1\">success</span><span class=\"dl\">'</span><span class=\"p\">)</span><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글이 삭제되었습니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">})</span>\n\t <span class=\"p\">})</span>\n\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p><strong>reply.js</strong></p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">//댓글삭제</span>\n\t<span class=\"kd\">function</span> <span class=\"nx\">remove</span><span class=\"p\">(</span><span class=\"nx\">rno</span><span class=\"p\">,</span> <span class=\"nx\">replyer</span><span class=\"p\">,</span> <span class=\"nx\">callback</span><span class=\"p\">,</span> <span class=\"nx\">error</span><span class=\"p\">){</span>\n\t\n\t\t<span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n\t\t\t<span class=\"na\">url</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/reply/</span><span class=\"dl\">'</span><span class=\"o\">+</span> <span class=\"nx\">rno</span><span class=\"p\">,</span>\n\t \t\t<span class=\"na\">type</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">delete</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\t \t\t<span class=\"na\">data</span> <span class=\"p\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">({</span><span class=\"na\">rno</span><span class=\"p\">:</span><span class=\"nx\">rno</span><span class=\"p\">,</span> <span class=\"na\">replyer</span><span class=\"p\">:</span><span class=\"nx\">replyer</span><span class=\"p\">}),</span>\n             <span class=\"c1\">// contentType에  json으로 보낼것을 꼭 명시해야 함.</span>\n\t \t\t<span class=\"na\">contentType</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">application/json; charset=utf-8</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n\t\t\t<span class=\"na\">success</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">xhr</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">callback</span><span class=\"p\">)</span> <span class=\"nx\">callback</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">},</span>\n\t\t\t<span class=\"na\">error</span> <span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">,</span><span class=\"nx\">status</span><span class=\"p\">,</span><span class=\"nx\">err</span><span class=\"p\">){</span>\n\t\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t<span class=\"p\">});</span>\n\t<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p><strong>ReplyController.java</strong></p>\n\n<p>로그인한 사람과 작성자가 일치하는지를 체크해야 한다.</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"principal.username == #vo.replyer\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@DeleteMapping</span><span class=\"o\">(</span> <span class=\"n\">value</span> <span class=\"o\">=</span><span class=\"s\">\"/{rno}\"</span><span class=\"o\">,</span>\n\t\t\t\t\t<span class=\"n\">consumes</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">},</span>\n\t\t\t\t\t<span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">remove</span><span class=\"o\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"rno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">){</span>\n\t\t\n\t\t<span class=\"k\">return</span>  <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span> \n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n<p><strong><font color=\"green\" style=\"font-size:large;\">댓글수정</font></strong></p>\n\n<p>로그인한 사용자가 자신이 등록한 댓글만 수정이 가능하도록 해야한다. <br />\nController 에서도 작성자와 로그인한 사용자가 같은지 확인 작업을 해야 한다.</p>\n\n<p><strong>get.jsp</strong></p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n    <span class=\"c1\">// 생략</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">csrfHeaderName</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.headerName}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t<span class=\"kd\">var</span> <span class=\"nx\">csrfTokenValue</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">${_csrf.token}</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t  \n\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ajaxSend</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">,</span> <span class=\"nx\">xhr</span><span class=\"p\">,</span> <span class=\"nx\">options</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"nx\">csrfHeaderName</span><span class=\"p\">,</span> <span class=\"nx\">csrfTokenValue</span><span class=\"p\">);</span>\n\t<span class=\"p\">});</span>\n    <span class=\"c1\">// 생략</span>\n     <span class=\"kd\">var</span> <span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n\t \n\t <span class=\"o\">&lt;</span><span class=\"nx\">sec</span><span class=\"p\">:</span><span class=\"nx\">authorize</span> <span class=\"nx\">access</span><span class=\"o\">=</span><span class=\"dl\">\"</span><span class=\"s2\">isAuthenticated()</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n\t \t<span class=\"nx\">replyer</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">&lt;sec:authentication property=\"principal.username\"/&gt;</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\t <span class=\"o\">&lt;</span><span class=\"sr\">/sec:authorize</span><span class=\"err\">&gt;\n</span>    <span class=\"c1\">//  생략</span>\n\t <span class=\"nx\">modalModBtn</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"c1\">//로그인 안한 상태 </span>\n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">replyer</span><span class=\"p\">){</span>\n\t\t\t<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">로그인 후 삭제가 가능합니다.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t\t\t<span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t<span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t\n\t\t <span class=\"c1\">//로그인한 사람과 작성자가 다른 상태 </span>\n\t\t <span class=\"kd\">var</span> <span class=\"nx\">originalReplyer</span> <span class=\"o\">=</span> <span class=\"nx\">modalInputReplyer</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">replyer</span> <span class=\"o\">!=</span> <span class=\"nx\">originalReplyer</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">자신이 작성한 댓글만 수정 가능합니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t \n\t\t <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">()){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글을 입력하세요.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">return</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\t\t\t\t <span class=\"na\">rno</span><span class=\"p\">:</span><span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">rno</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n\t\t\t\t <span class=\"na\">reply</span><span class=\"p\">:</span><span class=\"nx\">modalInputReply</span><span class=\"p\">.</span><span class=\"nx\">val</span><span class=\"p\">(),</span>\n\t\t\t\t <span class=\"na\">replyer</span><span class=\"p\">:</span><span class=\"nx\">originalReplyer</span><span class=\"p\">};</span>\n\t\t <span class=\"nx\">replyService</span><span class=\"p\">.</span><span class=\"nx\">modify</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">){</span>\n\t\t\t <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">댓글이 수정되었습니다.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">modal</span><span class=\"p\">.</span><span class=\"nx\">modal</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hide</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">showList</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t\t <span class=\"p\">});</span>\n\t <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p><strong>ReplyController.java</strong></p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PreAuthorize</span><span class=\"o\">(</span><span class=\"s\">\"principal.username == #vo.replyer\"</span><span class=\"o\">)</span>\n\t<span class=\"nd\">@RequestMapping</span><span class=\"o\">(</span> <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">PATCH</span><span class=\"o\">,</span> <span class=\"nc\">RequestMethod</span><span class=\"o\">.</span><span class=\"na\">PUT</span><span class=\"o\">},</span>\n\t\t\t\t\t <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">\"/{rno}\"</span><span class=\"o\">,</span>\n\t\t\t\t\t <span class=\"n\">consumes</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">APPLICATION_JSON_VALUE</span><span class=\"o\">},</span>\n\t\t\t\t\t <span class=\"n\">produces</span> <span class=\"o\">=</span> <span class=\"o\">{</span><span class=\"nc\">MediaType</span><span class=\"o\">.</span><span class=\"na\">TEXT_PLAIN_VALUE</span><span class=\"o\">})</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nd\">@PathVariable</span><span class=\"o\">(</span><span class=\"s\">\"rno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">rno</span><span class=\"o\">,</span> <span class=\"nd\">@RequestBody</span> <span class=\"nc\">ReplyVO</span> <span class=\"n\">vo</span><span class=\"o\">){</span>\n\t\t<span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">setRno</span><span class=\"o\">(</span><span class=\"n\">rno</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"s\">\"success\"</span><span class=\"o\">,</span> <span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">OK</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nc\">ResponseEntity</span><span class=\"o\">&lt;&gt;(</span><span class=\"nc\">HttpStatus</span><span class=\"o\">.</span><span class=\"na\">INTERNAL_SERVER_ERROR</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/7_security/","name":"8_applySecurityExistProject.md","path":"spring5/7_security/8_applySecurityExistProject.md","url":"/spring5/7_security/8_applySecurityExistProject.html"},{"sort":8,"layout":"default","title":"클래스","content":"<h1 id=\"클래스\">클래스</h1>\n\n<h2 id=\"클래스-선언\">클래스 선언</h2>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">클래스이름</span><span class=\"p\">:</span>\n    <span class=\"n\">클래스</span> <span class=\"n\">내용</span>\n</code></pre>  </div></div>\n\n<h2 id=\"클래스-객체인스턴스-만들기\">클래스 객체(인스턴스) 만들기</h2>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">인스턴스</span> <span class=\"n\">변수이름</span> <span class=\"o\">=</span> <span class=\"n\">클래스이름</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n\n<h2 id=\"생성자\">생성자</h2>\n<ul>\n <li>클래스 내부에 __init__함수 만들어 처리</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">클래스이름</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">추가</span> <span class=\"n\">매개변수</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</code></pre>  </div></div>\n\n<h2 id=\"메소드\">메소드</h2>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">클래스이름</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">메소드</span> <span class=\"n\">이름</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">추가</span> <span class=\"n\">매개변수</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</code></pre>  </div></div>\n\n<h2 id=\"isinstance인스턴스-클래스\">isinstance(인스턴스, 클래스)</h2>\n<ul>\n <li>어떤 클래스의 인스턴스인지 확인</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n<span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"n\">Student</span><span class=\"p\">()</span>\n<span class=\"c1\"># 인스턴스 확인하기\n</span><span class=\"k\">print</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">student</span><span class=\"p\">,</span> <span class=\"n\">Student</span><span class=\"p\">))</span>\n<span class=\"c1\"># 출력 결과\n</span><span class=\"bp\">True</span>\n</code></pre>  </div></div>\n\n<h2 id=\"특수한-이름의-메소드\">특수한 이름의 메소드</h2>\n<ul>\n <li>클래스를 사용할 때 제공해 주는 보조기능</li>\n</ul>\n\n<h3 id=\"-1--__str__-함수\">[ 1 ] __str__() 함수</h3>\n<ul>\n <li>str() 함수를 호출 할 때, __str__() 함수가 실행됨</li>\n <li>객체를 대표하는 문자열을 리턴함</li>\n</ul>\n\n<h3 id=\"-2--크기비교함수\">[ 2 ] 크기비교함수</h3>\n<ul>\n <li>__eq__(), __ne__(), __gt__(), __ge__(), __lt__(), __le__()</li>\n <li>클래스 구문 내에서 오버라이드 하여 사용할 수 있음</li>\n</ul>\n\n<h2 id=\"클래스-변수와-메소드\">클래스 변수와 메소드</h2>\n\n<h3 id=\"-1--클래스-변수\">[ 1 ] 클래스 변수</h3>\n\n<h4 id=\"1-1-만들기\">1-1. 만들기</h4>\n<ul>\n <li>선언</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">클래스이름</span><span class=\"p\">:</span>\n    <span class=\"n\">변수이름</span> <span class=\"o\">=</span> <span class=\"n\">값</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>호출</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">클래스이름</span><span class=\"p\">.</span><span class=\"n\">변수이름</span>\n</code></pre>  </div></div>\n\n<h4 id=\"1-2-예제\">1-2. 예제</h4>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># 클래스 선언\n</span><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">:</span>\n    <span class=\"c1\"># 클래스 변수 선언\n</span>    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"c1\"># 생성자\n</span>    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">korean</span><span class=\"p\">,</span> <span class=\"n\">math</span><span class=\"p\">,</span> <span class=\"n\">english</span><span class=\"p\">,</span> <span class=\"n\">science</span><span class=\"p\">):</span>\n        <span class=\"c1\"># 인스턴스 변수 초기화\n</span>        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">korean</span> <span class=\"o\">=</span> <span class=\"n\">korean</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">math</span> <span class=\"o\">=</span> <span class=\"n\">math</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">english</span> <span class=\"o\">=</span> <span class=\"n\">english</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">science</span> <span class=\"o\">=</span> <span class=\"n\">science</span>\n        <span class=\"c1\"># 클래스 변수 설정\n</span>        <span class=\"n\">Student</span><span class=\"p\">.</span><span class=\"n\">count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'{}번째 학생이 생성되었습니다.'</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">.</span><span class=\"n\">count</span><span class=\"p\">))</span>\n<span class=\"c1\"># 생략        \n</span></code></pre>  </div></div>\n\n<h3 id=\"-2--클래스-함수\">[ 2 ] 클래스 함수</h3>\n\n<h4 id=\"2-1-클래스-함수-만들기\">2-1. 클래스 함수 만들기</h4>\n<ul>\n <li>선언 : 클래스 함수의 첫번째 매개변수로 특이하게 클래스 자체가 들어오며, 임의의 별칭으로 cls를 사용하였음</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">클래스</span> <span class=\"n\">이름</span><span class=\"p\">:</span>\n    <span class=\"o\">@</span><span class=\"nb\">classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">클래스</span> <span class=\"n\">함수</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">,</span> <span class=\"n\">매개변수</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</code></pre>  </div></div>\n\n<ul>\n <li>호출</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">클래스</span> <span class=\"n\">이름</span><span class=\"p\">.</span><span class=\"n\">함수</span> <span class=\"n\">이름</span><span class=\"p\">(</span><span class=\"n\">매개변수</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<h3 id=\"-3--프라이빗-변수\">[ 3 ] 프라이빗 변수</h3>\n<ul>\n <li>클래스 내에서만 사용하려고 선언하는 변수로, <code class=\"language-plaintext highlighter-rouge\">\\_\\_변수이름</code> 형태로 선언함.</li>\n <li>외부에서 프라이빗 변수에 접근하려고 하면 AttributeError 발생함.</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_circumference</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</code></pre>  </div></div>\n\n<h3 id=\"-4--게터세터\">[ 4 ] 게터/세터</h3>\n\n<h4 id=\"4-1-기본-게터세터\">4-1. 기본 게터/세터</h4>\n<ul>\n <li>프라이빗 변수에 접근하기 위해 간접적으로 접근할 수 있도록 해주는 함수</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_circumference</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"c1\"># 게터\n</span>    <span class=\"k\">def</span> <span class=\"nf\">get_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span>\n    <span class=\"c1\"># 세터\n</span>    <span class=\"k\">def</span> <span class=\"nf\">set_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n</code></pre>  </div></div>\n\n<h4 id=\"4-2-데코레이터를-사용한-게터와-세터\">4-2. 데코레이터를 사용한 게터와 세터</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Circle</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span> <span class=\"o\">=</span> <span class=\"n\">radius</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_circumference</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n    <span class=\"c1\"># 게터\n</span>    <span class=\"o\">@</span><span class=\"nb\">property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span>\n    <span class=\"c1\"># 세터\n</span>    <span class=\"o\">@</span><span class=\"n\">radius</span><span class=\"p\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">__radius</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n</code></pre>  </div></div>\n\n<h2 id=\"-5--상속\">[ 5 ] 상속</h2>\n\n<h3 id=\"5-1-상속\">5-1. 상속</h3>\n<ul>\n <li>다른 누군가 만들어 놓은 기본형태에 내가 원하는 것만 교체하는 것이 ‘상속’.</li>\n</ul>\n\n<h4 id=\"1-상속의-기본형태\">1. 상속의 기본형태</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># 부모\n</span><span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">'테스트'</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'parent의 init()이 호출됨'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'parent의 test()가 호출됨'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 자식\n</span><span class=\"k\">class</span> <span class=\"nc\">Child</span><span class=\"p\">(</span><span class=\"n\">Parent</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">Parent</span><span class=\"p\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'child 클래스의 init()이 호출됨'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 자식 클래스 인스턴스 생성하고 부모의 메소드 호출\n</span><span class=\"n\">child</span> <span class=\"o\">=</span> <span class=\"n\">Child</span><span class=\"p\">()</span>\n<span class=\"n\">child</span><span class=\"p\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">child</span><span class=\"p\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"c1\"># 실행 결과\n</span><span class=\"n\">parent의</span> <span class=\"n\">init</span><span class=\"p\">()</span><span class=\"n\">이</span> <span class=\"n\">호출됨</span>\n<span class=\"n\">child의</span> <span class=\"n\">init</span><span class=\"p\">()</span><span class=\"n\">이</span> <span class=\"n\">호출됨</span>\n<span class=\"n\">parent의</span> <span class=\"n\">test</span><span class=\"p\">()</span><span class=\"n\">가</span> <span class=\"n\">호출됨</span>\n<span class=\"n\">테스트</span>\n</code></pre>  </div></div>\n\n<h4 id=\"2-상속을-활용하여-예외-클래스-생성하기\">2. 상속을 활용하여 예외 클래스 생성하기</h4>\n<ul>\n <li>Exception 클래스를 상속하여 CustomException 클래스를 생성해 보자</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">CustomException</span><span class=\"p\">(</span><span class=\"nb\">Exception</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">Exception</span><span class=\"p\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n<span class=\"c1\"># 생성한 CustomException을 강제 발생 시켜보자\n</span><span class=\"k\">raise</span> <span class=\"n\">CustomException</span>\n<span class=\"c1\"># 실행 결과\n</span><span class=\"n\">Traceback</span><span class=\"p\">...(</span><span class=\"n\">생략</span><span class=\"p\">)</span>\n<span class=\"n\">__Main__</span><span class=\"p\">.</span><span class=\"n\">CustomException</span>\n</code></pre>  </div></div>\n\n<h4 id=\"3-자식-클래스에서-부모의-함수를-오버라이드재정의-해보기\">3. 자식 클래스에서 부모의 함수를 오버라이드(재정의) 해보기</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">CustomException</span><span class=\"p\">(</span><span class=\"nb\">Exception</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">Exception</span><span class=\"p\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'######## 내가 만든 오류가 생성됨 ########'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s\">'오류가 발생했어요'</span>\n<span class=\"k\">raise</span> <span class=\"n\">CustomException</span>\n<span class=\"c1\"># 실행 결과\n######## 내가 만든 오류가 생성됨 ########\n</span><span class=\"n\">Traceback</span><span class=\"p\">....</span>\n<span class=\"p\">(</span><span class=\"n\">생략</span><span class=\"p\">)</span>\n<span class=\"n\">__Main__</span><span class=\"p\">.</span><span class=\"n\">CustomException</span><span class=\"p\">:</span> <span class=\"n\">오류가</span> <span class=\"n\">발생했어요</span>\n</code></pre>  </div></div>\n\n<h4 id=\"4-부모-클래스-확장하기--자식클래스에서-부모에-없는-함수를-정의하기-\">4. 부모 클래스 확장하기 ( 자식클래스에서 부모에 없는 함수를 정의하기 )</h4>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">CustomException</span><span class=\"p\">(</span><span class=\"nb\">Exception</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"nb\">Exception</span><span class=\"p\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">message</span>\n    <span class=\"k\">def</span> <span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'####오류 발견####'</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'메시지:'</span><span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">'값:'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"c1\"># 예외 발생\n</span><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"n\">CustomException</span><span class=\"p\">(</span><span class=\"s\">'테스트'</span><span class=\"p\">,</span> <span class=\"mi\">273</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">CustomException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"n\">e</span><span class=\"p\">.</span><span class=\"k\">print</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n\n<h3 id=\"5-2-다중상속\">5-2. 다중상속</h3>\n<ul>\n <li>다른 누군가가 만들어 놓은 형태들을 조립해서 내가 원하는 것을 만드는 것이 ‘다중상속’</li>\n</ul>\n\n","dir":"/python-grammar/","name":"class.md","path":"python-grammar/class.md","url":"/python-grammar/class.html"},{"sort":8,"permalink":"/spring5/8_intellij_gradle/","layout":"default","title":"Intellij와 gradle을 이용하는 스프링 환경 구축","content":"<h1 id=\"intellij와-gradle을-이용하는-스프링-환경-구축\">Intellij와 gradle을 이용하는 스프링 환경 구축</h1>\n","dir":"/spring5/8_intellij_gradle/","name":"README.md","path":"spring5/8_intellij_gradle/README.md","url":"/spring5/8_intellij_gradle/"},{"sort":8,"permalink":"/python/ApacheWebServerDeploy/","layout":"default","title":"Apache 웹서버 연동하기","content":"<h1 id=\"apache-웹서버-연동하기\">Apache 웹서버 연동하기</h1>\n<ol>\n <li>리눅스 환경 설정</li>\n <li>프로젝트 배포 설정</li>\n <li>mod_wsgi 설치 및 아파치에 mod_wsgi 모듈 추가</li>\n <li>웹서버 내장모드 실행</li>\n <li>웹서버 데몬모드 실행</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/ApacheWebServerDeploy/README.md</code></p>\n","dir":"/python/ApacheWebServerDeploy/","name":"README.md","path":"python/ApacheWebServerDeploy/README.md","url":"/python/ApacheWebServerDeploy/"},{"sort":8,"layout":"default","title":"페이징 처리","content":"<h1 id=\"페이징-처리\">페이징 처리</h1>\n\n<h2 id=\"1-페이지네이션에-필요한-파라미터\"><font color=\"blue\">1. 페이지네이션에 필요한 파라미터</font></h2>\n<ol>\n <li>pageNum : 페이지번호</li>\n <li>amount : 한 페이지에 보여지는 데이터의 갯수</li>\n <li>startPage : 제일 처음순서에 있는 페이지 번호</li>\n <li>endPage : 제일 마지막 순서에 있는 페이지</li>\n <li>realPage : 실제 데이터가 존재하는 마지막 페이지</li>\n <li>pre : 이전 페이지 유무</li>\n <li>next : 다음 페이지 유무</li>\n <li>total : 총 데이터 갯수</li>\n</ol>\n\n<h2 id=\"2-criteria-클래스-생성페이지를-표시할-기준\"><font color=\"blue\">2. Criteria 클래스 생성(페이지를 표시할 기준)</font></h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.domain.Criteria.java</code></li>\n <li>Oracle DB 사용할 경우, rownum 을 사용 할 수 있으므로, 아래와 같이 처리</li>\n <li>MySQL의 경우, rownum 사용이 불가하고, limit을 사용할 것이므로, 불러올 데이터가 몇 번째 데이터 부터인지 알아야 함</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Getter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Setter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.ToString</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Getter</span>\n<span class=\"nd\">@Setter</span>\n<span class=\"nd\">@ToString</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Criteria</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">pageNumber</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">amount</span><span class=\"o\">;</span>\n\t<span class=\"c1\">//mySql 사용시, 속성 추가</span>\n    <span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">rowindex</span><span class=\"o\">;</span>\n\n\t<span class=\"kd\">public</span> <span class=\"nf\">Criteria</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">10</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">Criteria</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">pageNumber</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">amount</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span> <span class=\"o\">=</span> <span class=\"n\">pageNumber</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">amount</span> <span class=\"o\">=</span> <span class=\"n\">amount</span><span class=\"o\">;</span>\n        <span class=\"c1\">//mySql 사용 시, 속성 추가</span>\n        <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">rowindex</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">amount</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"3-pagedto-클래스-생성화면에-전달해-줄-페이지-속성\"><font color=\"blue\">3. PageDTO 클래스 생성(화면에 전달해 줄 페이지 속성)</font></h2>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">org.example.domain.PageDTO.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Getter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.ToString</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Getter</span>\n<span class=\"nd\">@ToString</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">PageDTO</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">startPage</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">endPage</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">pre</span><span class=\"o\">,</span> <span class=\"n\">next</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">total</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">PageDTO</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">total</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span> <span class=\"o\">=</span> <span class=\"n\">cri</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">total</span> <span class=\"o\">=</span> <span class=\"n\">total</span><span class=\"o\">;</span>\n\t\t\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">ceil</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">()</span> <span class=\"o\">/</span> <span class=\"o\">(</span><span class=\"kt\">float</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()))</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">();</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">startPage</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">-</span> <span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()-</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n\t\t<span class=\"kt\">int</span> <span class=\"n\">realEnd</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"kt\">int</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"nc\">Math</span><span class=\"o\">.</span><span class=\"na\">ceil</span><span class=\"o\">((</span><span class=\"n\">total</span> <span class=\"o\">*</span> <span class=\"mf\">1.0</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">()));</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">realEnd</span> <span class=\"o\">&lt;</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span><span class=\"o\">)</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">=</span> <span class=\"n\">realEnd</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pre</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">startPage</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">next</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">endPage</span> <span class=\"o\">&lt;</span> <span class=\"n\">realEnd</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-list-페이지-처리\"><font color=\"blue\">4. list 페이지 처리</font></h2>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. Controller 처리</font></strong></p>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardController.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"list\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">getList</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\n\t\t<span class=\"kt\">int</span> <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getTotal</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">);</span>\n\t\t\n        <span class=\"c1\">// 임의 페이지에 1개의 게시물만 존재하는데, 그 게시물을 삭제 할 경우 현재 pageNumber를 -1 해주는 작업.</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">total</span> <span class=\"o\">&lt;=</span> <span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">()-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">cri</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nc\">Criteria</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">()-</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span>\n\t\t\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"list\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">));</span>\n        <span class=\"c1\">// 화면에 표시되는 페이지 정보는 PageDTO 에 모두 들어 있음.</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"pageMaker\"</span><span class=\"o\">,</span><span class=\"k\">new</span> <span class=\"nc\">PageDTO</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"n\">total</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. 데이터 총 갯수와 리스트 조회 처리</font></strong></p>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardMapper.xml</code></li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">'getListWithPage'</span> <span class=\"na\">resultType=</span><span class=\"s\">'org.example.domain.BoardVO'</span><span class=\"nt\">&gt;</span>\n\t<span class=\"cp\">&lt;![CDATA[\n\tselect bno,title,content,writer,regdate,updatedate\n\tfrom tbl_board\n\twhere bno &gt;</span> 0\n\tlimit #{rowindex}, #{amount}\n\t]]&gt;\n\t<span class=\"nt\">&lt;/select&gt;</span>\n\n\t<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"getTotal\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"int\"</span><span class=\"nt\">&gt;</span>\n\tselect count(*) from tbl_board where bno &gt; 0\n\t<span class=\"nt\">&lt;/select&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardMapper.java</code> : Criteria 파라미터가 필요가 없지만, 페이지 관련 함수들의 통일성을 위해 넣어줌.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getListWithPage</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">);</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getTotal</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">);</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardService.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">);</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getTotal</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">);</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardServiceImpl.java</code></li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">List</span><span class=\"o\">&lt;</span><span class=\"nc\">BoardVO</span><span class=\"o\">&gt;</span> <span class=\"nf\">getList</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getListWithPage</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\n\t<span class=\"nd\">@Override</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"nf\">getTotal</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"c1\">// TODO Auto-generated method stub</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">mapper</span><span class=\"o\">.</span><span class=\"na\">getTotal</span><span class=\"o\">(</span><span class=\"n\">cri</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. 화면 처리 하기</font></strong></p>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">/board/list.jsp</code></li>\n</ul>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"nt\">&lt;table</span> <span class=\"na\">class=</span><span class=\"s\">\"table table-bordered\"</span>  <span class=\"na\">width=</span><span class=\"s\">\"100%\"</span> <span class=\"na\">cellspacing=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;thead&gt;</span>\n        <span class=\"nt\">&lt;tr&gt;</span>\n            <span class=\"nt\">&lt;th&gt;</span>#번호<span class=\"nt\">&lt;/th&gt;</span>\n            <span class=\"nt\">&lt;th&gt;</span>제목<span class=\"nt\">&lt;/th&gt;</span>\n            <span class=\"nt\">&lt;th&gt;</span>작성자<span class=\"nt\">&lt;/th&gt;</span>\n            <span class=\"nt\">&lt;th&gt;</span>작성일<span class=\"nt\">&lt;/th&gt;</span>\n            <span class=\"nt\">&lt;th&gt;</span>수정일<span class=\"nt\">&lt;/th&gt;</span>\n        <span class=\"nt\">&lt;/tr&gt;</span>\n    <span class=\"nt\">&lt;/thead&gt;</span>\n    <span class=\"nt\">&lt;tbody&gt;</span>\n        <span class=\"nt\">&lt;c:forEach </span><span class=\"na\">items=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">list</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> var=</span><span class=\"s\">\"board\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;tr&gt;</span>\n            <span class=\"c\">&lt;!-- 기존에 a 태그로 조회링크를 처리 했으나, form 방식으로 변경함. --&gt;</span>\n            <span class=\"nt\">&lt;td&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"${board.bno}\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${board.bno}\"</span><span class=\"nt\">&gt;</span>${board.bno}<span class=\"nt\">&lt;/a&gt;&lt;/td&gt;</span>\n            <span class=\"nt\">&lt;td&gt;</span>${board.title}<span class=\"nt\">&lt;/td&gt;</span>\n            <span class=\"nt\">&lt;td&gt;</span>${board.writer}<span class=\"nt\">&lt;/td&gt;</span>\n            <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">regdate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy/mm/dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n            <span class=\"nt\">&lt;td&gt;&lt;fmt:formatDate </span><span class=\"na\">value=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"na\">updateDate</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> pattern=</span><span class=\"s\">\"yyyy/mm/dd\"</span> <span class=\"nt\">/&gt;&lt;/td&gt;</span>\n        <span class=\"nt\">&lt;/tr&gt;</span>\n        <span class=\"nt\">&lt;/c:forEach&gt;</span>\n    <span class=\"nt\">&lt;/tbody&gt;</span>\n<span class=\"nt\">&lt;/table&gt;</span>\n\n<span class=\"c\">&lt;!-- Start pagination --&gt;</span>\n<span class=\"c\">&lt;!-- justify-content-end : 부트스트랩4의 정렬방식으로, 우측 정렬 --&gt;</span>\n<span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">\"pagination justify-content-end\"</span> <span class=\"na\">style=</span><span class=\"s\">\"margin:20px 0\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;c:if </span><span class=\"na\">test=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">pageMaker</span><span class=\"o\">.</span><span class=\"na\">pre</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"page-item\"</span><span class=\"nt\">&gt;&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"page-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"${pageMaker.startPage - 1}\"</span><span class=\"nt\">&gt;</span>Previous<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;/c:if&gt;</span>\n    \n    <span class=\"nt\">&lt;c:forEach </span><span class=\"na\">var=</span><span class=\"s\">\"num\"</span><span class=\"na\"> begin=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">pageMaker</span><span class=\"o\">.</span><span class=\"na\">startPage</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"na\"> end=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">pageMaker</span><span class=\"o\">.</span><span class=\"na\">endPage</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"page-item ${pageMaker.cri.pageNumber==num ?'active':'' }\"</span><span class=\"nt\">&gt;&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"page-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"${num}\"</span><span class=\"nt\">&gt;</span>${num}<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n        \n    <span class=\"nt\">&lt;/c:forEach&gt;</span>\n    \n    <span class=\"nt\">&lt;c:if </span><span class=\"na\">test=</span><span class=\"s\">\"</span><span class=\"si\">${</span><span class=\"n\">pageMaker</span><span class=\"o\">.</span><span class=\"na\">next</span><span class=\"si\">}</span><span class=\"s\">\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">\"page-item\"</span><span class=\"nt\">&gt;&lt;a</span> <span class=\"na\">class=</span><span class=\"s\">\"page-link\"</span> <span class=\"na\">href=</span><span class=\"s\">\"${pageMaker.endPage + 1}\"</span><span class=\"nt\">&gt;</span>Next<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;/c:if&gt;</span>\n<span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">'/board/list'</span> <span class=\"na\">method=</span><span class=\"s\">'get'</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">id=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">id=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.amount}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"c\">&lt;!-- mySql DB를 사용하는 경우, limit 에 넣어줄 데이터 순서 --&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">id=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">.page-link</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">click</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t\n\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">href</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n\t\t<span class=\"kd\">const</span> <span class=\"nx\">amount</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#amount</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t<span class=\"kd\">const</span> <span class=\"nx\">pageNumber</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#rowindex</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">((</span><span class=\"nx\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">amount</span><span class=\"p\">);</span>\n\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t\t\n\t<span class=\"p\">});</span>\n\t\n\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">.table a</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t<span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t<span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t<span class=\"kd\">const</span> <span class=\"nx\">bno</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;input&gt;</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">name</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">bno</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">href</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n\t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">bno</span><span class=\"p\">);</span>\n\t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">/board/get</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">get</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t<span class=\"p\">})</span>\n<span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"5-조회수정삭제-후-보던-목록의-페이지번호로-돌아오기-처리\"><font color=\"blue\">5. 조회/수정/삭제 후, 보던 목록의 페이지번호로 돌아오기 처리</font></h2>\n<ul>\n <li>기본적으로, 각 기능의 화면에 Criteria의 속성을 모두 input 으로 지정해 줌</li>\n <li>각 기능의 Controller 에서는, 파라미터로 Criteria 를 지정하고, 화면으로 전달 되도록 처리함</li>\n</ul>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-1. 조회 처리 후 목록 이동</font></strong></p>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">get.jsp</code></li>\n <li>수정 페이지로 이동 처리</li>\n <li>목록 페이지로 이동 처리</li>\n</ul>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">'/board/modify'</span> <span class=\"na\">method=</span><span class=\"s\">'get'</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'bno'</span> <span class=\"na\">value=</span><span class=\"s\">'${board.bno}'</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.amount}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">'text/javascript'</span><span class=\"nt\">&gt;</span>\n \t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n \t\t\n \t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n             <span class=\"o\">&lt;!--</span> <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">()</span><span class=\"nx\">는</span><span class=\"p\">,</span> <span class=\"nx\">element의</span> <span class=\"dl\">'</span><span class=\"s1\">data-xxx</span><span class=\"dl\">'</span> <span class=\"nx\">속성의</span> <span class=\"nx\">값을</span> <span class=\"nx\">가져옴</span> <span class=\"o\">--&gt;</span>\n \t\t\t<span class=\"kd\">const</span> <span class=\"nx\">oper</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">oper</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n \t \t\t<span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n \t \t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">oper</span> <span class=\"o\">==</span> <span class=\"dl\">'</span><span class=\"s1\">list</span><span class=\"dl\">'</span><span class=\"p\">){</span>\n \t \t\t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/list</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n \t \t\t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"bno\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">remove</span><span class=\"p\">();</span>\n \t \t\t<span class=\"p\">}</span>\n \t \t\t<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n \t\t<span class=\"p\">})</span>\n \t<span class=\"p\">})</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardController.java</code></li>\n <li>파라미터로 객체를 지정하면, 자동으로 화면으로 전달 됨.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/get\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">get</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"nc\">Long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"board\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">));</span>\n\t\t\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@GetMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nd\">@RequestParam</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">)</span> <span class=\"kt\">long</span> <span class=\"n\">bno</span><span class=\"o\">,</span> <span class=\"nc\">Model</span> <span class=\"n\">model</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"board\"</span><span class=\"o\">,</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"n\">bno</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-2. 수정화면에서 수정 처리 후 목록 이동</font></strong></p>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">modify.jsp</code></li>\n <li>form 에 criteria 속성 추가</li>\n <li>Controller 에서 자동으로 넘어온 객체는 첫 글자만 소문자로 바꾸어 사용한다.</li>\n</ul>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.amount}\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t <span class=\"o\">&lt;!--</span> <span class=\"nx\">form의</span> <span class=\"nx\">기본</span> <span class=\"nx\">처리는</span> <span class=\"nx\">수정처리</span> <span class=\"nx\">됨</span><span class=\"p\">.</span> <span class=\"o\">--&gt;</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">oper</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">oper</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">pageNumberInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"pageNumber\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">amountInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"amount\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">rowindexInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"rowindex\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">bnoInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"bno\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t \n\t\t <span class=\"k\">switch</span><span class=\"p\">(</span><span class=\"nx\">oper</span><span class=\"p\">){</span>\n             <span class=\"o\">&lt;!--</span> <span class=\"nx\">목록으로</span> <span class=\"nx\">이동하는</span> <span class=\"nx\">버튼</span> <span class=\"nx\">클릭</span> <span class=\"nx\">시</span><span class=\"o\">!</span> <span class=\"o\">--&gt;</span>\n\t\t <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">list</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/list</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">get</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">pageNumberInput</span><span class=\"p\">,</span> <span class=\"nx\">amountInput</span><span class=\"p\">,</span> <span class=\"nx\">rowindexInput</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">break</span><span class=\"p\">;</span>\n             <span class=\"o\">&lt;!--</span> <span class=\"nx\">삭제</span> <span class=\"nx\">처리</span> <span class=\"nx\">버튼</span> <span class=\"nx\">클릭</span> <span class=\"nx\">시</span><span class=\"o\">!</span> <span class=\"o\">--&gt;</span>\n\t\t <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">remove</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/remove</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">post</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">pageNumberInput</span><span class=\"p\">,</span> <span class=\"nx\">amountInput</span><span class=\"p\">,</span> <span class=\"nx\">rowindexInput</span><span class=\"p\">,</span> <span class=\"nx\">bnoInput</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">break</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t <span class=\"p\">})</span>\n <span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardController.java</code></li>\n <li>리다이렉트 시, <code class=\"language-plaintext highlighter-rouge\">addAttribute</code> 에 Criteria 의 각 속성을 넣어준다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t\t\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"pageNumber\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">());</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"amount\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">());</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"rowindex\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getRowindex</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-3. 수정화면에서 삭제 처리 후 목록 이동</font></strong></p>\n\n<ul>\n <li>modify.jsp 처리는 1-2 와 같음.</li>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardController.java</code></li>\n <li>리다이렉트 시, <code class=\"language-plaintext highlighter-rouge\">addAttribute</code> 에 Criteria 의 각 속성을 넣어준다.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"c1\">//삭제는 반드시, post 로만 처리합니다.</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/remove\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getBno</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"pageNumber\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getPageNumber</span><span class=\"o\">());</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"amount\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getAmount</span><span class=\"o\">());</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addAttribute</span><span class=\"o\">(</span><span class=\"s\">\"rowindex\"</span><span class=\"o\">,</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getRowindex</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span><span class=\"o\">;</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<p><strong><font color=\"green\" style=\"font-size:large;\">1-4. 수정화면에서 목록 이동</font></strong></p>\n<ul>\n <li>modify.jsp 처리는 1-2 와 같음.</li>\n <li>Controller 처리는, ‘4. 리스트 처리’ 와 같음</li>\n <li>리다이렉트 시, <code class=\"language-plaintext highlighter-rouge\">addAttribute</code> 에 Criteria 의 각 속성을 넣어준다.</li>\n</ul>\n","dir":"/spring5/3_webDev/","name":"8_paging.md","path":"spring5/3_webDev/8_paging.md","url":"/spring5/3_webDev/8_paging.html"},{"sort":9,"permalink":"/spring5/9_QNA/","layout":"default","title":"Q &amp; A","content":"<h1 id=\"1-q--a\">1. Q &amp; A</h1>\n\n<ol>\n <li>어노테이션의 정리</li>\n</ol>\n","dir":"/spring5/9_QNA/","name":"README.md","path":"spring5/9_QNA/README.md","url":"/spring5/9_QNA/"},{"sort":9,"permalink":"/python/NginxWebServerDeploy/","layout":"default","title":"NGINX 웹서버와 연동하기","content":"<h1 id=\"nginx-웹서버와-연동하기\">NGINX 웹서버와 연동하기</h1>\n<ol>\n <li>장고 설정 변경</li>\n <li>NGINX 설치</li>\n <li>NGINX 설정</li>\n <li>uWSGI 설치</li>\n <li>uWSGI 설정</li>\n <li>작업 확인하기</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/NginxWebServerDeploy/README.md</code></p>\n","dir":"/python/NginxWebServerDeploy/","name":"README.md","path":"python/NginxWebServerDeploy/README.md","url":"/python/NginxWebServerDeploy/"},{"sort":9,"layout":"default","title":"검색 처리","content":"<h1 id=\"검색-처리\">검색 처리</h1>\n\n<h2 id=\"1-criteria-객체-수정\"><font color=\"blue\">1. Criteria 객체 수정</font></h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">type</code> 속성 : 검색종류 추가</li>\n <li><code class=\"language-plaintext highlighter-rouge\">keyword</code> 속성 : 검색어 추가</li>\n <li><code class=\"language-plaintext highlighter-rouge\">getArryType()</code> 추가 : type 속성을 배열로 반환하는 함수 추가</li>\n <li><code class=\"language-plaintext highlighter-rouge\">getListLink()</code> 추가 : UriComponentBuilder 객체를 이용하여, 파라미터들로 get 타입의 uriString 생성하여 반환하는 함수 추가</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">package</span> <span class=\"nn\">org.example.domain</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">org.springframework.web.util.UriComponentsBuilder</span><span class=\"o\">;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Getter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.Setter</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">lombok.ToString</span><span class=\"o\">;</span>\n\n<span class=\"nd\">@Getter</span>\n<span class=\"nd\">@Setter</span>\n<span class=\"nd\">@ToString</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Criteria</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">pageNumber</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">amount</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"kt\">int</span> <span class=\"n\">rowindex</span><span class=\"o\">;</span>\n\t\n\t<span class=\"c1\">//  추가</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">type</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">keyword</span><span class=\"o\">;</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">Criteria</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"kd\">public</span> <span class=\"nf\">Criteria</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">pageNumber</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">amount</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span> <span class=\"o\">=</span> <span class=\"n\">pageNumber</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">amount</span> <span class=\"o\">=</span> <span class=\"n\">amount</span><span class=\"o\">;</span>\n\t\t<span class=\"c1\">// pageNumber가 음수일 때, 데이터 시작 인덱스를 0 부터 처리하도록 수정.</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">rowindex</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n\t\t<span class=\"o\">}</span><span class=\"k\">else</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">rowindex</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">amount</span><span class=\"o\">;</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">// type 이 'TCW'등으로 들어왔을 때 배열 {'T','C','W'} 로 반환하는 함수. myBatis에서 collection 으로 사용함.</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"nf\">getTypeArr</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"o\">?</span> <span class=\"k\">new</span> <span class=\"nc\">String</span><span class=\"o\">[]</span> <span class=\"o\">{}</span> <span class=\"o\">:</span> <span class=\"n\">type</span><span class=\"o\">.</span><span class=\"na\">split</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">// uriString 을 만들어 반환하는 함수</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">getListLink</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">UriComponentsBuilder</span> <span class=\"n\">builder</span> <span class=\"o\">=</span> <span class=\"nc\">UriComponentsBuilder</span><span class=\"o\">.</span><span class=\"na\">fromPath</span><span class=\"o\">(</span><span class=\"s\">\"\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">queryParam</span><span class=\"o\">(</span><span class=\"s\">\"pageNumber\"</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">pageNumber</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">queryParam</span><span class=\"o\">(</span><span class=\"s\">\"amount\"</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">amount</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">queryParam</span><span class=\"o\">(</span><span class=\"s\">\"rowindex\"</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">rowindex</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">queryParam</span><span class=\"o\">(</span><span class=\"s\">\"type\"</span><span class=\"o\">,</span><span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">type</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">queryParam</span><span class=\"o\">(</span><span class=\"s\">\"keyword\"</span><span class=\"o\">,</span> <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">keyword</span><span class=\"o\">);</span>\n\t\t<span class=\"k\">return</span> <span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"na\">toUriString</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"2-boardmapperxml의-쿼리-수정\"><font color=\"blue\">2. BoardMapper.xml의 쿼리 수정</font></h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">getListWithPage</code> 와 <code class=\"language-plaintext highlighter-rouge\">getTotal</code> 의 조건을 수정</li>\n <li>myBatis 의 trim, choose, sql, include 등 사용</li>\n <li>type 배열 루프를 위해 foreach 사용함, collection에 콜랙션이나 배열이 올 수 있음.</li>\n <li>choose를 사용하여, case 구문 같은 문장을 만듦.</li>\n <li>trim 의 prifix를 이용하여 내부의 구문이 실행 될 때마다 prifix를 앞에 붙여줌</li>\n <li>trim prefixOverrides 를 이용하여, 내부 구문의 가장앞에 오는 prefix를 삭제해 버림</li>\n <li>sql 로 지정된 쿼리는 include 를 통해서 재사용 가능함.</li>\n</ul>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;sql</span> <span class=\"na\">id=</span><span class=\"s\">\"criteria\"</span><span class=\"nt\">&gt;</span>\n\t<span class=\"nt\">&lt;trim</span> <span class=\"na\">prefix=</span><span class=\"s\">\"AND (\"</span> <span class=\"na\">suffix=</span><span class=\"s\">\")\"</span> <span class=\"na\">prefixOverrides=</span><span class=\"s\">\"OR\"</span><span class=\"nt\">&gt;</span>\n\t\t<span class=\"nt\">&lt;foreach</span> <span class=\"na\">item=</span><span class=\"s\">\"type\"</span> <span class=\"na\">collection=</span><span class=\"s\">\"typeArr\"</span><span class=\"nt\">&gt;</span>\n\t\t\t<span class=\"nt\">&lt;trim</span> <span class=\"na\">prefix=</span><span class=\"s\">\"OR\"</span><span class=\"nt\">&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;choose&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;when</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'T'.toString()\"</span><span class=\"nt\">&gt;</span>\n\t\t\t\ttitle like concat('%',#{keyword},'%')\n\t\t\t\t<span class=\"nt\">&lt;/when&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;when</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'C'.toString()\"</span><span class=\"nt\">&gt;</span>\n\t\t\t\tcontent like concat('%',#{keyword},'%')\n\t\t\t\t<span class=\"nt\">&lt;/when&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;when</span> <span class=\"na\">test=</span><span class=\"s\">\"type == 'W'.toString()\"</span><span class=\"nt\">&gt;</span>\n\t\t\t\twriter like concat('%',#{keyword},'%')\n\t\t\t\t<span class=\"nt\">&lt;/when&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;/choose&gt;</span>\n\t\t\t<span class=\"nt\">&lt;/trim&gt;</span>\n\t\t<span class=\"nt\">&lt;/foreach&gt;</span>\t\n\t<span class=\"nt\">&lt;/trim&gt;</span>\n<span class=\"nt\">&lt;/sql&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">'getListWithPage'</span> <span class=\"na\">resultType=</span><span class=\"s\">'org.example.domain.BoardVO'</span><span class=\"nt\">&gt;</span>\nselect bno,title,content,writer,regdate,updatedate\nfrom tbl_board \nwhere bno &gt; 0\n<span class=\"nt\">&lt;include</span> <span class=\"na\">refid=</span><span class=\"s\">\"criteria\"</span><span class=\"nt\">&gt;&lt;/include&gt;</span>\nlimit #{rowindex}, #{amount}\n<span class=\"nt\">&lt;/select&gt;</span>\n\n<span class=\"nt\">&lt;select</span> <span class=\"na\">id=</span><span class=\"s\">\"getTotal\"</span> <span class=\"na\">resultType=</span><span class=\"s\">\"int\"</span><span class=\"nt\">&gt;</span>\nselect count(*) from tbl_board where bno &gt; 0\n<span class=\"nt\">&lt;include</span> <span class=\"na\">refid=</span><span class=\"s\">\"criteria\"</span><span class=\"nt\">&gt;&lt;/include&gt;</span>\n<span class=\"nt\">&lt;/select&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"3-listjsp-화면에-검색필드-처리\"><font color=\"blue\">3. list.jsp 화면에 검색필드 처리</font></h2>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n <span class=\"nt\">&lt;/table&gt;</span>\n<span class=\"c\">&lt;!-- Start Search --&gt;</span>\n\t\t<span class=\"nt\">&lt;form</span> <span class=\"na\">class=</span><span class=\"s\">\"form-inline\"</span> <span class=\"na\">id=</span><span class=\"s\">'searchForm'</span> <span class=\"na\">action=</span><span class=\"s\">'/board/list'</span> <span class=\"na\">method=</span><span class=\"s\">'get'</span><span class=\"nt\">&gt;</span>\n\t\t\t<span class=\"nt\">&lt;select</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control mr-3\"</span> <span class=\"na\">name=</span><span class=\"s\">'type'</span><span class=\"nt\">&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">''</span><span class=\"nt\">&gt;</span>--<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'T'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"T\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>제목<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'C'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"C\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>내용<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'W'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"W\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>작성자<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'TC'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"TC\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>제목 or 내용<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'TW'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"TW\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>제목 or 작성자<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t\t<span class=\"nt\">&lt;option</span> <span class=\"na\">value=</span><span class=\"s\">'TCW'</span> <span class=\"err\">${</span><span class=\"na\">pageMaker.cri.type=</span><span class=\"s\">=\"TCW\"?\"selected\":\"\"}</span><span class=\"nt\">&gt;</span>제목 or 내용 or 작성자<span class=\"nt\">&lt;/option&gt;</span>\n\t\t\t<span class=\"nt\">&lt;/select&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"form-control mr-3\"</span> <span class=\"na\">type=</span><span class=\"s\">'text'</span> <span class=\"na\">name=</span><span class=\"s\">'keyword'</span> <span class=\"na\">value=</span><span class=\"s\">'${pageMaker.cri.keyword}'</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">id=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">id=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.amount}\"</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">id=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${pageMaker.cri.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n\t\t\t<span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">'btn btn-primary '</span><span class=\"nt\">&gt;</span>Search<span class=\"nt\">&lt;/button&gt;</span>\n\t\t<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"c\">&lt;!-- End Search --&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">.page-link</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">click</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t\t<span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">href</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">amount</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#amount</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">pageNumber</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#rowindex</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">((</span><span class=\"nx\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">amount</span><span class=\"p\">);</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#searchForm</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t\t<span class=\"p\">});</span>\n\t\t\n\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">#searchForm button</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t\t\t\n\t\t\t\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#searchForm</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">select[name=\"type\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">()){</span>\n\t\t\t\t<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">검색종류를 선택하세요.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\n\t\t\t<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#searchForm</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"keyword\"]</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">()){</span>\n\t\t\t\t<span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">검색를 선택하세요.</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t\t<span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"p\">;</span>\n\t\t\t<span class=\"p\">}</span>\n\t\t\t<span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">1</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">amount</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#amount</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\t<span class=\"kd\">const</span> <span class=\"nx\">pageNumber</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pageNumber</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">();</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#rowindex</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">val</span><span class=\"p\">((</span><span class=\"nx\">pageNumber</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">amount</span><span class=\"p\">);</span>\n\t\t\t<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#searchForm</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t\t<span class=\"p\">});</span>\n<span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-수정삭제-처리-후-리스트-복귀-시-검색어-가지고-다니기\"><font color=\"blue\">4. 수정/삭제 처리 후 리스트 복귀 시, 검색어 가지고 다니기</font></h2>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">modify.jsp</code> 의 수정, 삭제, 목록의 처리</li>\n</ul>\n\n<div class=\"language-jsp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- 생략 --&gt;</span>\n<span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'modify'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-info\"</span><span class=\"nt\">&gt;</span>Modify<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'remove'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-danger\"</span><span class=\"nt\">&gt;</span>Remove<span class=\"nt\">&lt;/button&gt;</span>\n<span class=\"nt\">&lt;button</span> <span class=\"na\">data-oper=</span><span class=\"s\">'list'</span> <span class=\"na\">class=</span><span class=\"s\">\"btn btn-primary\"</span><span class=\"nt\">&gt;</span>List<span class=\"nt\">&lt;/button&gt;</span>\n\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"pageNumber\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.pageNumber}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.amount}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">\"rowindex\"</span> <span class=\"na\">value=</span><span class=\"s\">\"${criteria.rowindex}\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'type'</span> <span class=\"na\">value=</span><span class=\"s\">'${criteria.type}'</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">'hidden'</span> <span class=\"na\">name=</span><span class=\"s\">'keyword'</span> <span class=\"na\">value=</span><span class=\"s\">'${criteria.keyword}'</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/form&gt;</span>\n<span class=\"c\">&lt;!-- 생략 --&gt;</span>\n\n<span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span>\n <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nx\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(){</span>\n\t <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">button</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">){</span>\n\t\t <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\t\t \n\t\t <span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">oper</span> <span class=\"o\">=</span> <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">).</span><span class=\"nx\">data</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">oper</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">pageNumberInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"pageNumber\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">amountInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"amount\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">rowindexInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"rowindex\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">bnoInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"bno\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">typeInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"type\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t <span class=\"kd\">const</span> <span class=\"nx\">keywordInput</span> <span class=\"o\">=</span> <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input[name=\"keyword\"]</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t \n\t\t <span class=\"k\">switch</span><span class=\"p\">(</span><span class=\"nx\">oper</span><span class=\"p\">){</span>\n\t\t <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">list</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/list</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">get</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">pageNumberInput</span><span class=\"p\">,</span> <span class=\"nx\">amountInput</span><span class=\"p\">,</span> <span class=\"nx\">rowindexInput</span><span class=\"p\">,</span> <span class=\"nx\">typeInput</span><span class=\"p\">,</span> <span class=\"nx\">keywordInput</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">break</span><span class=\"p\">;</span>\n\t\t <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">remove</span><span class=\"dl\">'</span><span class=\"p\">:</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">action</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">/board/remove</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">attr</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">method</span><span class=\"dl\">'</span><span class=\"p\">,</span><span class=\"dl\">'</span><span class=\"s1\">post</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">empty</span><span class=\"p\">();</span>\n\t\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"nx\">pageNumberInput</span><span class=\"p\">,</span> <span class=\"nx\">amountInput</span><span class=\"p\">,</span> <span class=\"nx\">rowindexInput</span><span class=\"p\">,</span> <span class=\"nx\">typeInput</span><span class=\"p\">,</span> <span class=\"nx\">keywordInput</span><span class=\"p\">,</span> <span class=\"nx\">bnoInput</span><span class=\"p\">);</span>\n\t\t\t <span class=\"k\">break</span><span class=\"p\">;</span>\n\t\t <span class=\"p\">}</span>\n\t\t \n\t\t <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n\t <span class=\"p\">})</span>\n <span class=\"p\">});</span>\n <span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>  </div></div>\n\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">BoardController.java</code>의 modify, remove 함수에서 검색어 처리</li>\n <li>리다이렉트는 GET 방식을 이용함, RedirectAttributes 객체를 이용해도 되지만, 쿼리스트링을 만들어주어도 됨.</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/modify\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">modify</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"pageNumber\", cri.getPageNumber());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"amount\", cri.getAmount());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"rowindex\", cri.getRowindex());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"type\", cri.getType());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"keyword\", cri.getKeyword());</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span> <span class=\"o\">+</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getListLink</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\n\t\n\t<span class=\"c1\">//삭제는 반드시, post 로만 처리합니다.</span>\n\t<span class=\"nd\">@PostMapping</span><span class=\"o\">(</span><span class=\"s\">\"/remove\"</span><span class=\"o\">)</span>\n\t<span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"nf\">delete</span><span class=\"o\">(</span><span class=\"nc\">Criteria</span> <span class=\"n\">cri</span><span class=\"o\">,</span> <span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span><span class=\"o\">,</span> <span class=\"nc\">RedirectAttributes</span> <span class=\"n\">rttr</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"k\">if</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">.</span><span class=\"na\">getBno</span><span class=\"o\">()))</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">rttr</span><span class=\"o\">.</span><span class=\"na\">addFlashAttribute</span><span class=\"o\">(</span><span class=\"s\">\"result\"</span><span class=\"o\">,</span><span class=\"s\">\"success\"</span><span class=\"o\">);</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"pageNumber\", cri.getPageNumber());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"amount\", cri.getAmount());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"rowindex\", cri.getRowindex());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"type\", cri.getType());</span>\n<span class=\"c1\">//\t\t\trttr.addAttribute(\"keyword\", cri.getKeyword());</span>\n\t\t<span class=\"o\">}</span>\n\t\t<span class=\"k\">return</span> <span class=\"s\">\"redirect:/board/list\"</span> <span class=\"o\">+</span> <span class=\"n\">cri</span><span class=\"o\">.</span><span class=\"na\">getListLink</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/3_webDev/","name":"9_search.md","path":"spring5/3_webDev/9_search.md","url":"/spring5/3_webDev/9_search.html"},{"sort":10,"permalink":"/python/JangoDevelopmentBasic/","layout":"default","title":"파이썬 가상환경 사용하기","content":"<h1 id=\"파이썬-가상환경-사용하기\">파이썬 가상환경 사용하기</h1>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/JangoDevelopmentBasic/README.md</code></p>\n","dir":"/python/JangoDevelopmentBasic/","name":"README.md","path":"python/JangoDevelopmentBasic/README.md","url":"/python/JangoDevelopmentBasic/"},{"sort":10,"permalink":"/spring5/10_mybatis/","layout":"default","title":"MyBatis","content":"<h1 id=\"mybatis\">MyBatis</h1>\n\n","dir":"/spring5/10_mybatis/","name":"README.md","path":"spring5/10_mybatis/README.md","url":"/spring5/10_mybatis/"},{"sort":11,"permalink":"/python/developBookmark/","layout":"default","title":"bookmark 앱 개발","content":"<h1 id=\"bookmark-앱-개발\">bookmark 앱 개발</h1>\n<blockquote>\n <p>자세한 소스는 깃헙을 확인바람</p>\n</blockquote>\n\n<ol>\n <li>설계 : 화면UI 설계 -&gt; 테이블 설계 -&gt; 로직 설계 -&gt; URL 설계 -&gt; 작업/코딩</li>\n <li>장고 뼈대 개발\n <ul>\n <li>프로젝트 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv)$ django-admin startproject mysite</code></li>\n <li>프로젝트 설정 파일 변경 : mysite/settings.py</li>\n <li>기본 테이블 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv)$ python3 manage.py migrate</code></li>\n <li>슈퍼유저 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv) $ python3 manage.py createsuperuser</code></li>\n <li>애플리케이션 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv) $ python3 manage.py startapp myapp</code></li>\n <li>애플리케이션 등록 : seggings.py 의 INSTALLED_APPS 리스트에 ‘myapp.apps.MyappConfig’(예시) 추가</li>\n </ul>\n </li>\n <li>모델 개발\n <ul>\n <li>테이블 정의 : myapp/models.py</li>\n <li>admin 사이트에 테이블 반영 : myapp/admin.py</li>\n <li>데이터베이스 변경사항 반영\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  (venv)$ python3 manage.py makemigrations myapp\n  (venv)$ python3 manage.py migrate\n</code></pre>  </div> </div>\n </li>\n <li>테이블 모습 확인\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">(venv)$ python3 manage.py runserver # 백그라운드 실행 시 끝에 &amp;를 붙인다.</code></li>\n <li>웹브라우저 : http://localhost:8000/admin/</li>\n </ul>\n </li>\n </ul>\n </li>\n <li>URLconf 개발</li>\n <li>뷰 개발</li>\n <li>템플릿 개발</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/developBookmark/README.md</code></p>\n","dir":"/python/developBookmark/","name":"README.md","path":"python/developBookmark/README.md","url":"/python/developBookmark/"},{"sort":11,"layout":"default","title":"테스트","content":"<h1 id=\"테스트\">테스트</h1>\n\n<h2 id=\"1-jdbc-test\">1. JDBC TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지 생성</li>\n <li>JDBCTest.java 생성 후 테스트코드 작성</li>\n</ul>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">JDBCTest</span> <span class=\"o\">{</span>\n\n\t<span class=\"kd\">static</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">try</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"nc\">Class</span><span class=\"o\">.</span><span class=\"na\">forName</span><span class=\"o\">(</span><span class=\"s\">\"com.mysql.cj.jdbc.Driver\"</span><span class=\"o\">);</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t<span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">printStackTrace</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n\t\t<span class=\"k\">try</span><span class=\"o\">{</span>\n\t\t\t<span class=\"n\">conn</span> <span class=\"o\">=</span> \n\t\t\t\t<span class=\"nc\">DriverManager</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">(</span><span class=\"s\">\"jdbc:mysql://localhost/testDb?characterEncoding=UTF-8&amp;serverTimezone=UTC\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">,</span>\n\t\t\t\t\t\t<span class=\"s\">\"book_ex\"</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n\t\t\t<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"na\">close</span><span class=\"o\">();</span>\n\t\t<span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">SQLException</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n\t\t\t\n\t\t\t<span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n\t\t<span class=\"o\">}</span> \n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n<ul>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n\n<h2 id=\"2-datasource--connectionpool-test\">2. DataSource &amp; ConnectionPool TEST</h2>\n<ul>\n <li>src/test/java 폴더 하위 <code class=\"language-plaintext highlighter-rouge\">org.example.persistance</code> 패키지</li>\n <li>DataSourceTest.java 생성 후 테스트코드 작성\n <div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"c1\">//java 설정의 경우 위의 라인 대신, @ContextConfiguration(classes= {RootConfig.class}) </span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">DataSourceTest</span> <span class=\"o\">{</span>\n\n  <span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n  <span class=\"kd\">private</span> <span class=\"nc\">DataSource</span> <span class=\"n\">ds</span><span class=\"o\">;</span> \n\t\n  <span class=\"nd\">@Test</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testConnection</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n      <span class=\"nc\">Connection</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n      <span class=\"k\">try</span><span class=\"o\">{</span>\n          <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"na\">getConnection</span><span class=\"o\">();</span>\n          <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">conn</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span> <span class=\"k\">catch</span> <span class=\"o\">(</span><span class=\"nc\">Exception</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">fail</span><span class=\"o\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"na\">getMessage</span><span class=\"o\">());</span>\n      <span class=\"o\">}</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div> </div>\n </li>\n <li><code class=\"language-plaintext highlighter-rouge\">run as</code> &gt; <code class=\"language-plaintext highlighter-rouge\">JUnit Test</code> 실행 후, conn 객체가 로그에 찍히는지 확인.</li>\n</ul>\n\n<h2 id=\"3-서비스-영속-계층-테스트\">3. 서비스, 영속 계층 테스트</h2>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">(</span><span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">)</span>\n<span class=\"c1\">//@ContextConfiguration(classes={RootConfig.class})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardServiceTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Autowired</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">BoardService</span> <span class=\"n\">service</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testExist</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">assertNotNull</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRegister</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-서비스 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠 - 서비스 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user02\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">register</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGet</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testModify</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">BoardVO</span> <span class=\"n\">vo</span> <span class=\"o\">=</span> <span class=\"nc\">BoardVO</span><span class=\"o\">.</span><span class=\"na\">builder</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">bno</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">title</span><span class=\"o\">(</span><span class=\"s\">\"타이틀-서비스 테스트 업데이트 \"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">content</span><span class=\"o\">(</span><span class=\"s\">\"컨텐츠 - 서비스 테스트 업데이트 \"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">writer</span><span class=\"o\">(</span><span class=\"s\">\"user03\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"modify test Result:\"</span> <span class=\"o\">+</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">modify</span><span class=\"o\">(</span><span class=\"n\">vo</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRemove</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"remove test Result::\"</span> <span class=\"o\">+</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">remove</span><span class=\"o\">(</span><span class=\"mi\">10L</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGetList</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"na\">getList</span><span class=\"o\">().</span><span class=\"na\">forEach</span><span class=\"o\">(</span><span class=\"n\">board</span> <span class=\"o\">-&gt;</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">board</span><span class=\"o\">));</span>\n\t<span class=\"o\">}</span>\n</code></pre>  </div></div>\n\n<h2 id=\"4-web-url-테스트\">4. Web Url 테스트</h2>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@RunWith</span><span class=\"o\">(</span><span class=\"nc\">SpringJUnit4ClassRunner</span><span class=\"o\">.</span><span class=\"na\">class</span><span class=\"o\">)</span>\n<span class=\"c1\">// test for Controller </span>\n<span class=\"nd\">@WebAppConfiguration</span>\n<span class=\"nd\">@ContextConfiguration</span><span class=\"o\">({</span>\n\t\t<span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/root-context.xml\"</span><span class=\"o\">,</span>\n\t\t<span class=\"s\">\"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml\"</span><span class=\"o\">})</span>\n<span class=\"nd\">@Log4j</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">BoardControllerTests</span> <span class=\"o\">{</span>\n\n\t<span class=\"nd\">@Setter</span><span class=\"o\">(</span><span class=\"n\">onMethod</span> <span class=\"o\">=</span> <span class=\"nd\">@__</span><span class=\"o\">({</span><span class=\"nd\">@Autowired</span><span class=\"o\">}))</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">WebApplicationContext</span> <span class=\"n\">ctx</span><span class=\"o\">;</span>\n\t<span class=\"kd\">private</span> <span class=\"nc\">MockMvc</span> <span class=\"n\">mockMvc</span><span class=\"o\">;</span>\n\t\n\t<span class=\"nd\">@Before</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n\t\t<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">mockMvc</span> <span class=\"o\">=</span> <span class=\"nc\">MockMvcBuilders</span><span class=\"o\">.</span><span class=\"na\">webAppContextSetup</span><span class=\"o\">(</span><span class=\"n\">ctx</span><span class=\"o\">).</span><span class=\"na\">build</span><span class=\"o\">();</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testList</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"----test List--------\"</span><span class=\"o\">);</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/board/list/\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelMap</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRegister</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/register\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"title\"</span><span class=\"o\">,</span> <span class=\"s\">\"컨트롤러 테스트 - 타이틀\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"content\"</span><span class=\"o\">,</span><span class=\"s\">\"컨트롤러 테스트 - 컨텐츠\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"writer\"</span><span class=\"o\">,</span> <span class=\"s\">\"user001\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">).</span><span class=\"na\">andReturn</span><span class=\"o\">().</span><span class=\"na\">getModelAndView</span><span class=\"o\">().</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"resultPage:\"</span><span class=\"o\">+</span><span class=\"n\">resultPage</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testGet</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"s\">\"/board/get\"</span><span class=\"o\">)</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">))</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t<span class=\"o\">.</span><span class=\"na\">getModelMap</span><span class=\"o\">());</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"c1\">//@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testModify</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/modify\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"title\"</span><span class=\"o\">,</span><span class=\"s\">\"타이틀 수정 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"content\"</span><span class=\"o\">,</span> <span class=\"s\">\"컨텐츠 수정 테스트\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"writer\"</span><span class=\"o\">,</span> <span class=\"s\">\"user003\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"n\">resultPage</span><span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n\t\n\t<span class=\"nd\">@Test</span>\n\t<span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">testRemove</span><span class=\"o\">()</span> <span class=\"kd\">throws</span> <span class=\"nc\">Exception</span> <span class=\"o\">{</span>\n\t\t<span class=\"nc\">String</span> <span class=\"n\">resultPage</span> <span class=\"o\">=</span> <span class=\"n\">mockMvc</span><span class=\"o\">.</span><span class=\"na\">perform</span><span class=\"o\">(</span><span class=\"nc\">MockMvcRequestBuilders</span><span class=\"o\">.</span><span class=\"na\">post</span><span class=\"o\">(</span><span class=\"s\">\"/board/remove\"</span><span class=\"o\">)</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">param</span><span class=\"o\">(</span><span class=\"s\">\"bno\"</span><span class=\"o\">,</span> <span class=\"s\">\"3\"</span><span class=\"o\">))</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">andReturn</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getModelAndView</span><span class=\"o\">()</span>\n\t\t\t\t<span class=\"o\">.</span><span class=\"na\">getViewName</span><span class=\"o\">();</span>\n\t\t<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"na\">info</span><span class=\"o\">(</span><span class=\"s\">\"resultPage::\"</span> <span class=\"o\">+</span> <span class=\"n\">resultPage</span> <span class=\"o\">);</span>\n\t<span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>  </div></div>\n","dir":"/spring5/3_webDev/","name":"11_test.md","path":"spring5/3_webDev/11_test.md","url":"/spring5/3_webDev/11_test.html"},{"sort":12,"permalink":"/python/developBlog/","layout":"default","title":"bookmark 앱 개발","content":"<h1 id=\"bookmark-앱-개발\">bookmark 앱 개발</h1>\n<blockquote>\n <p>자세한 소스는 깃헙을 확인바람</p>\n</blockquote>\n\n<ol>\n <li>설계 : 화면UI 설계 -&gt; 테이블 설계 -&gt; 로직 설계 -&gt; URL 설계 -&gt; 작업/코딩</li>\n <li>장고 뼈대 개발\n <ul>\n <li>프로젝트 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv)$ django-admin startproject mysite</code></li>\n <li>프로젝트 설정 파일 변경 : mysite/settings.py</li>\n <li>기본 테이블 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv)$ python3 manage.py migrate</code></li>\n <li>슈퍼유저 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv) $ python3 manage.py createsuperuser</code></li>\n <li>애플리케이션 생성 : <code class=\"language-plaintext highlighter-rouge\">(venv) $ python3 manage.py startapp myapp</code></li>\n <li>애플리케이션 등록 : seggings.py 의 INSTALLED_APPS 리스트에 ‘myapp.apps.MyappConfig’(예시) 추가</li>\n </ul>\n </li>\n <li>모델 개발\n <ul>\n <li>테이블 정의 : myapp/models.py</li>\n <li>admin 사이트에 테이블 반영 : myapp/admin.py</li>\n <li>데이터베이스 변경사항 반영\n <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  (venv)$ python3 manage.py makemigrations myapp\n  (venv)$ python3 manage.py migrate\n</code></pre>  </div> </div>\n </li>\n <li>테이블 모습 확인\n <ul>\n <li><code class=\"language-plaintext highlighter-rouge\">(venv)$ python3 manage.py runserver # 백그라운드 실행 시 끝에 &amp;를 붙인다.</code></li>\n <li>웹브라우저 : http://localhost:8000/admin/</li>\n </ul>\n </li>\n </ul>\n </li>\n <li>URLconf 개발</li>\n <li>뷰 개발</li>\n <li>템플릿 개발</li>\n</ol>\n\n<p>source: <code class=\"language-plaintext highlighter-rouge\">python/developBlog/README.md</code></p>\n","dir":"/python/developBlog/","name":"README.md","path":"python/developBlog/README.md","url":"/python/developBlog/"}]