[{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/folder1/","name":"file3.md","path":"test_long/folder2/folder1/file3.md","url":"/test_long/folder2/folder1/file3.html"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/","name":"file1.md","path":"test_long/folder1/folder2/file1.md","url":"/test_long/folder1/folder2/file1.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/","name":"file2.md","path":"test_long/folder1/folder2/file2.md","url":"/test_long/folder1/folder2/file2.html"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/","name":"file3.md","path":"test_long/folder1/folder2/file3.md","url":"/test_long/folder1/folder2/file3.html"},{"permalink":"/test_long/folder1/folder2/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/folder1/","name":"README.md","path":"test_long/folder1/folder2/folder1/README.md","url":"/test_long/folder1/folder2/folder1/"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/folder1/","name":"file1.md","path":"test_long/folder1/folder2/folder1/file1.md","url":"/test_long/folder1/folder2/folder1/file1.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/folder1/","name":"file2.md","path":"test_long/folder1/folder2/folder1/file2.md","url":"/test_long/folder1/folder2/folder1/file2.html"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/folder1/","name":"file3.md","path":"test_long/folder1/folder2/folder1/file3.md","url":"/test_long/folder1/folder2/folder1/file3.html"},{"permalink":"/test_long/folder2/","layout":"default","title":"I’m folder2","content":"# I'm folder2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/","name":"README.md","path":"test_long/folder2/README.md","url":"/test_long/folder2/"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/","name":"file1.md","path":"test_long/folder2/file1.md","url":"/test_long/folder2/file1.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/","name":"file2.md","path":"test_long/folder2/file2.md","url":"/test_long/folder2/file2.html"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/","name":"file3.md","path":"test_long/folder2/file3.md","url":"/test_long/folder2/file3.html"},{"permalink":"/test_long/folder2/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/folder1/","name":"README.md","path":"test_long/folder2/folder1/README.md","url":"/test_long/folder2/folder1/"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/folder1/","name":"file1.md","path":"test_long/folder2/folder1/file1.md","url":"/test_long/folder2/folder1/file1.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder2/folder1/","name":"file2.md","path":"test_long/folder2/folder1/file2.md","url":"/test_long/folder2/folder1/file2.html"},{"permalink":"//","layout":"default","title":"jekyll-rtd-theme","content":"# jekyll-rtd-theme\n\n![CI](https://github.com/rundocs/jekyll-rtd-theme/workflows/CI/badge.svg?branch=develop)\n![jsDelivr](https://data.jsdelivr.com/v1/package/gh/rundocs/jekyll-rtd-theme/badge)\n\nJust another documentation theme compatible with GitHub Pages\n\n## What it does?\n\nThis theme is inspired by [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) and refactored with:\n\n- [@primer/css](https://github.com/primer/css)\n- [github-pages](https://github.com/github/pages-gem) ([dependency versions](https://pages.github.com/versions/))\n\n## Quick start\n\n```yml\nremote_theme: rundocs/jekyll-rtd-theme\n```\n\nYou can [generate](https://github.com/rundocs/starter-slim/generate) with the same files and folders from [rundocs/starter-slim](https://github.com/rundocs/starter-slim/)\n\n## Usage\n\nDocumentation that can guide how to create with Github pages, please refer to [rundocs.io](https://rundocs.io) for details\n\n## Features\n\n- Shortcodes (Toasts card, mermaid)\n- Pages Plugins (emoji, gist, avatar, mentions)\n- Auto generate sidebar\n- [Attribute List Definitions](https://kramdown.gettalong.org/syntax.html#attribute-list-definitions) (Primer/css utilities, Font Awesome 4)\n- Service worker (caches)\n- SEO (404, robots.txt, sitemap.xml)\n- Canonical Link (Open Graph, Twitter Card, Schema data)\n\n## Options\n\n| name | default value | description |\n| ------------- | -------------------- | ----------------- |\n| `title` | repo name | |\n| `description` | repo description | |\n| `url` | user domain or cname | |\n| `baseurl` | repo name | |\n| `lang` | `en` | |\n| `direction` | `auto` | `ltr` or `rtl` |\n| `highlighter` | `rouge` | Cannot be changed |\n\n```yml\n# folders sort\nreadme_index:\n with_frontmatter: true\n\nmeta:\n key1: value1\n key2: value2\n .\n .\n .\n\ngoogle:\n gtag:\n adsense:\n\nmathjax: # this will prased to json, default: {}\n\nmermaid:\n custom: # mermaid link\n initialize: # this will prased to json, default: {}\n\nscss: # also _includes/extra/styles.scss\nscript: # also _includes/extra/script.js\n\ntranslate:\n # shortcodes\n danger:\n note:\n tip:\n warning:\n # 404\n not_found:\n # copyright\n revision:\n # search\n searching:\n search:\n search_docs:\n search_results:\n search_results_found: # the \"#\" in this translate will replaced with results size!\n search_results_not_found:\n\nplugins:\n - jemoji\n - jekyll-avatar\n - jekyll-mentions\n```\n\n## The license\n\nThe theme is available as open source under the terms of the MIT License\n","dir":"/","name":"README.md","path":"README.md","url":"/"},{"permalink":"/test_long/folder1/","layout":"default","title":"I’m folder1","content":"# I'm folder1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/","name":"README.md","path":"test_long/folder1/README.md","url":"/test_long/folder1/"},{"layout":"default","title":"file1","content":"# file1\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/","name":"file1.md","path":"test_long/folder1/file1.md","url":"/test_long/folder1/file1.html"},{"layout":"default","title":"file2","content":"# file2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/","name":"file2.md","path":"test_long/folder1/file2.md","url":"/test_long/folder1/file2.html"},{"layout":"default","title":"file3","content":"# file3\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/","name":"file3.md","path":"test_long/folder1/file3.md","url":"/test_long/folder1/file3.html"},{"permalink":"/test_long/folder1/folder2/","layout":"default","title":"I’m folder2","content":"# I'm folder2\n\nsource: `{{ page.path }}`\n","dir":"/test_long/folder1/folder2/","name":"README.md","path":"test_long/folder1/folder2/README.md","url":"/test_long/folder1/folder2/"},{"sort":1,"layout":"default","title":"Markdown Elements","content":"# Markdown Elements\n\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n\n> There should be no margin above this first sentence.\n>\n> Blockquotes should be a lighter gray with a gray border along the left side.\n>\n> There should be no margin below this final sentence.\n\n# Header 1\n\nThis is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n## Header 2\n\n> This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n\n### Header 3\n\n```\nThis is a code block following a header.\n```\n\n#### Header 4\n\n- This is an unordered list following a header.\n- This is an unordered list following a header.\n- This is an unordered list following a header.\n\n##### Header 5\n\n1. This is an ordered list following a header.\n2. This is an ordered list following a header.\n3. This is an ordered list following a header.\n\n###### Header 6\n\n| What | Follows |\n| ------- | -------- |\n| A table | A header |\n| A table | A header |\n| A table | A header |\n\n---\n\nThere's a horizontal rule above and below this.\n\n---\n\nHere is an unordered list:\n\n- Salt-n-Pepa\n- Bel Biv DeVoe\n- Kid 'N Play\n\nAnd an ordered list:\n\n1. Michael Jackson\n2. Michael Bolton\n3. Michael Bublé\n\nAnd an unordered task list:\n\n- [x] Create a sample markdown document\n- [x] Add task lists to it\n- [ ] Take a vacation\n\nAnd a \"mixed\" task list:\n\n- [ ] Steal underpants\n- ?\n- [ ] Profit!\n\nAnd a nested list:\n\n- Jackson 5\n - Michael\n - Tito\n - Jackie\n - Marlon\n - Jermaine\n- TMNT\n - Leonardo\n - Michelangelo\n - Donatello\n - Raphael\n\nDefinition lists can be used with HTML syntax. Definition terms are bold and italic.\n\n<dl>\n <dt>Name</dt>\n <dd>Godzilla</dd>\n <dt>Born</dt>\n <dd>1952</dd>\n <dt>Birthplace</dt>\n <dd>Japan</dd>\n <dt>Color</dt>\n <dd>Green</dd>\n</dl>\n\n---\n\nTables should have bold headings and alternating shaded rows.\n\n| Artist | Album | Year |\n| --------------- | -------------- | ---- |\n| Michael Jackson | Thriller | 1982 |\n| Prince | Purple Rain | 1984 |\n| Beastie Boys | License to Ill | 1986 |\n\nIf a table is too wide, it should condense down and/or scroll horizontally.\n\n<!-- prettier-ignore-start -->\n\n| Artist | Album | Year | Label | Awards | Songs |\n|-------------------|-----------------|------|-------------|----------|-----------|\n| Michael Jackson | Thriller | 1982 | Epic Records | Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical | Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life |\n| Prince | Purple Rain | 1984 | Warner Brothers Records | Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal | Let's Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I'm a Star, Purple Rain |\n| Beastie Boys | License to Ill | 1986 | Mercury Records | noawardsbutthistablecelliswide | Rhymin & Stealin, The New Style, She's Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill |\n\n<!-- prettier-ignore-end -->\n\n---\n\nCode snippets like `var foo = \"bar\";` can be shown inline.\n\nAlso, `this should vertically align` ~~`with this`~~ ~~and this~~.\n\nCode can also be shown in a block element.\n\n```\nvar foo = \"bar\";\n```\n\nCode can also use syntax highlighting.\n\n```javascript\nvar foo = \"bar\";\n```\n\n```\nLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.\n```\n\n```javascript\nvar foo =\n \"The same thing is true for code with syntax highlighting. A single line of code should horizontally scroll if it is really long.\";\n```\n\nInline code inside table cells should still be distinguishable.\n\n| Language | Code |\n| ---------- | ------------------ |\n| Javascript | `var foo = \"bar\";` |\n| Ruby | `foo = \"bar\"` |\n\n---\n\nSmall images should be shown at their actual size.\n\n![Octocat](https://github.githubassets.com/images/icons/emoji/octocat.png)\n\nLarge images should always scale down and fit in the content container.\n\n![Branching](https://guides.github.com/activities/hello-world/branching.png)\n\n```\nThis is the final element on the page and there should be no margin below this.\n```\n","dir":"/test/","name":"markdown.md","path":"test/markdown.md","url":"/test/markdown.html"},{"sort":1,"permalink":"/test/","layout":"default","title":"Test Documentation","content":"<h1 id=\"test-documentation\">Test Documentation</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/test/markdown.html\">Markdown Elements</a></li>\n <li><a href=\"/test/toasts.html\">Toasts Card</a></li>\n <li><a href=\"/test/codes.html\">Code Blocks</a></li>\n <li><a href=\"/test/mermaid.html\">Mermaid Test</a></li>\n <li><a href=\"/test/emoji.html\">Emoji Test</a></li>\n <li><a href=\"/test/gist.html\">Gist Test</a></li>\n <li><a href=\"/test/avatar.html\">Avatar Test</a></li>\n <li><a href=\"/test/mentions.html\">Mentions Test</a></li>\n <li><a href=\"/test/fonts.html\">Fonts Test</a></li>\n <li><a href=\"/test/mathjax.html\">Mathjax Test</a></li>\n <li><a href=\"/test/utilities.html\">Primer Utilities Test</a></li>\n</ul>\n","dir":"/test/","name":"README.md","path":"test/README.md","url":"/test/"},{"sort":1,"layout":"default","title":"웹 클라이언트 라이브러리","content":"# 웹 클라이언트 라이브러리\n> __KEY WORD__ \n> `#urllib.parse #urlparse() #urllib.request #urlopen() #POST요청 #Request() #build_open() #HTTPBasicAuthHandler #HTTPCookieProcessor\n> #install_open() #ProxyHandler #ProxyBasicAuthHandler #HTMLParser #feed()`\n\n## 1. urllib.parse 모듈\n> URL 분해, 조립, 변경, URL 문자 인코딩, 디코딩 등을 처리. \n> urlparse(), urljoin(), parse_qs(), quote(), encode() 함수등이 있음. \n> <https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse> \n\n### urlparse()\n- 예제\n```\n>>> from urllib.parse import urlparse\n>>> result = urlparse(\"http://www.python.org:80/guido/python.html;philosophy?overall=3#n10\")\n>> result\nParseResult(scheme='http', netloc='www.python.org:80', path='/guido/python.html', params='philosophy', query='overall=3', fragment='n10')\n```\n\n## 2. urllib.request 모듈\n> 주어진 URL에서 데이터를 가져오는 기능\n\n### urlopen()\n- 문법\n```\nurlopen(url, data=None, [timeout])\n```\n + url 인자 : 문자나 Request 클래스\n + url에 file 스킴 지정 시, 파일을 열 수 있음\n + data 인자가 None 이거나 없으면 GET 요청, data 인자로 문자열이 있으면 POST 요청 \n\n### urlopen()으로 get 방식 요청하기\n```\n>>> from urllib.request import urlopen\n>>> f = urlopen('http://www.example.com')\n>>> print(f.read(500).decode('utf-8'))\n```\n\n### urlopen()으로 post 방식 요청하기\n + data 인자는 `바이트 스트링` 이어야 함\n- 예제\n``` \n>>> from urllib.request import urlopen\n>>> data = \"language=python&framework=django\"\n>>> f = urlopen(\"http://127.0.0.1:8000\", bytes(data, encoding='utf-8'))\n>> print(f.read(500).decode('utf-8'))\n```\n\n### urlopen()과 Request 클래스 이용하여 요청 헤드 지정하기\n```\n>>> from urllib.request import urlopen, Request\n>>> from urllib.parse import urlencode\n>>>\n>>> url = 'http://127.0.0.1:8000'\n>>> data = {\n 'name':'김윤미',\n 'email':'kimyn@naver.com',\n 'url':'http://www.naver.com'\n}\n>>> encDate = urlencode(data)\n>>> postData = bytes(encData, encoding='utf-8')\n>>> req = Request(url, data=postData)\n>>> req.add_header('Content-Type', 'application/x-www-form-rulencoded')\n>>> f = req.urlopen(req)\n>>> print(f.info())\n>>> print(f.read(500).decode('utf-8'))\n```\n\n### build_opener()와 HTTPBasicAuthHandler 클래스를 이용하여 인증요청 보내기\n```\n>>> from urllib.request import HTTPBasicAuthHandler, build_opener\n>>> auth_handler = HTTPBasicAuthHandler()\n>>> auth_handler.add_password(realm='kym', user='ymkim', passwd='ymkimadmin', uri='http:// 127.0.0.1:8000/auth')\n>>> opener = build_opener(auth_handler)\n>>> resp = opener.open('http://127.0.0.1:8000/ahtu/')\n>>> print(resp.read().decode('utf-8'))\n```\n + 핸들러 생성 => 생성한 핸들러를 오프너에 전달하여 오프너 생성 => 오프너로 요청\n\n### build_open()와 HTTPCookieProcessor 클래스로 쿠키데이터 포함한 요청 하기\n```\nfrom urllib.request import Request, HTTPCookieProcessor, build_opener\nurl = 'http://127.0.0.1:8000/cookie'\n# get 방식으로 쿠키핸들러 요청하기\n# 쿠키 핸들러 생성, 쿠키 데이터 저장\ncookie_handler = HTTPCookieProcessor()\nopener = build_open(cookie_handler)\n\nreq = Request(url)\nres = opener.open(req)\nprint(res.info())\nprint(res.read().decode('utf-8'))\n\n# 이전의 요청에서 받은 쿠키를 헤더에 담아서 Post 요청\ndata = 'language=python&framework=django'\nencData = bytes(data, encoding='utf-8')\nreq = Request(url, encData)\nres = opener.open(req)\nprint(res.info())\nprint(res.read().decode('utf-8'))\n```\n\n### install_opener() 와 ProxyHandler 및 ProxyBasicAuthHandler 클래스로 프록시 처리\n```python\nimport urllib.request\n\nurl = 'http://www.example.com'\nproxyServer = 'http://www.proxy.com:3128'\n\n# proxy 서버를 설정함\nproxy_handler = urllib.request.ProxyHandler({'http':proxyServer})\n# 프록시 서버 설정 무시하고 웹서버로 요청 시,\n# proxy_handler = urllib.request.ProxyHandler({})\n\n# 프록시 서버에 대한 인증 처리\nproxy_auth_handler = urllib.request.ProxyBasicAuthHandler()\nproxy_auth_handler.add_password('realm', 'host', 'username', 'password')\n\n# 2개의 핸들러를 오프너에 등록\nopener = urllib.request.build_opener(proxy_handler, proxy_auth_handler)\n# 디폴트 오프너로 등록\nurllib.request.install_opener(opener)\n\n# opener.open() 대신 urlopen()을 사용\nf = urllib.request.urlopen(url)\nprint(\"geturl():\", f.geturl())\nprint(f.read(300).decode('utf-8'))\n```\n\n### urllib.request와 HTMLParser를 이용해서 이미지만 검색하여 리스트를 보여주기\n```python\nfrom html.parser import HTMLParser\nfrom urllib.request import urlopen\n\n# HTMLParser 를 사용할 때는, 이렇게 HTMLParser를 상속받고, 필요한 메소드를 overrwide 합니다.\nclass ImageParser(HTMLParser):\n # 'img' 태그를 찾기 위해서 handler_starttag 를 오버라이드 합니다.\n def handle_starttag(self, tag, attrs):\n if tag != 'img':\n return\n if not hasattr(self, 'result'):\n self.result = []\n\n for name, value in attrs:\n if name == 'src':\n # img src 태그를 찾으면 self.result 목록에 추가합니다.\n self.result.append(value)\n\n\ndef parse_image(data):\n parser = ImageParser()\n # HTML문장을 feed() 함수에 넣어주면, 바로 파싱하고 그 결과를 parser.result에 추가\n parser.feed(data)\n # set 에 parser.result를 넣어주어 중복된 값을 삭제합니다.\n dataSet = set( x for x in parser.result)\n return dataSet\n\ndef main():\n url = \"http://www.google.co.kr\"\n # urlopen 함수를 이용하여 구글의 첫페이지를 가져옵니다.\n with urlopen(url) as f:\n chatset = f.info().get_param('charset')\n data = f.read().decode(chatset)\n\n dataSet = parse_image(data)\n print('\\n>>>> Fetch Images from', url)\n print('\\n'.join(sorted(dataSet)))\n\n```\n\n## 3. http.client 모듈\n> GET, POST 이외의 방식으로 요청하는등 저수준의 더 세밀한 기능이 필요할 때 사용 \n> putheader(), endheaders(), send() 등의 함수가 있다. \n> 참조: <https://docs.python.org/3/library/http.client.html> \n\n### http.client 모듈의 코딩 순서\n\n|순번 |코딩순서 |코딩예시|\n|-----|---------|--------|\n|1 |연결 객체 생성 | conn = http.client.HTTPConnection('www.naver.com') |\n|2 |요청 보냄|conn.request('GET','/index.html') |\n|3 |응답 객체 생성|res = conn.getresponse() |\n|4 |응답 데이터 읽음 |data = res.read() |\n|5 |연결 닫음 |conn.close() |\n\n### GET 방식 요청하기\n\n```python\nfrom http.client import HTTPConnection\n\nhost = 'www.naver.com'\n# HTTPConnection()의 인수로 url('http://www....')이 아닌 host('www....')를 이용한다.\nconn = HTTPConnection(host)\n# conn.request(메소드, url, [body], [header])\nconn.request('GET','/')\nres1 = conn.getresponse()\nprint(res1.status, res1.reason)\n# 데이터를 모두 읽어들여야 다음 요청이 가능하다. 그렇지 않으면 error가 발생한다.\ndata1 = res1.read()\n\n# 두번째 요청\nconn.request('GET','/')\nres2 = conn.getresponse()\nprint(r2.status, r2.reason)\ndata2 = res2.read()\nprint(data2.decode())\nconn.close()\n```\n\n### HEAD 메소드로 요청하기\n\n```python\nfrom http.client import HTTPConnection\nconn = HTTPConnection('www.naver.com')\nconn.request('HEAD','/')\nresp = conn.getresponse()\ndata = resp.read()\n# head를 요청하였으므로, data( =body) 에는 아무것도 없어서 \n# 0 이 출력될 것이다.\nprint(len(data))\n```\n\n### POST 방식으로 요청하기\n```python\nfrom http.client import HTTPConnection\nfrom urllib.parse import urlencode\n\nhost = '127.0.0.1:8000'\n# 인코딩 해야 함\nparams = urlencode({\n 'language':'python',\n 'name':'김윤미',\n 'email':'kym@naver.com'\n})\nheaders = {\n 'Content-Type':'application/x-www-form-urlencoded',\n 'Accept':'text/plain'\n}\nconn = HTTPConnection(host)\nconn.request('POST','', params, headers)\nresp = conn.getresponse()\nprint(resp.status, resp.reason)\n\ndata = resp.read()\nprint(data.encode('utf-8'))\n\nconn.close()\n```\n\n### PUT 메소드로 요청하기\n\n```python\nfrom http.client import HTTPConnection\nfrom urllib.parse import urlencode\n\nhost = '127.0.0.1:8000'\n# 인코딩 해야 함\nparams = urlencode({\n 'language':'python',\n 'name':'김윤미',\n 'email':'kym@naver.com'\n})\nheaders = {\n 'Content-Type':'application/x-www-form-urlencoded',\n 'Accept':'text/plain'\n}\nconn = HTTPConnection(host)\nconn.request('PUT','', params, headers)\nresp = conn.getresponse()\nprint(resp.status, resp.reason)\n\ndata = resp.read(300)\nprint(data.encode('utf-8'))\n\nconn.close()\n```\n\n### 웹사이트에서 이미지만을 검색하여 그 이미지들을 다운로드 하는 방법\n```python\nimport os\nfrom http.client import HTTPConnection\nfrom urllib.parse import urljoin, urlunparse\nfrom urllib.request import urlretrieve\nfrom html.parser import HTMLParser\n\n# HTMLParser를 사용할 때는, HTMLParser를 상속하고, 필요한 메소드를 오버라이드하여 사용함.\nclass ImageParser(HTMLParser):\n # 이미지 태그를 찾기 위해 handle_starttag를 오버라이드 함\n def handle_starttag(self, tag, attrs):\n if tag != 'img':\n return\n if not hasattr(self, 'result'):\n self.result = []\n for name, value in attrs:\n if name == 'src':\n self.result.append(value)\n\n# HTML 문장을 feed()에 주면, 바로 파싱하고 parser.result 리스트에 추가함.\ndef download_image(url, data):\n if not os.path.exists('DOWNLOAD'):\n os.makedirs('DOWNLOAD')\n\n parser = ImageParser()\n parser.feed(data)\n dataSet = set(x for x in parser.result)\n\n for x in sorted(dataSet):\n # 다운로드 하기위해 baseUrl과 파일명을 합쳐서 완전한 다운로드 주소를 만듦\n imageUrl = urljoin(url, x)\n basename = os.path.basename(imageUrl)\n print('basename:',basename)\n targetFile = os.path.join('DOWNLOAD', basename)\n\n print('Downloading...', imageUrl)\n # src로부터 파일을 가져와서 targetFile로 생성해 줌.\n urlretrieve(imageUrl, targetFile)\n\ndef main():\n host = 'www.google.co.kr'\n\n conn = HTTPConnection(host)\n conn.request('GET','')\n resp = conn.getresponse()\n # 인코딩 방식을 알아내는 방법\n charset = resp.msg.get_param('charset')\n data = resp.read().decode(charset)\n conn.close()\n\n print('\\n>>>>>> Download Images from ', host)\n url = urlunparse(('http',host,'','','',''))\n download_image(url,data)\n\nif __name__ == '__main__':\n main()\n```\n","dir":"/python/","name":"webClientLIbrary.md","path":"python/webClientLIbrary.md","url":"/python/webClientLIbrary.html"},{"sort":2,"layout":"default","title":"Toasts Card","content":"# Toasts Card\n\nTHIS IS TOO LONG, NEED UPDATE! HERE IS SOME IDEAS:\n\n- https://primer.style/css/components/box\n- https://primer.style/css/components/toasts\n\n```note\n## This is a note\n\nMarkdown is supported, Text can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines\n\n`inline code`\n\n[`inline code inside link`](./)\n```\n\n```note\nThis is note2\n```\n\n```note\nThis is note3\n```\n\n```tip\nIt’s bigger than a bread box.\n```\n\n```tip\nIt’s tip 2\n```\n\n```warning\nStrong prose may provoke extreme mental exertion. Reader discretion is strongly advised.\n```\n\n```danger\nMad scientist at work!\n```\n","dir":"/test/","name":"toasts.md","path":"test/toasts.md","url":"/test/toasts.html"},{"sort":2,"permalink":"/test_long/","layout":"default","title":"This is an incredibly long caption for a long menu","content":"<h1 id=\"this-is-an-incredibly-long-caption-for-a-long-menu\">This is an incredibly long caption for a long menu</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [I’m folder2](/test_long/folder2/)\n    - [file1](/test_long/folder2/file1.html)\n    - [file2](/test_long/folder2/file2.html)\n    - [file3](/test_long/folder2/file3.html)\n    - [I’m folder1](/test_long/folder2/folder1/)\n        - [file3](/test_long/folder2/folder1/file3.html)\n        - [file1](/test_long/folder2/folder1/file1.html)\n        - [file2](/test_long/folder2/folder1/file2.html)\n- [I’m folder1](/test_long/folder1/)\n    - [file1](/test_long/folder1/file1.html)\n    - [file2](/test_long/folder1/file2.html)\n    - [file3](/test_long/folder1/file3.html)\n    - [I’m folder2](/test_long/folder1/folder2/)\n        - [file1](/test_long/folder1/folder2/file1.html)\n        - [file2](/test_long/folder1/folder2/file2.html)\n        - [file3](/test_long/folder1/folder2/file3.html)\n        - [I’m folder1](/test_long/folder1/folder2/folder1/)\n            - [file1](/test_long/folder1/folder2/folder1/file1.html)\n            - [file2](/test_long/folder1/folder2/folder1/file2.html)\n            - [file3](/test_long/folder1/folder2/folder1/file3.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/test_long/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/test_long/folder2/file1.html\">file1</a></li>\n <li><a href=\"/test_long/folder2/file2.html\">file2</a></li>\n <li><a href=\"/test_long/folder2/file3.html\">file3</a></li>\n <li><a href=\"/test_long/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/test_long/folder2/folder1/file3.html\">file3</a></li>\n <li><a href=\"/test_long/folder2/folder1/file1.html\">file1</a></li>\n <li><a href=\"/test_long/folder2/folder1/file2.html\">file2</a></li>\n </ul>\n </li>\n </ul>\n </li>\n <li><a href=\"/test_long/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/test_long/folder1/file1.html\">file1</a></li>\n <li><a href=\"/test_long/folder1/file2.html\">file2</a></li>\n <li><a href=\"/test_long/folder1/file3.html\">file3</a></li>\n <li><a href=\"/test_long/folder1/folder2/\">I’m folder2</a>\n <ul>\n <li><a href=\"/test_long/folder1/folder2/file1.html\">file1</a></li>\n <li><a href=\"/test_long/folder1/folder2/file2.html\">file2</a></li>\n <li><a href=\"/test_long/folder1/folder2/file3.html\">file3</a></li>\n <li><a href=\"/test_long/folder1/folder2/folder1/\">I’m folder1</a>\n <ul>\n <li><a href=\"/test_long/folder1/folder2/folder1/file1.html\">file1</a></li>\n <li><a href=\"/test_long/folder1/folder2/folder1/file2.html\">file2</a></li>\n <li><a href=\"/test_long/folder1/folder2/folder1/file3.html\">file3</a></li>\n </ul>\n </li>\n </ul>\n </li>\n </ul>\n </li>\n</ul>\n","dir":"/test_long/","name":"README.md","path":"test_long/README.md","url":"/test_long/"},{"sort":3,"permalink":"/python/","layout":"default","title":"Python","content":"<h1 id=\"python\">Python</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% include list.liquid all=true %}\n\n\n- [웹 클라이언트 라이브러리](/python/webClientLIbrary.html)\n</code></pre>  </div></div>\n\n<ul>\n <li><a href=\"/python/webClientLIbrary.html\">웹 클라이언트 라이브러리</a></li>\n</ul>\n","dir":"/python/","name":"README.md","path":"python/README.md","url":"/python/"},{"sort":3,"layout":"default","title":"Code Blocks","content":"<h1 id=\"code-blocks\">Code Blocks</h1>\n\n<p><code class=\"language-plaintext highlighter-rouge\">inline code</code></p>\n\n<p><a href=\"./\"><code class=\"language-plaintext highlighter-rouge\">inline code inside link</code></a></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>:root {\n  @for $level from 1 through 12 {\n    @if $level % 4 == 0 {\n      --toc-#{$level}: #{darken($theme-white, 4 * 8.8%)};\n    } @else {\n      --toc-#{$level}: #{darken($theme-white, $level % 4 * 8.8%)};\n    }\n  }\n}\n</code></pre>  </div></div>\n\n<p><strong>Highlight:</strong></p>\n\n<div class=\"language-scss highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">:root</span> <span class=\"p\">{</span>\n  <span class=\"k\">@for</span> <span class=\"nv\">$level</span> <span class=\"ow\">from</span> <span class=\"m\">1</span> <span class=\"ow\">through</span> <span class=\"m\">12</span> <span class=\"p\">{</span>\n    <span class=\"k\">@if</span> <span class=\"nv\">$level</span> <span class=\"o\">%</span> <span class=\"m\">4</span> <span class=\"o\">==</span> <span class=\"m\">0</span> <span class=\"p\">{</span>\n      <span class=\"nt\">--toc-</span><span class=\"si\">#{</span><span class=\"nv\">$level</span><span class=\"si\">}</span><span class=\"nd\">:</span> <span class=\"si\">#{</span><span class=\"nf\">darken</span><span class=\"p\">(</span><span class=\"nv\">$theme-white</span><span class=\"o\">,</span> <span class=\"m\">4</span> <span class=\"o\">*</span> <span class=\"m\">8</span><span class=\"mi\">.8%</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">@else</span> <span class=\"p\">{</span>\n      <span class=\"nt\">--toc-</span><span class=\"si\">#{</span><span class=\"nv\">$level</span><span class=\"si\">}</span><span class=\"nd\">:</span> <span class=\"si\">#{</span><span class=\"nf\">darken</span><span class=\"p\">(</span><span class=\"nv\">$theme-white</span><span class=\"o\">,</span> <span class=\"nv\">$level</span> <span class=\"o\">%</span> <span class=\"m\">4</span> <span class=\"o\">*</span> <span class=\"m\">8</span><span class=\"mi\">.8%</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/test/","name":"codes.md","path":"test/codes.md","url":"/test/codes.html"},{"sort":4,"layout":"default","title":"Mermaid Test","content":"# Mermaid Test\n\n ```mermaid\n graph TB\n c1-->a2\n subgraph one\n a1-->a2\n end\n subgraph two\n b1-->b2\n end\n subgraph three\n c1-->c2\n end\n ```\n\n```mermaid\ngraph TB\n c1-->a2\n subgraph one\n a1-->a2\n end\n subgraph two\n b1-->b2\n end\n subgraph three\n c1-->c2\n end\n```\n\n```mermaid\ngraph TD;\n A-->B;\n A-->C;\n B-->D;\n C-->D;\n```\n\n```mermaid\nclassDiagram\nclassA <|-- classB\nclassC *-- classD\nclassE o-- classF\nclassG <-- classH\nclassI -- classJ\nclassK <.. classL\nclassM <|.. classN\nclassO .. classP\n```\n\n```mermaid\nerDiagram\n CUSTOMER ||--o{ ORDER : places\n ORDER ||--|{ LINE-ITEM : contains\n CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n","dir":"/test/","name":"mermaid.md","path":"test/mermaid.md","url":"/test/mermaid.html"},{"sort":5,"layout":"default","title":"Emoji Test","content":"# Emoji Test\n\n```\nI give this theme two :+1:!\n```\n\nI give this theme two :+1:!\n\n```tip\nSet config `plugins: [jemoji]`, Emoji searcher, see: [https://emoji.muan.co/](https://emoji.muan.co/)\n```\n","dir":"/test/","name":"emoji.md","path":"test/emoji.md","url":"/test/emoji.html"},{"sort":6,"layout":"default","title":"Gist Test","content":"# Gist Test\n\n```\n{% raw %}{% gist c08ee0f2726fd0e3909d %}{% endraw %}\n```\n\n{% gist c08ee0f2726fd0e3909d %}\n","dir":"/test/","name":"gist.md","path":"test/gist.md","url":"/test/gist.html"},{"sort":7,"layout":"default","title":"Avatar Test","content":"<h1 id=\"avatar-test\">Avatar Test</h1>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% avatar saowang %}\n</code></pre>  </div></div>\n\n<p><img class=\"avatar avatar-small\" alt=\"saowang\" width=\"40\" height=\"40\" data-proofer-ignore=\"true\" src=\"https://avatars1.githubusercontent.com/saowang?v=3&amp;s=40\" srcset=\"https://avatars1.githubusercontent.com/saowang?v=3&amp;s=40 1x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=80 2x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=120 3x, https://avatars1.githubusercontent.com/saowang?v=3&amp;s=160 4x\" /></p>\n\n<pre><code class=\"language-tip\">Set config `plugins: [jekyll-avatar]`\n\nFor documentation, see: [https://github.com/benbalter/jekyll-avatar](https://github.com/benbalter/jekyll-avatar)\n</code></pre>  \n","dir":"/test/","name":"avatar.md","path":"test/avatar.md","url":"/test/avatar.html"},{"sort":8,"layout":"default","title":"Mentions Test","content":"# Mentions Test\n\n```\nHey @saowang, what do you think of this?\n```\n\nHey @saowang, what do you think of this?\n\n```tip\nSet config `plugins: [jekyll-mentions]`\n\nFor documentation, see: [https://github.com/jekyll/jekyll-mentions](https://github.com/jekyll/jekyll-mentions)\n```\n","dir":"/test/","name":"mentions.md","path":"test/mentions.md","url":"/test/mentions.html"},{"sort":9,"text":"ABCDEFGHIJKLMNOPQRSTUVWXYZ\nabcdefghijklmnopqrstuvwxyz\n1234567890\n一二三四五六七八九十百千萬上中下左右大小春夏秋冬東南西北金木水火土\n‘?’“!”(%)[#]{@}/&\\<-+÷×=>®©$€£¥¢:;,.*\n","layout":"default","title":"Fonts Test","content":"# Fonts Test\n\n`{:.font-mono}`\n\n```\n{{ page.text -}}\n```\n\n`{:.font-body}`\n\n{:.font-body}\n{{ page.text }}\n\n`{:.font-head}`\n\n{:.font-head}\n{{ page.text }}\n\n## font-awesome\n\n```html\n<i class=\"fa fa-check-circle text-green\">checked</i>\n<i class=\"fa fa-battery-quarter text-red\">battery</i>\n```\n\n<i class=\"fa fa-check-circle text-green\">checked</i>\n<i class=\"fa fa-battery-quarter text-red\">battery</i>\n","dir":"/test/","name":"fonts.md","path":"test/fonts.md","url":"/test/fonts.html"},{"sort":10,"layout":"default","title":"Mathjax Test","content":"# Mathjax Test\n\n$$\n\\begin{aligned}\n & \\phi(x,y) = \\phi \\left(\\sum_{i=1}^n x_ie_i, \\sum_{j=1}^n y_je_j \\right)\n = \\sum_{i=1}^n \\sum_{j=1}^n x_i y_j \\phi(e_i, e_j) = \\\\\n & (x_1, \\ldots, x_n) \\left( \\begin{array}{ccc}\n \\phi(e_1, e_1) & \\cdots & \\phi(e_1, e_n) \\\\\n \\vdots & \\ddots & \\vdots \\\\\n \\phi(e_n, e_1) & \\cdots & \\phi(e_n, e_n)\n \\end{array} \\right)\n \\left( \\begin{array}{c}\n y_1 \\\\\n \\vdots \\\\\n y_n\n \\end{array} \\right)\n\\end{aligned}\n$$\n\n```note\nFor documentation, see: https://kramdown.gettalong.org/syntax.html#math-blocks\n```\n","dir":"/test/","name":"mathjax.md","path":"test/mathjax.md","url":"/test/mathjax.html"},{"sort":11,"layout":"default","title":"Primer Utilities Test","content":"# Primer Utilities Test\n\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.text-red}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.m-5}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.mb-6}\nText can be **bold**, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.mb-6}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-2.box-shadow-large}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n{:.bg-yellow-dark.text-white.p-5.box-shadow-large.anim-pulse}\nText can be **bold**{:.h1}, _italic_, or ~~strikethrough~~. [Links](https://github.com) should be blue with no underlines (unless hovered over).\n\n```tip\nEdit this page to see how to add this to your docs, theme can use [@primer/css utilities](https://primer.style/css/utilities)\n```\n","dir":"/test/","name":"utilities.md","path":"test/utilities.md","url":"/test/utilities.html"}]